From 953ea306ffe57fa5623da4c93e536415773574b7 Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Tue, 31 Oct 2023 14:31:26 +0100
Subject: [PATCH 15/16] modules: update i2c_drivers with 6.1

i2c_remove changes its return type from int to void, so we need to
provide different versions based on kernel version.

Add variants using the following semantic patch:

// <smpl>
@r@
identifier DRIVER;
identifier remove_fn;
fresh identifier remove_fn_wrap = remove_fn ## "_6_1";
position p;
@@
struct i2c_driver DRIVER@p = {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+     .remove = remove_fn_wrap,
+#else
      .remove = remove_fn,
+#endif
};

@i depends on r@
@@
@depends on r&&!i@
@@
+#include <linux/version.h>
@depends on r@
identifier r.remove_fn;
identifier r.remove_fn_wrap;
@@
int remove_fn(...) {...}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void remove_fn_wrap(struct i2c_Client *client)
+{
+     remove_fn(client);
+}
+#endif
// </smpl>

applied with

  spatch --smpl-spacing --sp-file 6.1-i2c_remove_sig.cocci --in-place --dir packages/

Result taken as is, without any code style fixes.

Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 .../base/any/kernels/modules/accton_i2c_psu.c  | 10 ++++++++++
 .../base/any/kernels/modules/cpr_4011_4mxx.c   | 10 ++++++++++
 packages/base/any/kernels/modules/dps850.c     | 15 +++++++++++++--
 packages/base/any/kernels/modules/emerson700.c |  4 ++++
 packages/base/any/kernels/modules/optoe.c      | 10 ++++++++++
 packages/base/any/kernels/modules/ym2651y.c    | 10 ++++++++++
 .../modules/accton_as4610_cpld.c               | 10 ++++++++++
 .../modules/accton_as4610_psu.c                | 11 +++++++++++
 .../builds/x86-64-accton-as4222-28pe-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54pe-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54pe-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as4630-54te-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54te-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5512-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5512-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5712-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5712-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5812-54t-cpld.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5812-54t-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5812-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5812-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5822-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5822-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5835-54t-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5835-54t-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5835-54t-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5835-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5835-54x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5835-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5912-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5912-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5912-54xk-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54xk-fan.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5912-54xk-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5915-18x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5915-18x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5915-18x-fpga.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5915-18x-psu.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-as5915-18x-sys.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54xk-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xk-fan.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54xk-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54xm-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xm-fan.c     | 11 +++++++++++
 .../builds/x86-64-accton-as5916-54xm-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as6712-32x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as6712-32x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as6812-32x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as6812-32x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7112-54x-cpld.c     | 15 +++++++++++++--
 .../builds/x86-64-accton-as7112-54x-fan.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7112-54x-psu.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7312-54x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as7312-54x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7312-54x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7312-54xs-cpld.c    | 10 ++++++++++
 .../builds/x86-64-accton-as7312-54xs-fan.c     | 11 +++++++++++
 .../builds/x86-64-accton-as7312-54xs-psu.c     | 11 +++++++++++
 .../modules/builds/accton_as7315_27xb_fan.c    | 11 +++++++++++
 .../modules/builds/at24_as7315_27xb.c          | 11 +++++++++++
 .../builds/x86-64-accton-as7315-27xb-cpld.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7315-27xb-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as7315-30x-cpld.c     | 10 ++++++++++
 .../x86-64-accton-as7315-30x-fan-eeprom.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7315-30x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7315-30x-fpga.c     | 10 ++++++++++
 .../builds/x86-64-accton-as7315-30x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7315-30x-sys.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7326-56x-cpld.c     | 15 +++++++++++++--
 .../builds/x86-64-accton-as7326-56x-fan.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7326-56x-psu.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7512-32x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as7512-32x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7512-32x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7535-28xb-cpld.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7712-32x-cpld1.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7712-32x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7712-32x-psu.c      | 11 +++++++++++
 .../x86-64-accton-as7716-24sc-expansion_card.c | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24sc-fan.c     | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24sc-psu.c     | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24sc-sfp.c     | 18 +++++++++++++++---
 .../x86-64-accton-as7716-24xc-expansion_card.c | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24xc-fan.c     | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24xc-psu.c     | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-24xc-sfp.c     | 18 +++++++++++++++---
 .../builds/x86-64-accton-as7716-32x-cpld1.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7716-32x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7716-32x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7726-32x-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as7726-32x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7726-32x-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7816-64x-cpld1.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7816-64x-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as7926-40xfb-cpld.c   | 11 +++++++++++
 .../builds/x86-64-accton-as7926-40xke-cpld.c   | 11 +++++++++++
 .../builds/x86-64-accton-as7926-40xke-fan.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7926-40xke-psu.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7926-80xk-cpld.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7926-80xk-fan.c     | 11 +++++++++++
 .../builds/x86-64-accton-as7926-80xk-psu.c     | 11 +++++++++++
 .../builds/x86-64-accton-as7936-22xke-cpld.c   | 11 +++++++++++
 .../builds/x86-64-accton-as7946-30xb-cpld.c    | 11 +++++++++++
 .../builds/x86-64-accton-as7946-74xkb-cpld.c   | 11 +++++++++++
 .../builds/x86-64-accton-as9716-32d-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as9716-32d-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as9716-32d-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as9926-24d-cpld.c     | 10 ++++++++++
 .../builds/x86-64-accton-as9926-24d-fan.c      | 11 +++++++++++
 .../builds/x86-64-accton-as9926-24d-psu.c      | 11 +++++++++++
 .../builds/x86-64-accton-as9926-24d-sys.c      | 11 +++++++++++
 .../builds/x86-64-accton-asgvolt64-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-asxvolt16-cpld.c      | 18 +++++++++++++++---
 .../builds/x86-64-accton-asxvolt16-fan.c       | 18 +++++++++++++++---
 .../builds/x86-64-accton-asxvolt16-psu.c       | 18 +++++++++++++++---
 .../builds/x86-64-accton-asxvolt16-sfp.c       | 18 +++++++++++++++---
 .../builds/x86-64-accton-csp9250-cpld.c        | 11 +++++++++++
 .../modules/builds/x86-64-accton-csp9250-fan.c | 11 +++++++++++
 .../modules/builds/x86-64-accton-csp9250-psu.c | 11 +++++++++++
 .../modules/builds/x86-64-accton-csp9250-sfp.c | 11 +++++++++++
 .../builds/x86-64-accton-es7632bt3-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-es7632bt3-fan.c       | 11 +++++++++++
 .../builds/x86-64-accton-es7632bt3-psu.c       | 11 +++++++++++
 .../x86-64/modules/builds/accton_i2c_cpld.c    | 11 +++++++++++
 .../modules/builds/scg60d0-484t_onie_eeprom.c  | 11 +++++++++++
 .../modules/builds/scg60d0-484t_psu.c          | 15 +++++++++++++--
 .../modules/builds/snj60d0-320f_fpga.c         | 11 +++++++++++
 .../modules/builds/snj60d0-320f_i2c_mux_cpld.c | 10 ++++++++++
 .../modules/builds/snj60d0-320f_onie_eeprom.c  | 11 +++++++++++
 .../modules/builds/snj61d0-320f_cpld.c         | 10 ++++++++++
 .../modules/builds/snj61d0-320f_fpga.c         | 11 +++++++++++
 .../modules/builds/snj61d0-320f_onie_eeprom.c  | 11 +++++++++++
 .../belgite/modules/builds/src/platform_fan.c  | 11 +++++++++++
 .../belgite/modules/builds/src/platform_psu.c  |  5 +++++
 .../silverstone/modules/builds/src/mc24lc64t.c | 11 +++++++++++
 .../silverstone/modules/builds/src/optoe.c     | 11 +++++++++++
 .../ag5648/modules/builds/dni_ag5648_psu.c     | 11 +++++++++++
 .../ag5648/modules/builds/dni_ag5648_sfp.c     | 11 +++++++++++
 .../x86-64/ag5648/modules/builds/dni_emc2305.c | 14 ++++++++++++++
 .../ag9032v1/modules/builds/dni_ag9032v1_psu.c | 11 +++++++++++
 .../ag9032v1/modules/builds/dni_ag9032v1_sfp.c | 11 +++++++++++
 .../ag9032v1/modules/builds/dni_emc2305.c      | 11 +++++++++++
 .../modules/builds/dni_ag9032v2a_psu.c         | 11 +++++++++++
 .../ag9032v2a/modules/builds/dni_emc2305.c     | 11 +++++++++++
 .../modules/builds/dni_agc7646slv1b_psu.c      | 11 +++++++++++
 .../agc7646slv1b/modules/builds/dni_emc2305.c  | 11 +++++++++++
 .../modules/builds/dni_agc7646v1_psu.c         | 11 +++++++++++
 .../agc7646v1/modules/builds/dni_emc2305.c     | 11 +++++++++++
 .../modules/builds/agc7648a_dps800ab.c         | 11 +++++++++++
 .../agc7648a/modules/builds/agc7648a_emc2305.c | 11 +++++++++++
 .../agc7648a/modules/builds/agc7648a_sfp.c     | 11 +++++++++++
 .../ak7448/modules/builds/dni_ak7448_psu.c     | 11 +++++++++++
 .../x86-64/ak7448/modules/builds/dni_emc2305.c | 11 +++++++++++
 .../delta/x86-64/modules/builds/i2c_cpld.c     | 10 ++++++++++
 .../ingrasys/x86-64/modules/builds/eeprom_mb.c | 11 +++++++++++
 .../builds/ingrasys_s9230_64x_i2c_cpld.c       | 11 +++++++++++
 .../modules/builds/ingrasys_s9230_64x_psu.c    | 11 +++++++++++
 .../builds/ingrasys_s9280_64x_i2c_cpld.c       | 11 +++++++++++
 .../modules/builds/ingrasys_s9280_64x_psu.c    | 11 +++++++++++
 .../d10056/modules/builds/src/inv_cpld.c       | 11 +++++++++++
 .../x86-64/d3352/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../x86-64/d3352/modules/builds/src/inv_psoc.c | 11 +++++++++++
 .../x86-64/d5052/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../x86-64/d5052/modules/builds/src/inv_psoc.c | 11 +++++++++++
 .../x86-64/d5254/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../d5264q28b/modules/builds/src/inv_cpld.c    | 11 +++++++++++
 .../d5264q28b/modules/builds/src/inv_eeprom.c  | 11 +++++++++++
 .../d6254qs/modules/builds/src/inv_cpld.c      | 11 +++++++++++
 .../d6254qs/modules/builds/src/inv_psoc.c      | 11 +++++++++++
 .../x86-64/d6332/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../d6332/modules/builds/src/inv_eeprom.c      | 11 +++++++++++
 .../x86-64/d6332/modules/builds/src/ucd9000.c  |  5 +++++
 .../d6356/modules/builds/src/i2c-mux-pca9541.c | 11 +++++++++++
 .../d6356/modules/builds/src/i2c-mux-pca9641.c | 11 +++++++++++
 .../modules/builds/src/inv-i2c-mux-pca9641.c   | 11 +++++++++++
 .../x86-64/d6356/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../d6356/modules/builds/src/inv_eeprom.c      | 11 +++++++++++
 .../x86-64/d6356/modules/builds/src/ucd9000.c  |  5 +++++
 .../x86-64/d6556/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../d7032q28b/modules/builds/src/inv_cpld.c    | 11 +++++++++++
 .../d7032q28b/modules/builds/src/inv_psoc.c    | 11 +++++++++++
 .../d7054q28b/modules/builds/src/inv_cpld.c    | 11 +++++++++++
 .../d7054q28b/modules/builds/src/inv_psoc.c    | 11 +++++++++++
 .../d7264q28b/modules/builds/src/inv_cpld.c    | 11 +++++++++++
 .../modules/builds/src/inv-i2c-mux-pca9641.c   | 11 +++++++++++
 .../x86-64/d7332/modules/builds/src/inv_cpld.c | 11 +++++++++++
 .../d7332/modules/builds/src/inv_eeprom.c      | 11 +++++++++++
 .../x86-64/d7332/modules/builds/src/inv_psu.c  | 11 +++++++++++
 .../d7332/modules/builds/src/inv_ucd90160.c    | 11 +++++++++++
 .../x86-64/modules/builds/src/inv_eeprom.c     | 11 +++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-fse000.c      | 10 ++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-master_cpld.c | 11 +++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c  | 11 +++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-system_cpld.c | 11 +++++++++++
 .../aurora-610/modules/builds/src/net_cpld.c   | 18 +++++++++++++++---
 .../builds/netberg_aurora_750_i2c_cpld.c       | 11 +++++++++++
 .../modules/builds/netberg_aurora_750_psu.c    | 11 +++++++++++
 .../modules/builds/src/net-i2c-mux-pca9641.c   | 11 +++++++++++
 .../aurora-820/modules/builds/src/net_cpld.c   | 11 +++++++++++
 .../aurora-820/modules/builds/src/net_eeprom.c | 11 +++++++++++
 .../aurora-820/modules/builds/src/net_psu.c    | 11 +++++++++++
 .../modules/builds/src/net_ucd90160.c          | 11 +++++++++++
 .../netberg/x86-64/modules/builds/eeprom_mb.c  | 11 +++++++++++
 .../x86-64/modules/builds/hardware_monitor.c   | 11 +++++++++++
 .../ly2/modules/builds/quanta-ly-hwmon.c       | 11 +++++++++++
 .../ly2/modules/builds/quanta-ly2-i2c-mux.c    | 11 +++++++++++
 .../modules/builds/quanta-ly6-i2c-mux.c        | 11 +++++++++++
 .../quanta/x86-64/modules/builds/qci_cpld.c    | 11 +++++++++++
 .../x86-64/modules/builds/qci_cpld_led.c       | 11 +++++++++++
 .../x86-64/modules/builds/qci_cpld_sfp28.c     | 11 +++++++++++
 .../quanta/x86-64/modules/builds/qci_pmbus.c   |  5 +++++
 .../modules/builds/quanta_hwmon_ix_series.c    | 11 +++++++++++
 .../modules/builds/quanta_hwmon_ly_series.c    | 11 +++++++++++
 .../builds/src/x86-64-ufispace-eeprom-mb.c     | 11 +++++++++++
 .../src/x86-64-ufispace-s9700-23d-cpld.c       | 11 +++++++++++
 .../src/x86-64-ufispace-s9700-53dx-cpld.c      | 11 +++++++++++
 .../src/x86-64-ufispace-s9705-48d-cpld.c       | 11 +++++++++++
 .../modules/builds/rseb-w1-32-cpu_cpld.c       | 11 +++++++++++
 .../modules/builds/rseb-w1-32-system_cpld.c    | 11 +++++++++++
 .../modules/builds/rseb-w1-32_psu.c            | 11 +++++++++++
 .../modules/builds/tps53681.c                  |  5 +++++
 225 files changed, 2484 insertions(+), 62 deletions(-)

diff --git a/packages/base/any/kernels/modules/accton_i2c_psu.c b/packages/base/any/kernels/modules/accton_i2c_psu.c
index 279ffd9d541c..d3b769b347b8 100755
--- a/packages/base/any/kernels/modules/accton_i2c_psu.c
+++ b/packages/base/any/kernels/modules/accton_i2c_psu.c
@@ -367,6 +367,12 @@ static int accton_i2c_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void accton_i2c_psu_remove_6_1(struct i2c_client *client)
+{
+    accton_i2c_psu_remove(client);
+}
+#endif
 /* Support psu moduel
  */
 static const struct i2c_device_id accton_i2c_psu_id[] = {
@@ -382,7 +388,11 @@ static struct i2c_driver accton_i2c_psu_driver = {
         .name     = "accton_i2c_psu",
     },
     .probe        = accton_i2c_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = accton_i2c_psu_remove_6_1,
+#else
     .remove       = accton_i2c_psu_remove,
+#endif
     .id_table     = accton_i2c_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/base/any/kernels/modules/cpr_4011_4mxx.c b/packages/base/any/kernels/modules/cpr_4011_4mxx.c
index cfb58ee4d0cd..e67833a0cc26 100644
--- a/packages/base/any/kernels/modules/cpr_4011_4mxx.c
+++ b/packages/base/any/kernels/modules/cpr_4011_4mxx.c
@@ -280,6 +280,12 @@ static int cpr_4011_4mxx_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpr_4011_4mxx_remove_6_1(struct i2c_client *client)
+{
+    cpr_4011_4mxx_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpr_4011_4mxx_id[] = {
     { "cpr_4011_4mxx", 0 },
@@ -293,7 +299,11 @@ static struct i2c_driver cpr_4011_4mxx_driver = {
         .name     = "cpr_4011_4mxx",
     },
     .probe        = cpr_4011_4mxx_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = cpr_4011_4mxx_remove_6_1,
+#else
     .remove       = cpr_4011_4mxx_remove,
+#endif
     .id_table     = cpr_4011_4mxx_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/base/any/kernels/modules/dps850.c b/packages/base/any/kernels/modules/dps850.c
index cb7c1d8f5560..de33815344a1 100755
--- a/packages/base/any/kernels/modules/dps850.c
+++ b/packages/base/any/kernels/modules/dps850.c
@@ -289,7 +289,13 @@ static int dps850_remove(struct i2c_client *client)
 	kfree(data);
 
 	return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps850_remove_6_1(struct i2c_client *client)
+{
+	dps850_remove(client);
+}
+#endif
 
 static const struct i2c_device_id dps850_id[] = {
 	{ "dps850", DPS850 },
@@ -303,7 +309,12 @@ static struct i2c_driver dps850_driver = {
 		.name	= "dps850",
 	},
 	.probe	  = dps850_probe,
-	.remove	  = dps850_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = dps850_remove_6_1,
+#else
+	.remove	  = dps850_remove,
+#endif
+	
 	.id_table = dps850_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/base/any/kernels/modules/emerson700.c b/packages/base/any/kernels/modules/emerson700.c
index b1a537c8f2ba..2bec1abd5b08 100644
--- a/packages/base/any/kernels/modules/emerson700.c
+++ b/packages/base/any/kernels/modules/emerson700.c
@@ -227,7 +227,11 @@ static struct i2c_driver emerson700_pmbus_driver = {
 		   .name = "emerson700",
 		   },
 	.probe = emerson700_pmbus_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = emerson700_pmbus_id,
 };
 
diff --git a/packages/base/any/kernels/modules/optoe.c b/packages/base/any/kernels/modules/optoe.c
index af85e2a29a0c..f5bcc6a91b46 100644
--- a/packages/base/any/kernels/modules/optoe.c
+++ b/packages/base/any/kernels/modules/optoe.c
@@ -835,6 +835,12 @@ static int optoe_remove(struct i2c_client *client)
 	kfree(optoe);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void optoe_remove_6_1(struct i2c_client *client)
+{
+	optoe_remove(client);
+}
+#endif
 
 static ssize_t show_dev_class(struct device *dev,
 			struct device_attribute *dattr, char *buf)
@@ -1196,7 +1202,11 @@ static struct i2c_driver optoe_driver = {
 		.of_match_table = of_match_ptr(optoe_of_ids),
 	},
 	.probe = optoe_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = optoe_remove_6_1,
+#else
 	.remove = optoe_remove,
+#endif
 	.id_table = optoe_ids,
 };
 
diff --git a/packages/base/any/kernels/modules/ym2651y.c b/packages/base/any/kernels/modules/ym2651y.c
index 1f641ab7a619..0450fcf5f8dc 100755
--- a/packages/base/any/kernels/modules/ym2651y.c
+++ b/packages/base/any/kernels/modules/ym2651y.c
@@ -601,6 +601,12 @@ static int ym2651y_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void ym2651y_remove_6_1(struct i2c_client *client)
+{
+    ym2651y_remove(client);
+}
+#endif
 
 static const struct i2c_device_id ym2651y_id[] = {
     { "ym2651", YM2651 },
@@ -631,7 +637,11 @@ static struct i2c_driver ym2651y_driver = {
         .of_match_table = of_match_ptr(ym2651y_of_id),
     },
     .probe    = ym2651y_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = ym2651y_remove_6_1,
+#else
     .remove   = ym2651y_remove,
+#endif
     .id_table = ym2651y_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
index 2ee2d1631095..db5a70f234eb 100644
--- a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
+++ b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
@@ -492,6 +492,12 @@ static int as4610_54_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4610_54_cpld_remove_6_1(struct i2c_client *client)
+{
+    as4610_54_cpld_remove(client);
+}
+#endif
 
 static int as4610_54_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -603,7 +609,11 @@ static struct i2c_driver as4610_54_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as4610_54_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4610_54_cpld_remove_6_1,
+#else
 	.remove		= as4610_54_cpld_remove,
+#endif
 	.id_table	= as4610_54_cpld_id,
 };
 
diff --git a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
index 9a579e79aec9..da3bbc7707ed 100644
--- a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
+++ b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME 11
 #define MAX_SERIAL_NUMBER 18
@@ -190,6 +191,12 @@ static int as4610_psu_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4610_psu_remove_6_1(struct i2c_client *client)
+{
+	as4610_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -210,7 +217,11 @@ static struct i2c_driver as4610_psu_driver = {
 		.name	  = "as4610_psu",
 	},
 	.probe		  = as4610_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4610_psu_remove_6_1,
+#else
 	.remove		  = as4610_psu_remove,
+#endif
 	.id_table	  = as4610_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c b/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
index a71dbc35ed94..0e27088a9489 100755
--- a/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
+++ b/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
@@ -603,6 +603,12 @@ static int as4222_28pe_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4222_28pe_cpld_remove_6_1(struct i2c_client *client)
+{
+    as4222_28pe_cpld_remove(client);
+}
+#endif
 
 static int as4222_28pe_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -694,7 +700,11 @@ static struct i2c_driver as4222_28pe_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as4222_28pe_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4222_28pe_cpld_remove_6_1,
+#else
 	.remove		= as4222_28pe_cpld_remove,
+#endif
 	.id_table	= as4222_28pe_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
index 97e49402f031..d2b689942f57 100755
--- a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
+++ b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
@@ -748,6 +748,12 @@ static int as4630_54pe_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4630_54pe_cpld_remove_6_1(struct i2c_client *client)
+{
+    as4630_54pe_cpld_remove(client);
+}
+#endif
 
 static int as4630_54pe_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -839,7 +845,11 @@ static struct i2c_driver as4630_54pe_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as4630_54pe_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4630_54pe_cpld_remove_6_1,
+#else
 	.remove		= as4630_54pe_cpld_remove,
+#endif
 	.id_table	= as4630_54pe_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
index 73f1e672e52c..f3351b56c4a1 100755
--- a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
+++ b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          20
 #define MAX_SERIAL_NUMBER       19
@@ -208,6 +209,12 @@ static int as4630_54pe_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4630_54pe_psu_remove_6_1(struct i2c_client *client)
+{
+    as4630_54pe_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -228,7 +235,11 @@ static struct i2c_driver as4630_54pe_psu_driver = {
         .name     = "as4630_54pe_psu",
     },
     .probe        = as4630_54pe_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as4630_54pe_psu_remove_6_1,
+#else
     .remove       = as4630_54pe_psu_remove,
+#endif
     .id_table     = as4630_54pe_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
index e0f9d87e5451..a7ba133b7aaa 100644
--- a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
+++ b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
@@ -784,6 +784,12 @@ static int as4630_54te_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4630_54te_cpld_remove_6_1(struct i2c_client *client)
+{
+	as4630_54te_cpld_remove(client);
+}
+#endif
 
 static int as4630_54te_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -874,7 +880,11 @@ static struct i2c_driver as4630_54te_cpld_driver = {
 		.owner= THIS_MODULE,
 	},
 	.probe = as4630_54te_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4630_54te_cpld_remove_6_1,
+#else
 	.remove = as4630_54te_cpld_remove,
+#endif
 	.id_table = as4630_54te_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
index f39985560a46..418d037017ee 100644
--- a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
+++ b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME 13
 #define MAX_SERIAL_NUMBER 18
@@ -214,6 +215,12 @@ static int as4630_54te_psu_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as4630_54te_psu_remove_6_1(struct i2c_client *client)
+{
+	as4630_54te_psu_remove(client);
+}
+#endif
 
 enum psu_index {
 	as4630_54te_psu1,
@@ -233,7 +240,11 @@ static struct i2c_driver as4630_54te_psu_driver = {
 		.name = "as4630_54te_psu",
 	},
 	.probe = as4630_54te_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as4630_54te_psu_remove_6_1,
+#else
 	.remove = as4630_54te_psu_remove,
+#endif
 	.id_table = as4630_54te_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
index ba36420c8926..2c7a4498f18a 100644
--- a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
@@ -1002,6 +1002,12 @@ static int as5512_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5512_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5512_54x_cpld_remove(client);
+}
+#endif
 
 static int as5512_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1093,7 +1099,11 @@ static struct i2c_driver as5512_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5512_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5512_54x_cpld_remove_6_1,
+#else
 	.remove		= as5512_54x_cpld_remove,
+#endif
 	.id_table	= as5512_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
index 09db8e45e663..6219f21cea25 100644
--- a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
@@ -31,6 +31,7 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 static ssize_t show_index(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
@@ -209,6 +210,12 @@ static int as5512_54x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5512_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5512_54x_psu_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as5512_54x_psu_id[] = {
     { "as5512_54x_psu", 0 },
@@ -222,7 +229,11 @@ static struct i2c_driver as5512_54x_psu_driver = {
         .name     = "as5512_54x_psu",
     },
     .probe        = as5512_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5512_54x_psu_remove_6_1,
+#else
     .remove       = as5512_54x_psu_remove,
+#endif
     .id_table     = as5512_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
index d483aa7466d0..12c5f12c01c0 100644
--- a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
@@ -1157,6 +1157,12 @@ static int as5712_54x_cpld_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5712_54x_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+    as5712_54x_cpld_mux_remove(client);
+}
+#endif
 
 static int as5712_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1246,7 +1252,11 @@ static struct i2c_driver as5712_54x_cpld_mux_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5712_54x_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5712_54x_cpld_mux_remove_6_1,
+#else
 	.remove		= as5712_54x_cpld_mux_remove,
+#endif
 	.id_table	= as5712_54x_cpld_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
index 7bd3449c441d..09755854fcaf 100644
--- a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
@@ -31,6 +31,7 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -220,6 +221,12 @@ static int as5712_54x_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5712_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5712_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -240,7 +247,11 @@ static struct i2c_driver as5712_54x_psu_driver = {
         .name     = "as5712_54x_psu",
     },
     .probe        = as5712_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5712_54x_psu_remove_6_1,
+#else
     .remove       = as5712_54x_psu_remove,
+#endif
     .id_table     = as5712_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
index 640ab89416be..c7e35df4f7fb 100644
--- a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
+++ b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -379,6 +380,12 @@ static int as5812_54t_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5812_54t_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5812_54t_cpld_remove(client);
+}
+#endif
 
 int as5812_54t_cpld_read(unsigned short cpld_addr, u8 reg)
 {
@@ -440,7 +447,11 @@ static struct i2c_driver as5812_54t_cpld_driver = {
         .name     = "as5812_54t_cpld",
     },
     .probe        = as5812_54t_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5812_54t_cpld_remove_6_1,
+#else
     .remove       = as5812_54t_cpld_remove,
+#endif
     .id_table     = as5812_54t_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
index b6d381b9ce17..b48a6470c59f 100644
--- a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
+++ b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
@@ -31,6 +31,7 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -220,6 +221,12 @@ static int as5812_54t_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5812_54t_psu_remove_6_1(struct i2c_client *client)
+{
+    as5812_54t_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -240,7 +247,11 @@ static struct i2c_driver as5812_54t_psu_driver = {
         .name     = "as5812_54t_psu",
     },
     .probe        = as5812_54t_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5812_54t_psu_remove_6_1,
+#else
     .remove       = as5812_54t_psu_remove,
+#endif
     .id_table     = as5812_54t_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
index 16453bf33aba..34a547c18359 100644
--- a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
@@ -1158,6 +1158,12 @@ static int as5812_54x_cpld_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5812_54x_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+    as5812_54x_cpld_mux_remove(client);
+}
+#endif
 
 static int as5812_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1247,7 +1253,11 @@ static struct i2c_driver as5812_54x_cpld_mux_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5812_54x_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5812_54x_cpld_mux_remove_6_1,
+#else
 	.remove		= as5812_54x_cpld_mux_remove,
+#endif
 	.id_table	= as5812_54x_cpld_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
index c31b2ab6d5c0..302d5c0f80af 100755
--- a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
@@ -31,6 +31,7 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -258,6 +259,12 @@ static int as5812_54x_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5812_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5812_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -278,7 +285,11 @@ static struct i2c_driver as5812_54x_psu_driver = {
         .name     = "as5812_54x_psu",
     },
     .probe        = as5812_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5812_54x_psu_remove_6_1,
+#else
     .remove       = as5812_54x_psu_remove,
+#endif
     .id_table     = as5812_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
index 455614ef0d4e..0ee359bae6fe 100644
--- a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
@@ -1033,6 +1033,12 @@ static int as5822_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5822_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5822_54x_cpld_remove(client);
+}
+#endif
 
 static int as5822_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1124,7 +1130,11 @@ static struct i2c_driver as5822_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5822_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5822_54x_cpld_remove_6_1,
+#else
 	.remove		= as5822_54x_cpld_remove,
+#endif
 	.id_table	= as5822_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
index 1259ec9ab45b..374dc3989987 100644
--- a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -212,6 +213,12 @@ static int as5822_54x_psu_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5822_54x_psu_remove_6_1(struct i2c_client *client)
+{
+	as5822_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -232,7 +239,11 @@ static struct i2c_driver as5822_54x_psu_driver = {
 		.name	 = "as5822_54x_psu",
 	},
 	.probe		= as5822_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5822_54x_psu_remove_6_1,
+#else
 	.remove	   = as5822_54x_psu_remove,
+#endif
 	.id_table	 = as5822_54x_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
index 953c60f771f0..71fa6f679eb7 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
@@ -493,6 +493,12 @@ static int as5835_54t_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54t_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5835_54t_cpld_remove(client);
+}
+#endif
 
 static int as5835_54t_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -584,7 +590,11 @@ static struct i2c_driver as5835_54t_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5835_54t_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5835_54t_cpld_remove_6_1,
+#else
 	.remove		= as5835_54t_cpld_remove,
+#endif
 	.id_table	= as5835_54t_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
index 66fcb5630fa8..8411e9fe60a5 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/platform_device.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5835_54t_fan"
 #define MAX_FAN_SPEED_RPM	21500
@@ -464,6 +465,12 @@ static int as5835_54t_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54t_fan_remove_6_1(struct i2c_client *client)
+{
+    as5835_54t_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5835_54t_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5835_54t_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5835_54t_fan_remove_6_1,
+#else
     .remove       = as5835_54t_fan_remove,
+#endif
     .id_table     = as5835_54t_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
index 32009cc84942..634eb0307a64 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -211,6 +212,12 @@ static int as5835_54t_psu_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54t_psu_remove_6_1(struct i2c_client *client)
+{
+	as5835_54t_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -231,7 +238,11 @@ static struct i2c_driver as5835_54t_psu_driver = {
 		.name	 = "as5835_54t_psu",
 	},
 	.probe		= as5835_54t_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5835_54t_psu_remove_6_1,
+#else
 	.remove	   = as5835_54t_psu_remove,
+#endif
 	.id_table	 = as5835_54t_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
index b490e3a5b7a0..330fafa905e0 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
@@ -1086,6 +1086,12 @@ static int as5835_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5835_54x_cpld_remove(client);
+}
+#endif
 
 static int as5835_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1177,7 +1183,11 @@ static struct i2c_driver as5835_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5835_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5835_54x_cpld_remove_6_1,
+#else
 	.remove		= as5835_54x_cpld_remove,
+#endif
 	.id_table	= as5835_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
index 892dd0e87fa7..9214e8a2848e 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/platform_device.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5835_54x_fan"
 #define MAX_FAN_SPEED_RPM	21500
@@ -464,6 +465,12 @@ static int as5835_54x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54x_fan_remove_6_1(struct i2c_client *client)
+{
+    as5835_54x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5835_54x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5835_54x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5835_54x_fan_remove_6_1,
+#else
     .remove       = as5835_54x_fan_remove,
+#endif
     .id_table     = as5835_54x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
index c2b6e7a89981..2b001bd12a42 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x60
@@ -211,6 +212,12 @@ static int as5835_54x_psu_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5835_54x_psu_remove_6_1(struct i2c_client *client)
+{
+	as5835_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -231,7 +238,11 @@ static struct i2c_driver as5835_54x_psu_driver = {
 		.name	 = "as5835_54x_psu",
 	},
 	.probe		= as5835_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5835_54x_psu_remove_6_1,
+#else
 	.remove	   = as5835_54x_psu_remove,
+#endif
 	.id_table	 = as5835_54x_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
index 3c8d557cc63c..febb79ba90ba 100644
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
@@ -983,6 +983,12 @@ static int as5912_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5912_54x_cpld_remove(client);
+}
+#endif
 
 static int as5912_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1074,7 +1080,11 @@ static struct i2c_driver as5912_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5912_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5912_54x_cpld_remove_6_1,
+#else
 	.remove		= as5912_54x_cpld_remove,
+#endif
 	.id_table	= as5912_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
index c4005dd94546..c62ec0f51f48 100755
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5912_54x_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -472,6 +473,12 @@ static int as5912_54x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54x_fan_remove_6_1(struct i2c_client *client)
+{
+    as5912_54x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -488,7 +495,11 @@ static struct i2c_driver as5912_54x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5912_54x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5912_54x_fan_remove_6_1,
+#else
     .remove       = as5912_54x_fan_remove,
+#endif
     .id_table     = as5912_54x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
index e02c0ccc2829..0ac26fa9246d 100644
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -209,6 +210,12 @@ static int as5912_54x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5912_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -229,7 +236,11 @@ static struct i2c_driver as5912_54x_psu_driver = {
         .name     = "as5912_54x_psu",
     },
     .probe        = as5912_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5912_54x_psu_remove_6_1,
+#else
     .remove       = as5912_54x_psu_remove,
+#endif
     .id_table     = as5912_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
index aba702715147..c76bb2e6ba19 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
@@ -983,6 +983,12 @@ static int as5912_54xk_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54xk_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5912_54xk_cpld_remove(client);
+}
+#endif
 
 static int as5912_54xk_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1074,7 +1080,11 @@ static struct i2c_driver as5912_54xk_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5912_54xk_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5912_54xk_cpld_remove_6_1,
+#else
 	.remove		= as5912_54xk_cpld_remove,
+#endif
 	.id_table	= as5912_54xk_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
index 030e323553f8..7455e9726b7a 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5912_54xk_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -464,6 +465,12 @@ static int as5912_54xk_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54xk_fan_remove_6_1(struct i2c_client *client)
+{
+    as5912_54xk_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5912_54xk_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5912_54xk_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5912_54xk_fan_remove_6_1,
+#else
     .remove       = as5912_54xk_fan_remove,
+#endif
     .id_table     = as5912_54xk_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
index 8d6e899b159f..4faddf1e40a0 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as5912_54xk_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5912_54xk_psu_remove_6_1(struct i2c_client *client)
+{
+    as5912_54xk_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -205,7 +212,11 @@ static struct i2c_driver as5912_54xk_psu_driver = {
         .name     = "as5912_54xk_psu",
     },
     .probe        = as5912_54xk_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5912_54xk_psu_remove_6_1,
+#else
     .remove       = as5912_54xk_psu_remove,
+#endif
     .id_table     = as5912_54xk_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
index e9c05cf5c72e..3b20ebbbca84 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
@@ -534,6 +534,12 @@ static int as5915_18x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5915_18x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5915_18x_cpld_remove(client);
+}
+#endif
 
 static int as5915_18x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -625,7 +631,11 @@ static struct i2c_driver as5915_18x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5915_18x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5915_18x_cpld_remove_6_1,
+#else
 	.remove		= as5915_18x_cpld_remove,
+#endif
 	.id_table	= as5915_18x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
index 0cd0d52a6202..4e12ca4e2d48 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/platform_device.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5915_18x_fan"
 #define MAX_FAN_SPEED_RPM	22000
@@ -468,6 +469,12 @@ static int as5915_18x_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5915_18x_fan_remove_6_1(struct i2c_client *client)
+{
+    as5915_18x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -484,7 +491,11 @@ static struct i2c_driver as5915_18x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5915_18x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5915_18x_fan_remove_6_1,
+#else
     .remove       = as5915_18x_fan_remove,
+#endif
     .id_table     = as5915_18x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
index f6dc7e56f568..8af16954229a 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
@@ -353,6 +353,12 @@ static int as5915_18x_fpga_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5915_18x_fpga_mux_remove_6_1(struct i2c_client *client)
+{
+    as5915_18x_fpga_mux_remove(client);
+}
+#endif
 
 static int as5915_18x_fpga_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -442,7 +448,11 @@ static struct i2c_driver as5915_18x_fpga_mux_driver = {
         .owner    = THIS_MODULE,
     },
     .probe        = as5915_18x_fpga_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5915_18x_fpga_mux_remove_6_1,
+#else
     .remove        = as5915_18x_fpga_mux_remove,
+#endif
     .id_table    = as5915_18x_fpga_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
index 8f21905b9f7a..48710e3cae9f 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
@@ -31,7 +31,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/printk.h>
+#include <linux/printk.h>
+#include <linux/version.h>
 
 #define DRV_NAME        "as5915_18x_psu"
 #define PSU_STATUS_FPGA_I2C_ADDR    	0x64
@@ -268,7 +269,13 @@ static int as5915_18x_psu_remove(struct i2c_client *client)
     kfree(data);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5915_18x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5915_18x_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -287,7 +294,12 @@ static struct i2c_driver as5915_18x_psu_driver = {
         .name     = DRV_NAME,
     },
     .probe        = as5915_18x_psu_probe,
-    .remove       = as5915_18x_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5915_18x_psu_remove_6_1,
+#else
+    .remove       = as5915_18x_psu_remove,
+#endif
+    
     .id_table     = as5915_18x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
index e306270860cb..78194f942fb5 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE 256
 
@@ -152,6 +153,12 @@ static int as5915_18x_sys_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5915_18x_sys_remove_6_1(struct i2c_client *client)
+{
+    as5915_18x_sys_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as5915_18x_sys_id[] = {
     { "as5915_18x_sys", 0 },
@@ -165,7 +172,11 @@ static struct i2c_driver as5915_18x_sys_driver = {
         .name     = "as5915_18x_sys",
     },
     .probe        = as5915_18x_sys_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5915_18x_sys_remove_6_1,
+#else
     .remove       = as5915_18x_sys_remove,
+#endif
     .id_table     = as5915_18x_sys_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
index 646cb0253890..d38bee1f2393 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
@@ -983,6 +983,12 @@ static int as5916_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5916_54x_cpld_remove(client);
+}
+#endif
 
 static int as5916_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1074,7 +1080,11 @@ static struct i2c_driver as5916_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5916_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5916_54x_cpld_remove_6_1,
+#else
 	.remove		= as5916_54x_cpld_remove,
+#endif
 	.id_table	= as5916_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
index aa08e7e4e592..233a87aa0471 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5916_54x_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -464,6 +465,12 @@ static int as5916_54x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54x_fan_remove_6_1(struct i2c_client *client)
+{
+    as5916_54x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5916_54x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5916_54x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54x_fan_remove_6_1,
+#else
     .remove       = as5916_54x_fan_remove,
+#endif
     .id_table     = as5916_54x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
index acb7441d0aab..59cc9f4a7d62 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as5916_54x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as5916_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -205,7 +212,11 @@ static struct i2c_driver as5916_54x_psu_driver = {
         .name     = "as5916_54x_psu",
     },
     .probe        = as5916_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54x_psu_remove_6_1,
+#else
     .remove       = as5916_54x_psu_remove,
+#endif
     .id_table     = as5916_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
index 0ec59ad4f389..d34ae408d40a 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
@@ -983,6 +983,12 @@ static int as5916_54xk_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xk_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xk_cpld_remove(client);
+}
+#endif
 
 static int as5916_54xk_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1074,7 +1080,11 @@ static struct i2c_driver as5916_54xk_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5916_54xk_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5916_54xk_cpld_remove_6_1,
+#else
 	.remove		= as5916_54xk_cpld_remove,
+#endif
 	.id_table	= as5916_54xk_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
index eab9fe409b38..803e3993aee2 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5916_54xk_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -464,6 +465,12 @@ static int as5916_54xk_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xk_fan_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xk_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5916_54xk_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5916_54xk_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54xk_fan_remove_6_1,
+#else
     .remove       = as5916_54xk_fan_remove,
+#endif
     .id_table     = as5916_54xk_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
index 08ba42f5ed04..143686ed4b12 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as5916_54xk_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xk_psu_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xk_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -205,7 +212,11 @@ static struct i2c_driver as5916_54xk_psu_driver = {
         .name     = "as5916_54xk_psu",
     },
     .probe        = as5916_54xk_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54xk_psu_remove_6_1,
+#else
     .remove       = as5916_54xk_psu_remove,
+#endif
     .id_table     = as5916_54xk_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
index d7074786e145..903fe1fadeb1 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
@@ -983,6 +983,12 @@ static int as5916_54xm_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xm_cpld_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xm_cpld_remove(client);
+}
+#endif
 
 static int as5916_54xm_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1074,7 +1080,11 @@ static struct i2c_driver as5916_54xm_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as5916_54xm_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as5916_54xm_cpld_remove_6_1,
+#else
 	.remove		= as5916_54xm_cpld_remove,
+#endif
 	.id_table	= as5916_54xm_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
index 796eeb85e5e2..f09a9a118e78 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as5916_54xm_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -464,6 +465,12 @@ static int as5916_54xm_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xm_fan_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xm_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as5916_54xm_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as5916_54xm_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54xm_fan_remove_6_1,
+#else
     .remove       = as5916_54xm_fan_remove,
+#endif
     .id_table     = as5916_54xm_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
index 3415704aa148..84a5877c80ee 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as5916_54xm_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as5916_54xm_psu_remove_6_1(struct i2c_client *client)
+{
+    as5916_54xm_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -205,7 +212,11 @@ static struct i2c_driver as5916_54xm_psu_driver = {
         .name     = "as5916_54xm_psu",
     },
     .probe        = as5916_54xm_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as5916_54xm_psu_remove_6_1,
+#else
     .remove       = as5916_54xm_psu_remove,
+#endif
     .id_table     = as5916_54xm_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
index 3db31a54844a..1edf0311efe1 100644
--- a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
@@ -605,6 +605,12 @@ static int as6712_32x_cpld_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as6712_32x_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+    as6712_32x_cpld_mux_remove(client);
+}
+#endif
 
 static int as6712_32x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -694,7 +700,11 @@ static struct i2c_driver as6712_32x_cpld_mux_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as6712_32x_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as6712_32x_cpld_mux_remove_6_1,
+#else
 	.remove		= as6712_32x_cpld_mux_remove,
+#endif
 	.id_table	= as6712_32x_cpld_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
index aaa0f54461c0..6f0e45a8368c 100644
--- a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
@@ -31,6 +31,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x2
@@ -219,6 +220,12 @@ static int as6712_32x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as6712_32x_psu_remove_6_1(struct i2c_client *client)
+{
+    as6712_32x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -239,7 +246,11 @@ static struct i2c_driver as6712_32x_psu_driver = {
         .name     = "as6712_32x_psu",
     },
     .probe        = as6712_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as6712_32x_psu_remove_6_1,
+#else
     .remove       = as6712_32x_psu_remove,
+#endif
     .id_table     = as6712_32x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
index b8c9d01bc63c..7a0fa3a8031a 100644
--- a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
@@ -607,6 +607,12 @@ static int as6812_32x_cpld_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as6812_32x_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+    as6812_32x_cpld_mux_remove(client);
+}
+#endif
 
 static int as6812_32x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -697,7 +703,11 @@ static struct i2c_driver as6812_32x_cpld_mux_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as6812_32x_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as6812_32x_cpld_mux_remove_6_1,
+#else
 	.remove		= as6812_32x_cpld_mux_remove,
+#endif
 	.id_table	= as6812_32x_cpld_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
index 551732ecc187..9db0aeed2193 100755
--- a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
@@ -32,6 +32,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x2
@@ -244,6 +245,12 @@ static int as6812_32x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as6812_32x_psu_remove_6_1(struct i2c_client *client)
+{
+    as6812_32x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -264,7 +271,11 @@ static struct i2c_driver as6812_32x_psu_driver = {
         .name     = "as6812_32x_psu",
     },
     .probe        = as6812_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as6812_32x_psu_remove_6_1,
+#else
     .remove       = as6812_32x_psu_remove,
+#endif
     .id_table     = as6812_32x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
index 6764bcdbe77e..de23fcc8c445 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
@@ -1039,7 +1039,13 @@ static int as7112_54x_cpld_remove(struct i2c_client *client)
     kfree(data);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7112_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7112_54x_cpld_remove(client);
+}
+#endif
 
 static int as7112_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1131,7 +1137,12 @@ static struct i2c_driver as7112_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7112_54x_cpld_probe,
-	.remove		= as7112_54x_cpld_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7112_54x_cpld_remove_6_1,
+#else
+	.remove		= as7112_54x_cpld_remove,
+#endif
+	
 	.id_table	= as7112_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
index b7127379eef7..56ecc3abbc54 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
@@ -28,7 +28,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7112_54x_fan"
 
@@ -456,7 +457,13 @@ static int as7112_54x_fan_remove(struct i2c_client *client)
     sysfs_remove_group(&client->dev.kobj, &as7112_54x_fan_group);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7112_54x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7112_54x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -473,7 +480,12 @@ static struct i2c_driver as7112_54x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7112_54x_fan_probe,
-    .remove       = as7112_54x_fan_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7112_54x_fan_remove_6_1,
+#else
+    .remove       = as7112_54x_fan_remove,
+#endif
+    
     .id_table     = as7112_54x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
index 7afa14d1657c..e16bf68b862b 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
@@ -32,7 +32,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x2
@@ -224,7 +225,13 @@ static int as7112_54x_psu_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7112_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7112_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -245,7 +252,12 @@ static struct i2c_driver as7112_54x_psu_driver = {
         .name     = "as7112_54x_psu",
     },
     .probe        = as7112_54x_psu_probe,
-    .remove       = as7112_54x_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7112_54x_psu_remove_6_1,
+#else
+    .remove       = as7112_54x_psu_remove,
+#endif
+    
     .id_table     = as7112_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
index 1937c1964f1a..c2467ab242c4 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
@@ -1018,6 +1018,12 @@ static int as7312_54x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7312_54x_cpld_remove(client);
+}
+#endif
 
 static int as7312_54x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1109,7 +1115,11 @@ static struct i2c_driver as7312_54x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7312_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7312_54x_cpld_remove_6_1,
+#else
 	.remove		= as7312_54x_cpld_remove,
+#endif
 	.id_table	= as7312_54x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
index e20cde8dae9b..fa568270fb46 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7312_54x_fan"
 
@@ -463,6 +464,12 @@ static int as7312_54x_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7312_54x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -479,7 +486,11 @@ static struct i2c_driver as7312_54x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7312_54x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7312_54x_fan_remove_6_1,
+#else
     .remove       = as7312_54x_fan_remove,
+#endif
     .id_table     = as7312_54x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
index 4f06b1f91149..af8b4fe87aa7 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as7312_54x_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7312_54x_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -205,7 +212,11 @@ static struct i2c_driver as7312_54x_psu_driver = {
         .name     = "as7312_54x_psu",
     },
     .probe        = as7312_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7312_54x_psu_remove_6_1,
+#else
     .remove       = as7312_54x_psu_remove,
+#endif
     .id_table     = as7312_54x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
index 8b79eb1bcad2..33b1e0336c3c 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
@@ -1018,6 +1018,12 @@ static int as7312_54xs_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54xs_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7312_54xs_cpld_remove(client);
+}
+#endif
 
 static int as7312_54xs_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1109,7 +1115,11 @@ static struct i2c_driver as7312_54xs_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7312_54xs_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7312_54xs_cpld_remove_6_1,
+#else
 	.remove		= as7312_54xs_cpld_remove,
+#endif
 	.id_table	= as7312_54xs_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
index de5ea8ce60ab..f941c7f3abd5 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7312_54xs_fan"
 
@@ -462,6 +463,12 @@ static int as7312_54xs_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54xs_fan_remove_6_1(struct i2c_client *client)
+{
+    as7312_54xs_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -478,7 +485,11 @@ static struct i2c_driver as7312_54xs_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7312_54xs_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7312_54xs_fan_remove_6_1,
+#else
     .remove       = as7312_54xs_fan_remove,
+#endif
     .id_table     = as7312_54xs_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
index 9dce6fc1d288..25d5fa4f2b92 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -185,6 +186,12 @@ static int as7312_54xs_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7312_54xs_psu_remove_6_1(struct i2c_client *client)
+{
+    as7312_54xs_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -205,7 +212,11 @@ static struct i2c_driver as7312_54xs_psu_driver = {
         .name     = "as7312_54xs_psu",
     },
     .probe        = as7312_54xs_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7312_54xs_psu_remove_6_1,
+#else
     .remove       = as7312_54xs_psu_remove,
+#endif
     .id_table     = as7312_54xs_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
index 616b2d7bdce0..1d0421268cbe 100644
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
@@ -34,6 +34,7 @@
 #include <linux/device.h>
 #include <linux/delay.h>
 #include <linux/printk.h>
+#include <linux/version.h>
 
 
 #define DRV_NAME "as7315_27xb_fan"
@@ -645,6 +646,12 @@ static int fan_remove(struct i2c_client *client)
     kfree(data->group.attrs);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void fan_remove_6_1(struct i2c_client *client)
+{
+    fan_remove(client);
+}
+#endif
 
 
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -655,7 +662,11 @@ static struct i2c_driver as7315_i2c_fan_driver = {
         .name = DRV_NAME,
     },
     .probe		= fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = fan_remove_6_1,
+#else
     .remove	   	= fan_remove,
+#endif
     .id_table     = as7315_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
index 8d8c7601a71d..c2e28f42c178 100755
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
@@ -28,6 +28,7 @@
 #include <linux/platform_data/at24.h>
 #include <linux/printk.h>
 #include <asm/uaccess.h>
+#include <linux/version.h>
 /*
  * I2C EEPROMs from most vendors are inexpensive and mostly interchangeable.
  * Differences between different vendor product lines (like Atmel AT24C or
@@ -659,6 +660,12 @@ static int at24_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void at24_remove_6_1(struct i2c_client *client)
+{
+	at24_remove(client);
+}
+#endif
 
 /*-------------------------------------------------------------------------*/
 
@@ -668,7 +675,11 @@ static struct i2c_driver at24_as7315_27xb_driver = {
 		.acpi_match_table = ACPI_PTR(at24_acpi_ids),
 	},
 	.probe = at24_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = at24_remove_6_1,
+#else
 	.remove = at24_remove,
+#endif
 	.id_table = at24_ids,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
index 134167d5f7f1..00dba8fd0dfe 100755
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
@@ -35,6 +35,7 @@
 #include <linux/delay.h>
 #include <linux/list.h>
 #include <linux/printk.h>
+#include <linux/version.h>
 
 
 #define DRV_NAME    "as7315_i2c_cpld"
@@ -948,6 +949,12 @@ static int as7315_i2c_cpld_remove(struct i2c_client *client)
     accton_i2c_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7315_i2c_cpld_remove(client);
+}
+#endif
 
 int accton_i2c_cpld_read(u8 cpld_addr, u8 reg)
 {
@@ -1004,7 +1011,11 @@ static struct i2c_driver as7315_i2c_cpld_driver = {
         .name = DRV_NAME,
     },
     .probe		= as7315_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7315_i2c_cpld_remove_6_1,
+#else
     .remove	   	= as7315_i2c_cpld_remove,
+#endif
     .id_table     = as7315_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
index 7dd4441d8ace..f98717de7626 100644
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
@@ -32,6 +32,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/printk.h>
+#include <linux/version.h>
 
 #define DRV_NAME        "as7315_27xb_psu"
 #define PSU_STATUS_I2C_ADDR			0x64
@@ -276,6 +277,12 @@ static int as7315_27xb_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_27xb_psu_remove_6_1(struct i2c_client *client)
+{
+    as7315_27xb_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -296,7 +303,11 @@ static struct i2c_driver as7315_27xb_psu_driver = {
         .name     = DRV_NAME,
     },
     .probe        = as7315_27xb_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7315_27xb_psu_remove_6_1,
+#else
     .remove       = as7315_27xb_psu_remove,
+#endif
     .id_table     = as7315_27xb_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
index b9dad9cda459..bd7ebbd5e6d8 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
@@ -616,6 +616,12 @@ static int as7315_30x_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_cpld_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_cpld_remove(client);
+}
+#endif
 
 static int as7315_30x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -708,7 +714,11 @@ static struct i2c_driver as7315_30x_cpld_driver = {
 		.owner = THIS_MODULE,
 	},
 	.probe = as7315_30x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_cpld_remove_6_1,
+#else
 	.remove = as7315_30x_cpld_remove,
+#endif
 	.id_table = as7315_30x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
index 2c0d2cdd4777..3103b3e28163 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define FAN_DIR_LEN 6
 #define FAN_DIR_REG_OFFSET 0x11
@@ -237,6 +238,12 @@ static int as7315_30x_fan_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_fan_eeprom_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_fan_eeprom_remove(client);
+}
+#endif
 
 enum fan_index
 {
@@ -255,7 +262,11 @@ static struct i2c_driver as7315_30x_fan_eeprom_driver = {
 		.name = "as7315_fan_eeprom",
 	},
 	.probe = as7315_30x_fan_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_fan_eeprom_remove_6_1,
+#else
 	.remove = as7315_30x_fan_eeprom_remove,
+#endif
 	.id_table = as7315_30x_fan_eeprom_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
index 2473c55007ca..059a7d33db31 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/platform_device.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7315_30x_fan"
 #define MAX_FAN_SPEED_RPM	22000
@@ -511,6 +512,12 @@ static int as7315_30x_fan_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_fan_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -527,7 +534,11 @@ static struct i2c_driver as7315_30x_fan_driver = {
 		.name	 = DRVNAME,
 	},
 	.probe		= as7315_30x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_fan_remove_6_1,
+#else
 	.remove	   = as7315_30x_fan_remove,
+#endif
 	.id_table	 = as7315_30x_fan_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
index 76788da491b1..b808e6d10817 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
@@ -534,6 +534,12 @@ static int as7315_30x_fpga_mux_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_fpga_mux_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_fpga_mux_remove(client);
+}
+#endif
 
 static int as7315_30x_fpga_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -623,7 +629,11 @@ static struct i2c_driver as7315_30x_fpga_mux_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7315_30x_fpga_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_fpga_mux_remove_6_1,
+#else
 	.remove		= as7315_30x_fpga_mux_remove,
+#endif
 	.id_table	= as7315_30x_fpga_mux_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
index 379dbb370c56..8f2829f7b80d 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR 0x64
@@ -213,6 +214,12 @@ static int as7315_30x_psu_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_psu_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -233,7 +240,11 @@ static struct i2c_driver as7315_30x_psu_driver = {
 		.name = "as7315_30x_psu",
 	},
 	.probe = as7315_30x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_psu_remove_6_1,
+#else
 	.remove = as7315_30x_psu_remove,
+#endif
 	.id_table = as7315_30x_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
index 5895800f9614..08cb13171410 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE 256
 
@@ -149,6 +150,12 @@ static int as7315_30x_sys_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7315_30x_sys_remove_6_1(struct i2c_client *client)
+{
+	as7315_30x_sys_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7315_30x_sys_id[] = {
 	{ "as7315_30x_sys", 0 },
@@ -162,7 +169,11 @@ static struct i2c_driver as7315_30x_sys_driver = {
 		.name = "as7315_30x_sys",
 	},
 	.probe = as7315_30x_sys_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7315_30x_sys_remove_6_1,
+#else
 	.remove = as7315_30x_sys_remove,
+#endif
 	.id_table = as7315_30x_sys_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
index 7985f09aa94c..9e75838555ed 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
@@ -1028,7 +1028,13 @@ static int as7326_56x_cpld_remove(struct i2c_client *client)
     kfree(data);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7326_56x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7326_56x_cpld_remove(client);
+}
+#endif
 
 static int as7326_56x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1120,7 +1126,12 @@ static struct i2c_driver as7326_56x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7326_56x_cpld_probe,
-	.remove		= as7326_56x_cpld_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7326_56x_cpld_remove_6_1,
+#else
+	.remove		= as7326_56x_cpld_remove,
+#endif
+	
 	.id_table	= as7326_56x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
index 69364115d7e1..9320f3c3f610 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
@@ -30,7 +30,8 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/fs.h>
-#include <asm/uaccess.h>
+#include <asm/uaccess.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7326_56x_fan"
 
@@ -929,7 +930,13 @@ static int as7326_56x_fan_remove(struct i2c_client *client)
     sysfs_remove_group(&client->dev.kobj, &as7326_56x_fan_group);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7326_56x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7326_56x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -946,7 +953,12 @@ static struct i2c_driver as7326_56x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7326_56x_fan_probe,
-    .remove       = as7326_56x_fan_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7326_56x_fan_remove_6_1,
+#else
+    .remove       = as7326_56x_fan_remove,
+#endif
+    
     .id_table     = as7326_56x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
index 1c9bdc1d2593..3481acc33899 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
@@ -32,7 +32,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          16
 #define MAX_SERIAL_NUMBER       19
@@ -215,7 +216,13 @@ static int as7326_56x_psu_remove(struct i2c_client *client)
     kfree(data);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7326_56x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7326_56x_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -236,7 +243,12 @@ static struct i2c_driver as7326_56x_psu_driver = {
         .name     = "as7326_56x_psu",
     },
     .probe        = as7326_56x_psu_probe,
-    .remove       = as7326_56x_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7326_56x_psu_remove_6_1,
+#else
+    .remove       = as7326_56x_psu_remove,
+#endif
+    
     .id_table     = as7326_56x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
index bc105f3d84b9..7b3ee1294076 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
@@ -478,6 +478,12 @@ static int as7512_32x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7512_32x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7512_32x_cpld_remove(client);
+}
+#endif
 
 static int as7512_32x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -569,7 +575,11 @@ static struct i2c_driver as7512_32x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7512_32x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7512_32x_cpld_remove_6_1,
+#else
 	.remove		= as7512_32x_cpld_remove,
+#endif
 	.id_table	= as7512_32x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
index 722b8c076937..cc6dcb6884c3 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7512_32x_fan"
 
@@ -471,6 +472,12 @@ static int as7512_32x_fan_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7512_32x_fan_remove_6_1(struct i2c_client *client)
+{
+	as7512_32x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -487,7 +494,11 @@ static struct i2c_driver as7512_32x_fan_driver = {
 		.name	= DRVNAME,
 	},
 	.probe		= as7512_32x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7512_32x_fan_remove_6_1,
+#else
 	.remove	    = as7512_32x_fan_remove,
+#endif
 	.id_table	= as7512_32x_fan_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
index c5f06506caa8..aab93f92c12d 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
@@ -32,6 +32,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -191,6 +192,12 @@ static int as7512_32x_psu_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7512_32x_psu_remove_6_1(struct i2c_client *client)
+{
+	as7512_32x_psu_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7512_32x_psu_id[] = {
 	{ "as7512_32x_psu", 0 },
@@ -204,7 +211,11 @@ static struct i2c_driver as7512_32x_psu_driver = {
 		.name	  = "as7512_32x_psu",
 	},
 	.probe		  = as7512_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7512_32x_psu_remove_6_1,
+#else
 	.remove		  = as7512_32x_psu_remove,
+#endif
 	.id_table	  = as7512_32x_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c b/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
index bafbfddb8086..fe837053000c 100644
--- a/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7535_28xb_cpld"
 
@@ -780,6 +781,12 @@ static int as7535_28xb_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7535_28xb_cpld_remove_6_1(struct i2c_client *client)
+{
+	as7535_28xb_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7535_28xb_cpld_id[] = {
 	{ "as7535_28xb_cpld", as7535_28xb_cpld },
@@ -793,7 +800,11 @@ static struct i2c_driver as7535_28xb_cpld_driver = {
 		.name = DRVNAME,
 	},
 	.probe = as7535_28xb_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7535_28xb_cpld_remove_6_1,
+#else
 	.remove = as7535_28xb_cpld_remove,
+#endif
 	.id_table = as7535_28xb_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
index 3ffb77f3f372..3499718eb35a 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -473,6 +474,12 @@ static int as7712_32x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7712_32x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7712_32x_cpld_remove(client);
+}
+#endif
 
 int as7712_32x_cpld_read(unsigned short cpld_addr, u8 reg)
 {
@@ -534,7 +541,11 @@ static struct i2c_driver as7712_32x_cpld_driver = {
         .name     = "as7712_32x_cpld1",
     },
     .probe        = as7712_32x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7712_32x_cpld_remove_6_1,
+#else
     .remove       = as7712_32x_cpld_remove,
+#endif
     .id_table     = as7712_32x_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
index 8b2be6d88125..6671f80d9ee8 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7712_32x_fan"
 
@@ -466,6 +467,12 @@ static int as7712_32x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7712_32x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7712_32x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -482,7 +489,11 @@ static struct i2c_driver as7712_32x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7712_32x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7712_32x_fan_remove_6_1,
+#else
     .remove       = as7712_32x_fan_remove,
+#endif
     .id_table     = as7712_32x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
index 5f470f8c3955..ccf26f2f1509 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          16
 #define MAX_SERIAL_NUMBER       19
@@ -225,6 +226,12 @@ static int as7712_32x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7712_32x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7712_32x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -245,7 +252,11 @@ static struct i2c_driver as7712_32x_psu_driver = {
         .name     = "as7712_32x_psu",
     },
     .probe        = as7712_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7712_32x_psu_remove_6_1,
+#else
     .remove       = as7712_32x_psu_remove,
+#endif
     .id_table     = as7712_32x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
index 6ecb8f775fe7..3c07f306e8dc 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
@@ -31,7 +31,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define CPLD_I2C_ADDR				0x60
 #define EXPANSION_CARD_PRESENT_REG	0x7A
@@ -232,7 +233,13 @@ static int as7716_24sc_expansion_card_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24sc_expansion_card_remove_6_1(struct i2c_client *client)
+{
+    as7716_24sc_expansion_card_remove(client);
+}
+#endif
 
 enum expansion_card_index 
 { 
@@ -267,7 +274,12 @@ static struct i2c_driver as7716_24sc_expansion_card_driver = {
         .name     = "as7716_24sc_expansion_card",
     },
     .probe        = as7716_24sc_expansion_card_probe,
-    .remove       = as7716_24sc_expansion_card_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24sc_expansion_card_remove_6_1,
+#else
+    .remove       = as7716_24sc_expansion_card_remove,
+#endif
+    
     .id_table     = as7716_24sc_expansion_card_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
index 1e2968ca508d..2fecf004d215 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
@@ -28,7 +28,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7716_24sc_fan"
 
@@ -426,7 +427,13 @@ static int as7716_24sc_fan_remove(struct i2c_client *client)
     sysfs_remove_group(&client->dev.kobj, &as7716_24sc_fan_group);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24sc_fan_remove_6_1(struct i2c_client *client)
+{
+    as7716_24sc_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -443,7 +450,12 @@ static struct i2c_driver as7716_24sc_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7716_24sc_fan_probe,
-    .remove       = as7716_24sc_fan_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24sc_fan_remove_6_1,
+#else
+    .remove       = as7716_24sc_fan_remove,
+#endif
+    
     .id_table     = as7716_24sc_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
index a8f0d80d1753..02ead58e0582 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
@@ -32,7 +32,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x03
@@ -167,7 +168,13 @@ static int as7716_24sc_psu_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24sc_psu_remove_6_1(struct i2c_client *client)
+{
+    as7716_24sc_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -188,7 +195,12 @@ static struct i2c_driver as7716_24sc_psu_driver = {
         .name     = "as7716_24sc_psu",
     },
     .probe        = as7716_24sc_psu_probe,
-    .remove       = as7716_24sc_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24sc_psu_remove_6_1,
+#else
+    .remove       = as7716_24sc_psu_remove,
+#endif
+    
     .id_table     = as7716_24sc_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
index 577bdb3577fd..34fefc4f4954 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
@@ -30,7 +30,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define DRIVER_NAME 	"as7716_24sc_sfp" /* Platform dependent */
 
@@ -985,7 +986,13 @@ static int sfp_device_remove(struct i2c_client *client)
 
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void sfp_device_remove_6_1(struct i2c_client *client)
+{
+	sfp_device_remove(client);
+}
+#endif
 
 /* Addresses scanned
  */
@@ -996,7 +1003,12 @@ static struct i2c_driver sfp_driver = {
 		.name	  = DRIVER_NAME,
 	},
 	.probe		  = sfp_device_probe,
-	.remove		  = sfp_device_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = sfp_device_remove_6_1,
+#else
+	.remove		  = sfp_device_remove,
+#endif
+	
 	.id_table	  = sfp_device_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
index 70925e59d2f7..40026d02a912 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
@@ -31,7 +31,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define CPLD_I2C_ADDR				0x60
 #define EXPANSION_CARD_PRESENT_REG	0x7A
@@ -232,7 +233,13 @@ static int as7716_24xc_expansion_card_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24xc_expansion_card_remove_6_1(struct i2c_client *client)
+{
+    as7716_24xc_expansion_card_remove(client);
+}
+#endif
 
 enum expansion_card_index 
 { 
@@ -267,7 +274,12 @@ static struct i2c_driver as7716_24xc_expansion_card_driver = {
         .name     = "as7716_24xc_expansion_card",
     },
     .probe        = as7716_24xc_expansion_card_probe,
-    .remove       = as7716_24xc_expansion_card_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24xc_expansion_card_remove_6_1,
+#else
+    .remove       = as7716_24xc_expansion_card_remove,
+#endif
+    
     .id_table     = as7716_24xc_expansion_card_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
index f6f1cae85251..c5e84d0a61b0 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
@@ -28,7 +28,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7716_24xc_fan"
 
@@ -426,7 +427,13 @@ static int as7716_24xc_fan_remove(struct i2c_client *client)
     sysfs_remove_group(&client->dev.kobj, &as7716_24xc_fan_group);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24xc_fan_remove_6_1(struct i2c_client *client)
+{
+    as7716_24xc_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -443,7 +450,12 @@ static struct i2c_driver as7716_24xc_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7716_24xc_fan_probe,
-    .remove       = as7716_24xc_fan_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24xc_fan_remove_6_1,
+#else
+    .remove       = as7716_24xc_fan_remove,
+#endif
+    
     .id_table     = as7716_24xc_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
index 6849f062d4a9..7bef1f5f4437 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
@@ -32,7 +32,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x03
@@ -167,7 +168,13 @@ static int as7716_24xc_psu_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_24xc_psu_remove_6_1(struct i2c_client *client)
+{
+    as7716_24xc_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -188,7 +195,12 @@ static struct i2c_driver as7716_24xc_psu_driver = {
         .name     = "as7716_24xc_psu",
     },
     .probe        = as7716_24xc_psu_probe,
-    .remove       = as7716_24xc_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_24xc_psu_remove_6_1,
+#else
+    .remove       = as7716_24xc_psu_remove,
+#endif
+    
     .id_table     = as7716_24xc_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
index aee1e5290519..45e4f8f51870 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
@@ -30,7 +30,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define DRIVER_NAME 	"as7716_24xc_sfp" /* Platform dependent */
 
@@ -985,7 +986,13 @@ static int sfp_device_remove(struct i2c_client *client)
 
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void sfp_device_remove_6_1(struct i2c_client *client)
+{
+	sfp_device_remove(client);
+}
+#endif
 
 /* Addresses scanned
  */
@@ -996,7 +1003,12 @@ static struct i2c_driver sfp_driver = {
 		.name	  = DRIVER_NAME,
 	},
 	.probe		  = sfp_device_probe,
-	.remove		  = sfp_device_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = sfp_device_remove_6_1,
+#else
+	.remove		  = sfp_device_remove,
+#endif
+	
 	.id_table	  = sfp_device_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
index ad7f0d48ce96..5dc4ec302788 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -473,6 +474,12 @@ static int as7716_32x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_32x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7716_32x_cpld_remove(client);
+}
+#endif
 
 int as7716_32x_cpld_read(unsigned short cpld_addr, u8 reg)
 {
@@ -534,7 +541,11 @@ static struct i2c_driver as7716_32x_cpld_driver = {
         .name     = "as7716_32x_cpld1",
     },
     .probe        = as7716_32x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_32x_cpld_remove_6_1,
+#else
     .remove       = as7716_32x_cpld_remove,
+#endif
     .id_table     = as7716_32x_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
index 818cd36181eb..2fdae8f0599e 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7716_32x_fan"
 
@@ -464,6 +465,12 @@ static int as7716_32x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_32x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7716_32x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -480,7 +487,11 @@ static struct i2c_driver as7716_32x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7716_32x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_32x_fan_remove_6_1,
+#else
     .remove       = as7716_32x_fan_remove,
+#endif
     .id_table     = as7716_32x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
index 294a72633c35..1d59fbaced59 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          16
 #define MAX_SERIAL_NUMBER       19
@@ -225,6 +226,12 @@ static int as7716_32x_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7716_32x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7716_32x_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -245,7 +252,11 @@ static struct i2c_driver as7716_32x_psu_driver = {
         .name     = "as7716_32x_psu",
     },
     .probe        = as7716_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7716_32x_psu_remove_6_1,
+#else
     .remove       = as7716_32x_psu_remove,
+#endif
     .id_table     = as7716_32x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
index ab0b9c4527f0..fbabae198ea6 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
@@ -625,6 +625,12 @@ static int as7726_32x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7726_32x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7726_32x_cpld_remove(client);
+}
+#endif
 
 static int as7726_32x_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -716,7 +722,11 @@ static struct i2c_driver as7726_32x_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as7726_32x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7726_32x_cpld_remove_6_1,
+#else
 	.remove		= as7726_32x_cpld_remove,
+#endif
 	.id_table	= as7726_32x_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
index d84f9743cb44..3af9b231b33a 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7726_32x_fan"
 
@@ -598,6 +599,12 @@ static int as7726_32x_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7726_32x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7726_32x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -614,7 +621,11 @@ static struct i2c_driver as7726_32x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7726_32x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7726_32x_fan_remove_6_1,
+#else
     .remove       = as7726_32x_fan_remove,
+#endif
     .id_table     = as7726_32x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
index f835b5fc04ba..559746c4c480 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          16
 #define MAX_SERIAL_NUMBER       19
@@ -216,6 +217,12 @@ static int as7726_32x_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7726_32x_psu_remove_6_1(struct i2c_client *client)
+{
+    as7726_32x_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -236,7 +243,11 @@ static struct i2c_driver as7726_32x_psu_driver = {
         .name     = "as7726_32x_psu",
     },
     .probe        = as7726_32x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7726_32x_psu_remove_6_1,
+#else
     .remove       = as7726_32x_psu_remove,
+#endif
     .id_table     = as7726_32x_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
index f01b5ff4f9cb..cb5a0c18f2a4 100644
--- a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -682,6 +683,12 @@ static int as7816_64x_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7816_64x_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7816_64x_cpld_remove(client);
+}
+#endif
 
 int as7816_64x_cpld_read(unsigned short cpld_addr, u8 reg)
 {
@@ -743,7 +750,11 @@ static struct i2c_driver as7816_64x_cpld_driver = {
         .name     = "as7816_64x_cpld1",
     },
     .probe        = as7816_64x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7816_64x_cpld_remove_6_1,
+#else
     .remove       = as7816_64x_cpld_remove,
+#endif
     .id_table     = as7816_64x_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
index a94021bb323f..b77c65b99880 100644
--- a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
+++ b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7816_64x_fan"
 
@@ -438,6 +439,12 @@ static int as7816_64x_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7816_64x_fan_remove_6_1(struct i2c_client *client)
+{
+    as7816_64x_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -454,7 +461,11 @@ static struct i2c_driver as7816_64x_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7816_64x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7816_64x_fan_remove_6_1,
+#else
     .remove       = as7816_64x_fan_remove,
+#endif
     .id_table     = as7816_64x_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c b/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
index 6cd6d22823ad..5df3cdc0e32f 100644
--- a/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
@@ -34,6 +34,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7926_40xfb_cpld"
 
@@ -998,6 +999,12 @@ static int as7926_40xfb_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_40xfb_cpld_remove_6_1(struct i2c_client *client)
+{
+	as7926_40xfb_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7926_40xfb_cpld_id[] = {
 	{"as7926_40xfb_cpld2", as7926_40xfb_cpld2},
@@ -1014,7 +1021,11 @@ static struct i2c_driver as7926_40xfb_cpld_driver = {
 		   .name = DRVNAME,
 		   },
 	.probe = as7926_40xfb_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7926_40xfb_cpld_remove_6_1,
+#else
 	.remove = as7926_40xfb_cpld_remove,
+#endif
 	.id_table = as7926_40xfb_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
index 3d01a542e477..ef33e9a391d5 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7926_40xke_cpld"
 
@@ -967,6 +968,12 @@ static int as7926_40xke_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_40xke_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7926_40xke_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7926_40xke_cpld_id[] = {
     { "as7926_40xke_cpld1", as7926_40xke_cpld1 },
@@ -986,7 +993,11 @@ static struct i2c_driver as7926_40xke_cpld_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7926_40xke_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_40xke_cpld_remove_6_1,
+#else
     .remove       = as7926_40xke_cpld_remove,
+#endif
     .id_table     = as7926_40xke_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
index 8880feaa1129..1ce3486a1ea9 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7926_40xke_fan"
 
@@ -685,6 +686,12 @@ static int as7926_40xke_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_40xke_fan_remove_6_1(struct i2c_client *client)
+{
+    as7926_40xke_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -701,7 +708,11 @@ static struct i2c_driver as7926_40xke_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7926_40xke_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_40xke_fan_remove_6_1,
+#else
     .remove       = as7926_40xke_fan_remove,
+#endif
     .id_table     = as7926_40xke_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
index d2c9e10474b5..67726ae9bdae 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define LED_CPLD_I2C_BUS_NUM         11
 #define LED_CNTRLER_I2C_ADDRESS		(0x60)
@@ -167,6 +168,12 @@ static int as7926_40xke_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_40xke_psu_remove_6_1(struct i2c_client *client)
+{
+    as7926_40xke_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -189,7 +196,11 @@ static struct i2c_driver as7926_40xke_psu_driver = {
         .name     = "as7926_40xke_psu",
     },
     .probe        = as7926_40xke_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_40xke_psu_remove_6_1,
+#else
     .remove       = as7926_40xke_psu_remove,
+#endif
     .id_table     = as7926_40xke_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
index 0eaca8dfc2ff..6bfcad828ae5 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -626,6 +627,12 @@ static int as7926_80xk_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_80xk_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7926_80xk_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7926_80xk_cpld_id[] = {
     { "as7926_80xk_cpld1", 0 },
@@ -643,7 +650,11 @@ static struct i2c_driver as7926_80xk_cpld_driver = {
         .name     = "as7926_80xk_cpld1",
     },
     .probe        = as7926_80xk_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_80xk_cpld_remove_6_1,
+#else
     .remove       = as7926_80xk_cpld_remove,
+#endif
     .id_table     = as7926_80xk_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
index 83d46847381f..33def1c49310 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7926_80xk_fan"
 
@@ -547,6 +548,12 @@ static int as7926_80xk_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_80xk_fan_remove_6_1(struct i2c_client *client)
+{
+    as7926_80xk_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -563,7 +570,11 @@ static struct i2c_driver as7926_80xk_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as7926_80xk_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_80xk_fan_remove_6_1,
+#else
     .remove       = as7926_80xk_fan_remove,
+#endif
     .id_table     = as7926_80xk_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
index d9875a5ece51..59acca5f469e 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 extern int accton_i2c_cpld_read (unsigned short cpld_addr, u8 reg);
@@ -157,6 +158,12 @@ static int as7926_80xk_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7926_80xk_psu_remove_6_1(struct i2c_client *client)
+{
+    as7926_80xk_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -181,7 +188,11 @@ static struct i2c_driver as7926_80xk_psu_driver = {
         .name     = "as7926_80xk_psu",
     },
     .probe        = as7926_80xk_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7926_80xk_psu_remove_6_1,
+#else
     .remove       = as7926_80xk_psu_remove,
+#endif
     .id_table     = as7926_80xk_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
index b54d47d2bd9e..90641cc5b306 100644
--- a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
+++ b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
@@ -34,6 +34,7 @@
 #include <linux/delay.h>
 #include <linux/list.h>
 #include <linux/printk.h>
+#include <linux/version.h>
 
 #define DRV_NAME    "as7936_22xke_cpld"
 
@@ -713,6 +714,12 @@ static int as7936_22xke_cpld_remove(struct i2c_client *client)
     as7936_22xke_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7936_22xke_cpld_remove_6_1(struct i2c_client *client)
+{
+    as7936_22xke_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7936_22xke_cpld_id[] = {
     { "as7936_22xke_cpld1", E_CPLD_ID1},
@@ -729,7 +736,11 @@ static struct i2c_driver as7936_22xke_cpld_driver = {
         .name     = DRV_NAME,
     },
     .probe        = as7936_22xke_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as7936_22xke_cpld_remove_6_1,
+#else
     .remove       = as7936_22xke_cpld_remove,
+#endif
     .id_table     = as7936_22xke_cpld_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c b/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
index 669fb38ffd5f..052645045846 100644
--- a/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7946_30xb_cpld"
 
@@ -774,6 +775,12 @@ static int as7946_30xb_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7946_30xb_cpld_remove_6_1(struct i2c_client *client)
+{
+	as7946_30xb_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7946_30xb_cpld_id[] = {
 	{ "as7946_30xb_cpld1", as7946_30xb_cpld1 },
@@ -789,7 +796,11 @@ static struct i2c_driver as7946_30xb_cpld_driver = {
 		.name = DRVNAME,
 	},
 	.probe = as7946_30xb_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7946_30xb_cpld_remove_6_1,
+#else
 	.remove = as7946_30xb_cpld_remove,
+#endif
 	.id_table = as7946_30xb_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c b/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
index ec4922df8fb0..f810eee3cc71 100644
--- a/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/list.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7946_74xkb_cpld"
 
@@ -1167,6 +1168,12 @@ static int as7946_74xkb_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as7946_74xkb_cpld_remove_6_1(struct i2c_client *client)
+{
+	as7946_74xkb_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as7946_74xkb_cpld_id[] = {
 	{ "as7946_74xkb_cpld1", as7946_74xkb_cpld1 },
@@ -1183,7 +1190,11 @@ static struct i2c_driver as7946_74xkb_cpld_driver = {
 		.name = DRVNAME,
 	},
 	.probe = as7946_74xkb_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as7946_74xkb_cpld_remove_6_1,
+#else
 	.remove = as7946_74xkb_cpld_remove,
+#endif
 	.id_table = as7946_74xkb_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
index a2d3e934fcfb..a3055f5a56a2 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
@@ -685,6 +685,12 @@ static int as9716_32d_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9716_32d_cpld_remove_6_1(struct i2c_client *client)
+{
+    as9716_32d_cpld_remove(client);
+}
+#endif
 
 static int as9716_32d_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -776,7 +782,11 @@ static struct i2c_driver as9716_32d_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as9716_32d_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as9716_32d_cpld_remove_6_1,
+#else
 	.remove		= as9716_32d_cpld_remove,
+#endif
 	.id_table	= as9716_32d_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
index 2647e3e486f3..b1c88e2d6fc3 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "as9716_32d_fan"
 
@@ -460,6 +461,12 @@ static int as9716_32d_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9716_32d_fan_remove_6_1(struct i2c_client *client)
+{
+    as9716_32d_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -476,7 +483,11 @@ static struct i2c_driver as9716_32d_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as9716_32d_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as9716_32d_fan_remove_6_1,
+#else
     .remove       = as9716_32d_fan_remove,
+#endif
     .id_table     = as9716_32d_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
index 9375b933e188..2528f4293140 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define MAX_MODEL_NAME          16
 #define MAX_SERIAL_NUMBER       20
@@ -208,6 +209,12 @@ static int as9716_32d_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9716_32d_psu_remove_6_1(struct i2c_client *client)
+{
+    as9716_32d_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -228,7 +235,11 @@ static struct i2c_driver as9716_32d_psu_driver = {
         .name     = "as9716_32d_psu",
     },
     .probe        = as9716_32d_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as9716_32d_psu_remove_6_1,
+#else
     .remove       = as9716_32d_psu_remove,
+#endif
     .id_table     = as9716_32d_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
index 3ab027654f62..1d1b49ce3547 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
@@ -758,6 +758,12 @@ static int as9926_24d_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9926_24d_cpld_remove_6_1(struct i2c_client *client)
+{
+    as9926_24d_cpld_remove(client);
+}
+#endif
 
 static int as9926_24d_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -849,7 +855,11 @@ static struct i2c_driver as9926_24d_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= as9926_24d_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as9926_24d_cpld_remove_6_1,
+#else
 	.remove		= as9926_24d_cpld_remove,
+#endif
 	.id_table	= as9926_24d_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
index 06644457967c..28dd039ecabb 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/platform_device.h>
+#include <linux/version.h>
 
 #define DRVNAME "as9926_24d_fan"
 #define MAX_FAN_SPEED_RPM	25500
@@ -506,6 +507,12 @@ static int as9926_24d_fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9926_24d_fan_remove_6_1(struct i2c_client *client)
+{
+    as9926_24d_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -522,7 +529,11 @@ static struct i2c_driver as9926_24d_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = as9926_24d_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as9926_24d_fan_remove_6_1,
+#else
     .remove       = as9926_24d_fan_remove,
+#endif
     .id_table     = as9926_24d_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
index 841e028f4c2b..aa3c4efff3ae 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define PSU_STATUS_I2C_ADDR			0x68
@@ -211,6 +212,12 @@ static int as9926_24d_psu_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9926_24d_psu_remove_6_1(struct i2c_client *client)
+{
+	as9926_24d_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -231,7 +238,11 @@ static struct i2c_driver as9926_24d_psu_driver = {
 		.name	 = "as9926_24d_psu",
 	},
 	.probe		= as9926_24d_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = as9926_24d_psu_remove_6_1,
+#else
 	.remove	   = as9926_24d_psu_remove,
+#endif
 	.id_table	 = as9926_24d_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
index 9c90e2dfdfad..50176d2d9cdc 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE 256
 
@@ -152,6 +153,12 @@ static int as9926_24d_sys_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void as9926_24d_sys_remove_6_1(struct i2c_client *client)
+{
+    as9926_24d_sys_remove(client);
+}
+#endif
 
 static const struct i2c_device_id as9926_24d_sys_id[] = {
     { "as9926_24d_sys", 0 },
@@ -165,7 +172,11 @@ static struct i2c_driver as9926_24d_sys_driver = {
         .name     = "as9926_24d_sys",
     },
     .probe        = as9926_24d_sys_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = as9926_24d_sys_remove_6_1,
+#else
     .remove       = as9926_24d_sys_remove,
+#endif
     .id_table     = as9926_24d_sys_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c b/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
index c6f7ba948a60..cf371649bfe7 100755
--- a/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
+++ b/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
@@ -2123,6 +2123,12 @@ static int asgvolt64_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void asgvolt64_cpld_remove_6_1(struct i2c_client *client)
+{
+    asgvolt64_cpld_remove(client);
+}
+#endif
 
 static int asgvolt64_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -2214,7 +2220,11 @@ static struct i2c_driver asgvolt64_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= asgvolt64_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = asgvolt64_cpld_remove_6_1,
+#else
 	.remove		= asgvolt64_cpld_remove,
+#endif
 	.id_table	= asgvolt64_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
index 4f11fbd78c93..2bd855d038c7 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
@@ -28,7 +28,8 @@
 #include <linux/list.h>
 #include <linux/dmi.h>
 #include <linux/delay.h>
-#include <linux/hwmon-sysfs.h>
+#include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 
 #define CPLD_VERSION_REG	0x2
@@ -555,7 +556,13 @@ static int asxvolt16_cpld_remove(struct i2c_client *client)
     kfree(data);
 
 	return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void asxvolt16_cpld_remove_6_1(struct i2c_client *client)
+{
+	asxvolt16_cpld_remove(client);
+}
+#endif
 
 
 static const struct i2c_device_id asxvolt16_cpld_id[] = {
@@ -571,7 +578,12 @@ static struct i2c_driver asxvolt16_cpld_driver = {
 		.name = "asxvolt16_cpld",
 	},
 	.probe		= asxvolt16_cpld_probe,
-	.remove	   	= asxvolt16_cpld_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = asxvolt16_cpld_remove_6_1,
+#else
+	.remove	   	= asxvolt16_cpld_remove,
+#endif
+	
 	.id_table	= asxvolt16_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
index 85e2926f0965..34f8120219a3 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
@@ -29,7 +29,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define DRVNAME "asxvolt16_fan"
 
@@ -473,7 +474,13 @@ static int asxvolt16_fan_remove(struct i2c_client *client)
     sysfs_remove_group(&client->dev.kobj, &asxvolt16_fan_group);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void asxvolt16_fan_remove_6_1(struct i2c_client *client)
+{
+    asxvolt16_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -490,7 +497,12 @@ static struct i2c_driver asxvolt16_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = asxvolt16_fan_probe,
-    .remove       = asxvolt16_fan_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = asxvolt16_fan_remove_6_1,
+#else
+    .remove       = asxvolt16_fan_remove,
+#endif
+    
     .id_table     = asxvolt16_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
index 819baa2bc63f..89801415adf7 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
@@ -32,7 +32,8 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
-#include <linux/dmi.h>
+#include <linux/dmi.h>
+#include <linux/version.h>
 
 #define PSU_STATUS_I2C_ADDR			0x60
 #define PSU_STATUS_I2C_REG_OFFSET	0x8
@@ -172,7 +173,13 @@ static int asxvolt16_psu_remove(struct i2c_client *client)
     kfree(data);
     
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void asxvolt16_psu_remove_6_1(struct i2c_client *client)
+{
+    asxvolt16_psu_remove(client);
+}
+#endif
 
 enum psu_index 
 { 
@@ -193,7 +200,12 @@ static struct i2c_driver asxvolt16_psu_driver = {
         .name     = "asxvolt16_psu",
     },
     .probe        = asxvolt16_psu_probe,
-    .remove       = asxvolt16_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = asxvolt16_psu_remove_6_1,
+#else
+    .remove       = asxvolt16_psu_remove,
+#endif
+    
     .id_table     = asxvolt16_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
index 62f440f038e6..c075633b4909 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
@@ -30,7 +30,8 @@
 #include <linux/mutex.h>
 #include <linux/sysfs.h>
 #include <linux/slab.h>
-#include <linux/delay.h>
+#include <linux/delay.h>
+#include <linux/version.h>
 
 #define DRIVER_NAME    "asxvolt16_sfp" /* Platform dependent */
 
@@ -1924,7 +1925,13 @@ static int sfp_device_remove(struct i2c_client *client)
 #endif
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void sfp_device_remove_6_1(struct i2c_client *client)
+{
+	sfp_device_remove(client);
+}
+#endif
 
 /* Addresses scanned
  */
@@ -1935,7 +1942,12 @@ static struct i2c_driver sfp_driver = {
 		.name	  = DRIVER_NAME,
 	},
 	.probe		  = sfp_device_probe,
-	.remove		  = sfp_device_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = sfp_device_remove_6_1,
+#else
+	.remove		  = sfp_device_remove,
+#endif
+	
 	.id_table	  = sfp_device_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
index a302133400c2..825274abb715 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
@@ -29,6 +29,7 @@
 #include <linux/dmi.h>
 #include <linux/sysfs.h>
 #include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 static struct dmi_system_id csp9250_dmi_table[] = {
 	{
@@ -165,6 +166,12 @@ static int accton_i2c_cpld_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void accton_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+	accton_i2c_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id accton_i2c_cpld_id[] = {
 	{ "accton_i2c_cpld", 0 },
@@ -178,7 +185,11 @@ static struct i2c_driver accton_i2c_cpld_driver = {
 		.name = "accton_i2c_cpld",
 	},
 	.probe		= accton_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = accton_i2c_cpld_remove_6_1,
+#else
 	.remove	   	= accton_i2c_cpld_remove,
+#endif
 	.id_table	= accton_i2c_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
index 91264fe90757..4266a11d1259 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "csp9250_fan"
 
@@ -447,6 +448,12 @@ static int csp9250_fan_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void csp9250_fan_remove_6_1(struct i2c_client *client)
+{
+    csp9250_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -463,7 +470,11 @@ static struct i2c_driver csp9250_fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = csp9250_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = csp9250_fan_remove_6_1,
+#else
     .remove       = csp9250_fan_remove,
+#endif
     .id_table     = csp9250_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
index a7335b1ef79a..174e66514d35 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da, char *buf);
 static ssize_t show_model_name(struct device *dev, struct device_attribute *da, char *buf);
@@ -166,6 +167,12 @@ static int csp9250_psu_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void csp9250_psu_remove_6_1(struct i2c_client *client)
+{
+    csp9250_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -186,7 +193,11 @@ static struct i2c_driver csp9250_psu_driver = {
         .name     = "csp9250_psu",
     },
     .probe        = csp9250_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = csp9250_psu_remove_6_1,
+#else
     .remove       = csp9250_psu_remove,
+#endif
     .id_table     = csp9250_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
index 1a3f1775ac0f..d343f753cbcd 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
@@ -31,6 +31,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 #define DRIVER_NAME 	"csp9250_sfp" /* Platform dependent */
 
@@ -1308,6 +1309,12 @@ static int csp9250_sfp_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void csp9250_sfp_remove_6_1(struct i2c_client *client)
+{
+    csp9250_sfp_remove(client);
+}
+#endif
 
 /* Addresses scanned
  */
@@ -1318,7 +1325,11 @@ static struct i2c_driver sfp_driver = {
         .name	  = DRIVER_NAME,
     },
     .probe		  = csp9250_sfp_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = csp9250_sfp_remove_6_1,
+#else
     .remove		  = csp9250_sfp_remove,
+#endif
     .id_table	  = csp9250_sfp_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
index bc8dc7602277..a25b06f4bc15 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
@@ -818,6 +818,12 @@ static int es7632bt3_cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void es7632bt3_cpld_remove_6_1(struct i2c_client *client)
+{
+	es7632bt3_cpld_remove(client);
+}
+#endif
 
 static int es7632bt3_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -913,7 +919,11 @@ static struct i2c_driver es7632bt3_cpld_driver = {
 		.owner	= THIS_MODULE,
 	},
 	.probe		= es7632bt3_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = es7632bt3_cpld_remove_6_1,
+#else
 	.remove		= es7632bt3_cpld_remove,
+#endif
 	.id_table	= es7632bt3_cpld_id,
 };
 
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
index 662f22cf80e4..312818a49e3f 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "es7632bt3_fan"
 
@@ -579,6 +580,12 @@ static int es7632bt3_fan_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void es7632bt3_fan_remove_6_1(struct i2c_client *client)
+{
+	es7632bt3_fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x66, I2C_CLIENT_END };
@@ -595,7 +602,11 @@ static struct i2c_driver es7632bt3_fan_driver = {
 		.name = DRVNAME,
 	},
 	.probe        = es7632bt3_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = es7632bt3_fan_remove_6_1,
+#else
 	.remove       = es7632bt3_fan_remove,
+#endif
 	.id_table     = es7632bt3_fan_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
index 5f5a7ed1b9f1..723571d3a054 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static ssize_t show_status(struct device *dev, struct device_attribute *da,
 			   char *buf);
@@ -194,6 +195,12 @@ static int es7632bt3_psu_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void es7632bt3_psu_remove_6_1(struct i2c_client *client)
+{
+	es7632bt3_psu_remove(client);
+}
+#endif
 
 enum psu_index
 {
@@ -214,7 +221,11 @@ static struct i2c_driver es7632bt3_psu_driver = {
 		.name = "es7632bt3_psu",
 	},
 	.probe = es7632bt3_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = es7632bt3_psu_remove_6_1,
+#else
 	.remove = es7632bt3_psu_remove,
+#endif
 	.id_table = es7632bt3_psu_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c b/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
index c01d6bcca228..061a23162e21 100644
--- a/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
+++ b/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
@@ -27,6 +27,7 @@
 #include <linux/slab.h>
 #include <linux/list.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 static LIST_HEAD(cpld_client_list);
 static struct mutex	 list_lock;
@@ -130,6 +131,12 @@ static int accton_i2c_cpld_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void accton_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+	accton_i2c_cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id accton_i2c_cpld_id[] = {
 	{ "accton_i2c_cpld", 0 },
@@ -143,7 +150,11 @@ static struct i2c_driver accton_i2c_cpld_driver = {
 		.name = "accton_i2c_cpld",
 	},
 	.probe		= accton_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = accton_i2c_cpld_remove_6_1,
+#else
 	.remove	   	= accton_i2c_cpld_remove,
+#endif
 	.id_table	= accton_i2c_cpld_id,
 	.address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
index ac37a56f07c2..8a422ec08dc6 100644
--- a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
@@ -39,6 +39,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE      256
 
@@ -171,6 +172,12 @@ static int onie_eeprom_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void onie_eeprom_remove_6_1(struct i2c_client *client)
+{
+    onie_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id onie_eeprom_id[] = {
     { "scg60d0_onie_eeprom", 0 },
@@ -183,7 +190,11 @@ static struct i2c_driver onie_eeprom_driver = {
         .name = "scg60d0_onie_eeprom",
     },
     .probe		= onie_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = onie_eeprom_remove_6_1,
+#else
     .remove	   	= onie_eeprom_remove,
+#endif
     .id_table	= onie_eeprom_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
index 21d8bdd33b95..16c754a944a3 100644
--- a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
+++ b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
@@ -337,7 +337,13 @@ static int scg60d0_484t_psu_remove(struct i2c_client *client)
     kfree(data);
 
     return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void scg60d0_484t_psu_remove_6_1(struct i2c_client *client)
+{
+    scg60d0_484t_psu_remove(client);
+}
+#endif
 
 static const struct i2c_device_id scg60d0_484t_psu_id[] = {
     {"scg60d0_psu", 0},
@@ -351,7 +357,12 @@ static struct i2c_driver scg60d0_484t_psu_driver = {
         .name = "scg60d0_psu",
     },
     .probe = scg60d0_484t_psu_probe,
-    .remove = scg60d0_484t_psu_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = scg60d0_484t_psu_remove_6_1,
+#else
+    .remove = scg60d0_484t_psu_remove,
+#endif
+    
     .id_table = scg60d0_484t_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
index 3c80fb61de2d..d619ab75f095 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
@@ -41,6 +41,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 #define DRIVER_NAME        "snj60d0_fpga"
@@ -858,6 +859,12 @@ static int alpha_i2c_fpga_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void alpha_i2c_fpga_remove_6_1(struct i2c_client *client)
+{
+    alpha_i2c_fpga_remove(client);
+}
+#endif
 
 static const struct i2c_device_id alpha_i2c_fpga_id[] = {
     { DRIVER_NAME, 0 },
@@ -871,7 +878,11 @@ static struct i2c_driver alpha_i2c_fpga_driver = {
         .name = DRIVER_NAME,
     },
     .probe		= alpha_i2c_fpga_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = alpha_i2c_fpga_remove_6_1,
+#else
     .remove	   	= alpha_i2c_fpga_remove,
+#endif
     .id_table	= alpha_i2c_fpga_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
index 904644f9d84b..f070404f46b0 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
@@ -1193,6 +1193,12 @@ static int snj60d0_320f_cpld_mux_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void snj60d0_320f_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+    snj60d0_320f_cpld_mux_remove(client);
+}
+#endif
 
 static int snj60d0_320f_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1282,7 +1288,11 @@ static struct i2c_driver snj60d0_320f_cpld_mux_driver = {
         .owner    = THIS_MODULE,
     },
     .probe         = snj60d0_320f_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = snj60d0_320f_cpld_mux_remove_6_1,
+#else
     .remove        = snj60d0_320f_cpld_mux_remove,
+#endif
     .id_table      = snj60d0_320f_cpld_mux_id,
 };
 
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
index 0cf464af0158..c24bd80e302b 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
@@ -41,6 +41,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE      256
 
@@ -228,6 +229,12 @@ static int onie_eeprom_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void onie_eeprom_remove_6_1(struct i2c_client *client)
+{
+    onie_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id onie_eeprom_id[] = {
     { "snj60d0_onie_eeprom", 0 },
@@ -241,7 +248,11 @@ static struct i2c_driver onie_eeprom_driver = {
         .name = "snj60d0_onie_eeprom",
     },
     .probe		= onie_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = onie_eeprom_remove_6_1,
+#else
     .remove	   	= onie_eeprom_remove,
+#endif
     .id_table	= onie_eeprom_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
index 0bd0b9c79236..c08944abe0d6 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
@@ -1069,6 +1069,12 @@ static int snj61d0_320f_cpld_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void snj61d0_320f_cpld_remove_6_1(struct i2c_client *client)
+{
+    snj61d0_320f_cpld_remove(client);
+}
+#endif
 
 static int snj61d0_320f_cpld_read_internal(struct i2c_client *client, u8 reg)
 {
@@ -1158,7 +1164,11 @@ static struct i2c_driver snj61d0_320f_cpld_driver = {
         .owner    = THIS_MODULE,
     },
     .probe         = snj61d0_320f_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = snj61d0_320f_cpld_remove_6_1,
+#else
     .remove        = snj61d0_320f_cpld_remove,
+#endif
     .id_table      = snj61d0_320f_cpld_id,
 };
 
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
index d2cab557ca40..1ed471ba740e 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
@@ -41,6 +41,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 #define DRIVER_NAME        "snj61d0_fpga"
@@ -877,6 +878,12 @@ static int alpha_i2c_fpga_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void alpha_i2c_fpga_remove_6_1(struct i2c_client *client)
+{
+    alpha_i2c_fpga_remove(client);
+}
+#endif
 
 static const struct i2c_device_id alpha_i2c_fpga_id[] = {
     { DRIVER_NAME, 0 },
@@ -890,7 +897,11 @@ static struct i2c_driver alpha_i2c_fpga_driver = {
         .name = DRIVER_NAME,
     },
     .probe		= alpha_i2c_fpga_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = alpha_i2c_fpga_remove_6_1,
+#else
     .remove	   	= alpha_i2c_fpga_remove,
+#endif
     .id_table	= alpha_i2c_fpga_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
index 56afa0f6f8d1..d060a9e27e0b 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
@@ -39,6 +39,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE      256
 
@@ -171,6 +172,12 @@ static int onie_eeprom_remove(struct i2c_client *client)
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void onie_eeprom_remove_6_1(struct i2c_client *client)
+{
+    onie_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id onie_eeprom_id[] = {
     { "snj61d0_onie_eeprom", 0 },
@@ -183,7 +190,11 @@ static struct i2c_driver onie_eeprom_driver = {
         .name = "snj61d0_onie_eeprom",
     },
     .probe		= onie_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = onie_eeprom_remove_6_1,
+#else
     .remove	   	= onie_eeprom_remove,
+#endif
     .id_table	= onie_eeprom_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
index ba7d41d54dc5..33422ce1327b 100644
--- a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
+++ b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
@@ -29,6 +29,7 @@
 #include <linux/sysfs.h>
 #include <linux/slab.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 #define DRVNAME "fan"
 
@@ -512,6 +513,12 @@ static int fan_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void fan_remove_6_1(struct i2c_client *client)
+{
+    fan_remove(client);
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -528,7 +535,11 @@ static struct i2c_driver fan_driver = {
         .name     = DRVNAME,
     },
     .probe        = fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = fan_remove_6_1,
+#else
     .remove       = fan_remove,
+#endif
     .id_table     = fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
index 23b2422f5f6c..7349a53ac17e 100644
--- a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
+++ b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
@@ -27,6 +27,7 @@
 #include <linux/mutex.h>
 #include <linux/i2c.h>
 #include <linux/pmbus.h>
+#include <linux/version.h>
 #include "pmbus.h"
 
 
@@ -119,7 +120,11 @@ static struct i2c_driver fsp550_driver = {
            .name = "FSP550-20FM",
            },
     .probe = pmbus_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = pmbus_do_remove_6_1,
+#else
     .remove = pmbus_do_remove,
+#endif
     .id_table = fsp550_id,
 };
 
diff --git a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
index 7a621e7ac9a2..9fcfcb531cb7 100644
--- a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
+++ b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
@@ -17,6 +17,7 @@
 #include <linux/types.h>
 #include <linux/delay.h>
 #include <linux/jiffies.h>
+#include <linux/version.h>
 
 #define EEPROM_SIZE 8192  //mc24lt64t eeprom size in bytes.
 
@@ -150,6 +151,12 @@ static int mc24lc64t_remove(struct i2c_client *client)
 
         return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void mc24lc64t_remove_6_1(struct i2c_client *client)
+{
+        mc24lc64t_remove(client);
+}
+#endif
 
 static const struct i2c_device_id mc24lc64t_id[] = {
         { "24lc64t", 0 },
@@ -163,7 +170,11 @@ static struct i2c_driver mc24lc64t_driver = {
                 .owner = THIS_MODULE,
         },
         .probe          = mc24lc64t_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = mc24lc64t_remove_6_1,
+#else
         .remove         = mc24lc64t_remove,
+#endif
         .id_table       = mc24lc64t_id,
 };
 
diff --git a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/optoe.c b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/optoe.c
index 11ce9efa7ae3..a699a7e16cd6 100644
--- a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/optoe.c
+++ b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/optoe.c
@@ -131,6 +131,7 @@
 #endif
 
 #include <linux/types.h>
+#include <linux/version.h>
 
 /* The maximum length of a port name */
 #define MAX_PORT_NAME_LEN 20
@@ -821,6 +822,12 @@ static int optoe_remove(struct i2c_client *client)
 	kfree(optoe);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void optoe_remove_6_1(struct i2c_client *client)
+{
+	optoe_remove(client);
+}
+#endif
 
 static ssize_t show_dev_class(struct device *dev,
 			struct device_attribute *dattr, char *buf)
@@ -1170,7 +1177,11 @@ static struct i2c_driver optoe_driver = {
 		.owner = THIS_MODULE,
 	},
 	.probe = optoe_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = optoe_remove_6_1,
+#else
 	.remove = optoe_remove,
+#endif
 	.id_table = optoe_ids,
 };
 
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
index a6bc521eb9fe..9c4287e94a90 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 
@@ -456,6 +457,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	dni_ag5648_psu,
@@ -476,7 +483,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
index f3f06153865e..6dc38ec6d1d5 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
@@ -32,6 +32,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define I2C_BUS_2 2
 #define MASTER_CPLD 0x35
@@ -656,6 +657,12 @@ static int ag5648_sfp_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void ag5648_sfp_remove_6_1(struct i2c_client *client)
+{
+	ag5648_sfp_remove(client);
+}
+#endif
 
 enum id_name 
 {
@@ -675,7 +682,11 @@ static struct i2c_driver ag5648_sfp_driver = {
 		.name	= "dni_ag5648_sfp",
 	},
 	.probe		= ag5648_sfp_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = ag5648_sfp_remove_6_1,
+#else
 	.remove		= ag5648_sfp_remove,
+#endif
 	.id_table	= ag5648_sfp_id,
 	.address_list	= normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
index ba63bdc8e50a..edd46a60421f 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 extern int i2c_cpld_read(int bus, unsigned short cpld_addr, u8 reg);
 extern int i2c_cpld_write(int bus, unsigned short cpld_addr, u8 reg, u8 value);
@@ -73,6 +74,9 @@ static int emc2305_probe(struct i2c_client *client,
 static int emc2305_detect(struct i2c_client *client,
                           struct i2c_board_info *info);
 static int emc2305_remove(struct i2c_client *client);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client);
+#endif
 
 static const struct i2c_device_id emc2305_id[] =
 {
@@ -88,7 +92,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -376,6 +384,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
index 8a63c3723c53..9a0075384d1c 100755
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 #define SWPLD_REG 0x31
@@ -516,6 +517,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	dni_ag9032v1_psu,
@@ -536,7 +543,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
index 56ff3743f98e..0a6748c81c27 100644
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
@@ -32,6 +32,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define SWPLD_REG 	  0x31
 #define SWPLD_SFP_MUX_REG 0x20
@@ -614,6 +615,12 @@ static int ag9032v1_sfp_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void ag9032v1_sfp_remove_6_1(struct i2c_client *client)
+{
+	ag9032v1_sfp_remove(client);
+}
+#endif
 
 enum id_name {
 	dni_ag9032v1_sfp
@@ -632,7 +639,11 @@ static struct i2c_driver ag9032v1_sfp_driver = {
 		.name	= "dni_ag9032v1_sfp",
 	},
 	.probe		= ag9032v1_sfp_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = ag9032v1_sfp_remove_6_1,
+#else
 	.remove		= ag9032v1_sfp_remove,
+#endif
 	.id_table	= ag9032v1_sfp_id,
 	.address_list	= normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
index 77af5d55a859..3e96b86dd2d8 100755
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 extern int i2c_cpld_read(int bus, unsigned short cpld_addr, u8 reg);
 extern int i2c_cpld_write(int bus, unsigned short cpld_addr, u8 reg, u8 value);
@@ -89,7 +90,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -387,6 +392,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
index 5869698cc32a..e7606428aeb2 100644
--- a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
+++ b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 
@@ -451,6 +452,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	dni_ag9032v2a_psu,
@@ -471,7 +478,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
index 73d9900af5b4..319fda4a9daf 100644
--- a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 
 static ssize_t set_pwm(struct device *dev, struct device_attribute *devattr,
@@ -86,7 +87,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -373,6 +378,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
index b2e6fd44084c..890de6a54ffa 100644
--- a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
+++ b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 
@@ -451,6 +452,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	agc7646slv1b_psu,
@@ -471,7 +478,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
index 73d9900af5b4..319fda4a9daf 100644
--- a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 
 static ssize_t set_pwm(struct device *dev, struct device_attribute *devattr,
@@ -86,7 +87,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -373,6 +378,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
index e5b5c3e13f8a..081b55d59bf7 100644
--- a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
+++ b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 
@@ -451,6 +452,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	agc7646v1_psu,
@@ -471,7 +478,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
index 73d9900af5b4..319fda4a9daf 100644
--- a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 
 static ssize_t set_pwm(struct device *dev, struct device_attribute *devattr,
@@ -86,7 +87,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -373,6 +378,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
index cc7c54cdc834..e1d01e8a2a99 100644
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
@@ -38,6 +38,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 #define PSU1_MUX_VAL 0x00
@@ -523,6 +524,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
     agc7648a_dps800ab
@@ -541,7 +548,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
index 80cc37b8416b..859f6fa3eed2 100755
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
@@ -31,6 +31,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 extern int i2c_cpld_read(int bus, unsigned short cpld_addr, u8 reg);
 extern int i2c_cpld_write(int bus, unsigned short cpld_addr, u8 reg, u8 value);
@@ -95,7 +96,11 @@ static struct i2c_driver emc2305_driver =
     .name = "agc7648a_emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -317,6 +322,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
index cfa9ef4a6989..04a354c59743 100644
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
@@ -32,6 +32,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define I2C_BUS_5 	5
 #define SWPLD_U21 	0x30
@@ -635,6 +636,12 @@ static int agc7648a_sfp_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void agc7648a_sfp_remove_6_1(struct i2c_client *client)
+{
+	agc7648a_sfp_remove(client);
+}
+#endif
 
 enum id_name {
 	agc7648a_sfp
@@ -653,7 +660,11 @@ static struct i2c_driver agc7648a_sfp_driver = {
 		.name	= "agc7648a_sfp",
 	},
 	.probe		= agc7648a_sfp_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = agc7648a_sfp_remove_6_1,
+#else
 	.remove		= agc7648a_sfp_remove,
+#endif
 	.id_table	= agc7648a_sfp_id,
 	.address_list	= normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
index 1960e9ff5628..dfd838fa0474 100755
--- a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
+++ b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
@@ -34,6 +34,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 #define MAX_FAN_DUTY_CYCLE 100
 #define SWPLD_BUS 5
@@ -468,6 +469,12 @@ static int dps_800ab_16_d_remove(struct i2c_client *client)
 	
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void dps_800ab_16_d_remove_6_1(struct i2c_client *client)
+{
+	dps_800ab_16_d_remove(client);
+}
+#endif
 
 enum id_name {
 	dni_ak7448_psu,
@@ -488,7 +495,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
                 .name   = "dps_800ab_16_d",
         },
         .probe          = dps_800ab_16_d_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+        .remove = dps_800ab_16_d_remove_6_1,
+#else
         .remove         = dps_800ab_16_d_remove,
+#endif
         .id_table       = dps_800ab_16_d_id,
         .address_list   = normal_i2c,
 };
diff --git a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
index d07888999903..92c0c1a9c44d 100755
--- a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
@@ -22,6 +22,7 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
+#include <linux/version.h>
 
 extern int i2c_cpld_read(int bus, unsigned short cpld_addr, u8 reg);
 extern int i2c_cpld_write(int bus, unsigned short cpld_addr, u8 reg, u8 value);
@@ -88,7 +89,11 @@ static struct i2c_driver emc2305_driver =
     .name = "emc2305",
   },
   .probe    = emc2305_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = emc2305_remove_6_1,
+#else
   .remove   = emc2305_remove,
+#endif
   .id_table = emc2305_id,
   .detect   = emc2305_detect,
   .address_list = normal_i2c,
@@ -364,6 +369,12 @@ static int emc2305_remove(struct i2c_client *client)
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void emc2305_remove_6_1(struct i2c_client *client)
+{
+  emc2305_remove(client);
+}
+#endif
 
 module_i2c_driver(emc2305_driver);
 
diff --git a/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c b/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
index cd77cb36c7b2..f68ff5d76758 100755
--- a/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
+++ b/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
@@ -432,6 +432,12 @@ static int i2c_cpld_mux_remove(struct i2c_client *client)
 
   return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void i2c_cpld_mux_remove_6_1(struct i2c_client *client)
+{
+  i2c_cpld_mux_remove(client);
+}
+#endif
 
 int i2c_cpld_read(int bus, unsigned short cpld_addr, u8 reg)
 {
@@ -492,7 +498,11 @@ static struct i2c_driver i2c_cpld_mux_driver =
     .owner  = THIS_MODULE,
   },
   .probe    = i2c_cpld_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+  .remove = i2c_cpld_mux_remove_6_1,
+#else
   .remove   = i2c_cpld_mux_remove,
+#endif
   .id_table = i2c_cpld_mux_id,
 };
 
diff --git a/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c b/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
index 528864d93382..c5eb536c83dd 100755
--- a/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
+++ b/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
@@ -26,6 +26,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { /*0x50, 0x51, 0x52, 0x53, 0x54,
@@ -241,6 +242,12 @@ static int mb_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void mb_eeprom_remove_6_1(struct i2c_client *client)
+{
+	mb_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id mb_eeprom_id[] = {
 	{ "mb_eeprom", 0 },
@@ -252,7 +259,11 @@ static struct i2c_driver mb_eeprom_driver = {
 		.name	= "mb_eeprom",
 	},
 	.probe		= mb_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = mb_eeprom_remove_6_1,
+#else
 	.remove		= mb_eeprom_remove,
+#endif
 	.id_table	= mb_eeprom_id,
 
 	.class		= I2C_CLASS_DDC | I2C_CLASS_SPD,
diff --git a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
index c9872f6a5582..a5c0a2362434 100644
--- a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
+++ b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
@@ -31,6 +31,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 #ifndef INGRASYS_S9230_64X_I2C_CPLD_H
 #define INGRASYS_S9230_64X_I2C_CPLD_H
@@ -1248,6 +1249,12 @@ static int ingrasys_i2c_cpld_remove(struct i2c_client *client)
     ingrasys_i2c_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void ingrasys_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+    ingrasys_i2c_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, ingrasys_i2c_cpld_id);
 
@@ -1257,7 +1264,11 @@ static struct i2c_driver ingrasys_i2c_cpld_driver = {
         .name = "ingrasys_i2c_cpld",
     },
     .probe = ingrasys_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = ingrasys_i2c_cpld_remove_6_1,
+#else
     .remove = ingrasys_i2c_cpld_remove,
+#endif
     .id_table = ingrasys_i2c_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_psu.c b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_psu.c
index 452fd3c22e82..b1db59aa75db 100644
--- a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_psu.c
+++ b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_psu.c
@@ -33,6 +33,7 @@
 #define _S9230_64X_PLATFORM_H
 
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 // remove debug before release
 #define DEBUG
@@ -379,6 +380,12 @@ s9230_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void s9230_psu_remove_6_1(struct i2c_client *client)
+{
+    s9230_psu_remove(client);
+}
+#endif
 
 
 /* 
@@ -513,7 +520,11 @@ static struct i2c_driver s9230_psu_driver = {
         .name     = DRIVER_NAME,
     },
     .probe        = s9230_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = s9230_psu_remove_6_1,
+#else
     .remove       = s9230_psu_remove,
+#endif
     .id_table     = s9230_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
index 5a487c5b3fab..a6ca5403b600 100644
--- a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
+++ b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
@@ -30,6 +30,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* header file for i2c cpld driver of ingrasys_s9280_64x
  *
@@ -1756,6 +1757,12 @@ static int ingrasys_i2c_cpld_remove(struct i2c_client *client)
     ingrasys_i2c_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void ingrasys_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+    ingrasys_i2c_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, ingrasys_i2c_cpld_id);
 
@@ -1765,7 +1772,11 @@ static struct i2c_driver ingrasys_i2c_cpld_driver = {
         .name = "ingrasys_i2c_cpld",
     },
     .probe = ingrasys_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = ingrasys_i2c_cpld_remove_6_1,
+#else
     .remove = ingrasys_i2c_cpld_remove,
+#endif
     .id_table = ingrasys_i2c_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
index d92b6b9ac434..b2246cf86903 100644
--- a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
+++ b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
@@ -33,6 +33,7 @@
 #define _S9230_64X_PLATFORM_H
 
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 // remove debug before release
 #define DEBUG
@@ -395,6 +396,12 @@ s9280_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void s9280_psu_remove_6_1(struct i2c_client *client)
+{
+    s9280_psu_remove(client);
+}
+#endif
 
 
 /* 
@@ -529,7 +536,11 @@ static struct i2c_driver s9280_psu_driver = {
         .name     = DRIVER_NAME,
     },
     .probe        = s9280_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = s9280_psu_remove_6_1,
+#else
     .remove       = s9280_psu_remove,
+#endif
     .id_table     = s9280_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
index c625391af1da..ddc59e3aec11 100644
--- a/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 //#include "I2CHostCommunication.h"
 
@@ -431,6 +432,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -445,7 +452,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
index f82408e42d06..3b81ebb320c0 100644
--- a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
@@ -15,6 +15,7 @@
 #include <linux/err.h>
 #include <linux/mutex.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 #define USE_SMBUS		(1)
@@ -859,6 +860,12 @@ static int cpld_remove(struct i2c_client *client)
 	cpld_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -873,7 +880,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
index 3fdecfad275c..9c8f5891e684 100644
--- a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
@@ -21,6 +21,7 @@
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <asm/uaccess.h>
+#include <linux/version.h>
 #define SWITCH_TEMPERATURE_SOCK     "/proc/switch/temp"
 
 #define USE_SMBUS    1
@@ -1448,6 +1449,12 @@ static int psoc_remove(struct i2c_client *client)
 	psoc_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void psoc_remove_6_1(struct i2c_client *client)
+{
+	psoc_remove(client);
+}
+#endif
 
 static const struct i2c_device_id psoc_ids[] = {
 	{ "inv_psoc", 0, },
@@ -1461,7 +1468,11 @@ static struct i2c_driver psoc_driver = {
 		.name	= "inv_psoc",
 	},
 	.probe		= psoc_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = psoc_remove_6_1,
+#else
 	.remove		= psoc_remove,
+#endif
 	.id_table	= psoc_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
index 0ab380f480d0..2b4ef86d8279 100644
--- a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 #define USE_SMBUS    1
@@ -551,6 +552,12 @@ static int cpld_remove(struct i2c_client *client)
 	cpld_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -565,7 +572,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
index 587563188855..d797ee670a21 100644
--- a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
@@ -21,6 +21,7 @@
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <asm/uaccess.h>
+#include <linux/version.h>
 #define SWITCH_TEMPERATURE_SOCK     "/proc/switch/temp"
 
 #define USE_SMBUS    1
@@ -1447,6 +1448,12 @@ static int psoc_remove(struct i2c_client *client)
 	psoc_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void psoc_remove_6_1(struct i2c_client *client)
+{
+	psoc_remove(client);
+}
+#endif
 
 static const struct i2c_device_id psoc_ids[] = {
 	{ "inv_psoc", 0, },
@@ -1460,7 +1467,11 @@ static struct i2c_driver psoc_driver = {
 		.name	= "inv_psoc",
 	},
 	.probe		= psoc_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = psoc_remove_6_1,
+#else
 	.remove		= psoc_remove,
+#endif
 	.id_table	= psoc_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
index 57791f62e652..45c6683dcac4 100644
--- a/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 //#include "I2CHostCommunication.h"
 
@@ -424,6 +425,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld", 0, },
@@ -437,7 +444,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
index 57791f62e652..45c6683dcac4 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 //#include "I2CHostCommunication.h"
 
@@ -424,6 +425,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld", 0, },
@@ -437,7 +444,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
index 7bb167d2e74e..b8e6a1db259a 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
@@ -17,6 +17,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 /* Size of EEPROM in bytes */
@@ -157,6 +158,12 @@ static int inv_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_eeprom_remove_6_1(struct i2c_client *client)
+{
+	inv_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_eeprom_id[] = {
 	{ "inv_eeprom", 0 },
@@ -168,7 +175,11 @@ static struct i2c_driver inv_eeprom_driver = {
 		.name	= "inv_eeprom",
 	},
 	.probe		= inv_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_eeprom_remove_6_1,
+#else
 	.remove		= inv_eeprom_remove,
+#endif
 	.id_table	= inv_eeprom_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
index 683ffa0ff3ce..139321f5d209 100644
--- a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 //#include "I2CHostCommunication.h"
 
@@ -376,6 +377,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld", 0, },
@@ -389,7 +396,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
index 23ff3a3903fa..b6848c3b1928 100644
--- a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
@@ -21,6 +21,7 @@
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <asm/uaccess.h>
+#include <linux/version.h>
 #define SWITCH_TEMPERATURE_SOCK     "/proc/switch/temp"
 
 #define USE_SMBUS    1
@@ -1447,6 +1448,12 @@ static int psoc_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void psoc_remove_6_1(struct i2c_client *client)
+{
+	psoc_remove(client);
+}
+#endif
 
 static const struct i2c_device_id psoc_ids[] = {
 	{ "inv_psoc", 0, },
@@ -1460,7 +1467,11 @@ static struct i2c_driver psoc_driver = {
 		.name	= "inv_psoc",
 	},
 	.probe		= psoc_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = psoc_remove_6_1,
+#else
 	.remove		= psoc_remove,
+#endif
 	.id_table	= psoc_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
index 235f63c87872..c5ad818773f7 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
@@ -21,6 +21,7 @@
 #include <linux/fs.h>
 #include <asm/uaccess.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 #define USE_SMBUS    		1
 #define CPLD_POLLING_PERIOD 	1000
@@ -1532,6 +1533,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -1545,7 +1552,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
index 7bb167d2e74e..b8e6a1db259a 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
@@ -17,6 +17,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 /* Size of EEPROM in bytes */
@@ -157,6 +158,12 @@ static int inv_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_eeprom_remove_6_1(struct i2c_client *client)
+{
+	inv_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_eeprom_id[] = {
 	{ "inv_eeprom", 0 },
@@ -168,7 +175,11 @@ static struct i2c_driver inv_eeprom_driver = {
 		.name	= "inv_eeprom",
 	},
 	.probe		= inv_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_eeprom_remove_6_1,
+#else
 	.remove		= inv_eeprom_remove,
+#endif
 	.id_table	= inv_eeprom_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
index fbb1479d3ad4..8a66b906bf54 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
@@ -26,6 +26,7 @@
 #include <linux/slab.h>
 #include <linux/i2c.h>
 #include <linux/i2c/pmbus.h>
+#include <linux/version.h>
 #include "pmbus.h"
 
 enum chips { ucd9000, ucd90120, ucd90124, ucd9090, ucd90910 };
@@ -235,7 +236,11 @@ static struct i2c_driver ucd9000_driver = {
 		.name = "ucd9000",
 	},
 	.probe = ucd9000_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = ucd9000_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
index 4018ef1dbe64..bb71fd8e62bf 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
@@ -25,6 +25,7 @@
 #include <linux/i2c-mux.h>
 
 #include <linux/i2c/pca954x.h>
+#include <linux/version.h>
 
 /*
  * The PCA9541 is a bus master selector. It supports two I2C masters connected
@@ -588,6 +589,12 @@ static int pca9541_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pca9541_remove_6_1(struct i2c_client *client)
+{
+	pca9541_remove(client);
+}
+#endif
 
 static struct i2c_driver pca9541_driver = {
 	.driver = {
@@ -595,7 +602,11 @@ static struct i2c_driver pca9541_driver = {
 		   .owner = THIS_MODULE,
 		   },
 	.probe = pca9541_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pca9541_remove_6_1,
+#else
 	.remove = pca9541_remove,
+#endif
 	.id_table = pca9541_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
index 701069fd3508..55e1dd3f48c5 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
@@ -25,6 +25,7 @@
 #include <linux/i2c-mux.h>
 
 #include <linux/i2c/pca954x.h>
+#include <linux/version.h>
 
 /*
  * The PCA9641 is a bus master selector. It supports two I2C masters connected
@@ -431,6 +432,12 @@ static int pca9641_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pca9641_remove_6_1(struct i2c_client *client)
+{
+	pca9641_remove(client);
+}
+#endif
 
 static struct i2c_driver pca9641_driver = {
 	.driver = {
@@ -438,7 +445,11 @@ static struct i2c_driver pca9641_driver = {
 		   .owner = THIS_MODULE,
 		   },
 	.probe = pca9641_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pca9641_remove_6_1,
+#else
 	.remove = pca9641_remove,
+#endif
 	.id_table = pca9641_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
index 00cf9ebdac80..277dc764e67a 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
@@ -25,6 +25,7 @@
 #include <linux/i2c-mux.h>
 
 #include <linux/platform_data/pca954x.h>
+#include <linux/version.h>
 
 /*
  * The PCA9541 is a bus master selector. It supports two I2C masters connected
@@ -555,6 +556,12 @@ static int pca9641_remove(struct i2c_client *client)
 	i2c_mux_del_adapters(muxc);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pca9641_remove_6_1(struct i2c_client *client)
+{
+	pca9641_remove(client);
+}
+#endif
 
 static struct i2c_driver pca9641_driver = {
 	.driver = {
@@ -562,7 +569,11 @@ static struct i2c_driver pca9641_driver = {
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
 	.probe = pca9641_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pca9641_remove_6_1,
+#else
 	.remove = pca9641_remove,
+#endif
 	.id_table = pca9641_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
index ab0da595f0c4..01b727ec0e3f 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
@@ -25,6 +25,7 @@
 #include <linux/completion.h>
 #include <linux/ipmi.h>
 #include <linux/ipmi_smi.h>
+#include <linux/version.h>
 
 /* definition */
 #define CPLD_INFO_OFFSET		0x00
@@ -959,6 +960,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -972,7 +979,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
index 7bb167d2e74e..b8e6a1db259a 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
@@ -17,6 +17,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 /* Size of EEPROM in bytes */
@@ -157,6 +158,12 @@ static int inv_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_eeprom_remove_6_1(struct i2c_client *client)
+{
+	inv_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_eeprom_id[] = {
 	{ "inv_eeprom", 0 },
@@ -168,7 +175,11 @@ static struct i2c_driver inv_eeprom_driver = {
 		.name	= "inv_eeprom",
 	},
 	.probe		= inv_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_eeprom_remove_6_1,
+#else
 	.remove		= inv_eeprom_remove,
+#endif
 	.id_table	= inv_eeprom_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
index ba729a405ba2..b44675e5891d 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
@@ -26,6 +26,7 @@
 #include <linux/slab.h>
 #include <linux/i2c.h>
 #include <linux/pmbus.h>
+#include <linux/version.h>
 #include "pmbus.h"
 
 enum chips { ucd9000, ucd90120, ucd90124, ucd9090, ucd90910 };
@@ -235,7 +236,11 @@ static struct i2c_driver ucd9000_driver = {
 		.name = "ucd9000",
 	},
 	.probe = ucd9000_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = ucd9000_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
index 73135c5fa240..0f5d3e14b87a 100644
--- a/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 #define USE_SMBUS    1
@@ -597,6 +598,12 @@ static int cpld_remove(struct i2c_client *client)
 	cpld_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -611,7 +618,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
index 778943870155..545bcd03eb57 100644
--- a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 #define USE_SMBUS    1
@@ -530,6 +531,12 @@ static int cpld_remove(struct i2c_client *client)
 	cpld_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld", 0, },
@@ -543,7 +550,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
index 347a38e4e10c..9afbe8a62e77 100644
--- a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
@@ -16,6 +16,7 @@
 #include <linux/mutex.h>
 #include <linux/delay.h>
 #include <linux/swab.h>
+#include <linux/version.h>
 
 #define USE_SMBUS    1
 
@@ -1228,6 +1229,12 @@ static int psoc_remove(struct i2c_client *client)
 	psoc_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void psoc_remove_6_1(struct i2c_client *client)
+{
+	psoc_remove(client);
+}
+#endif
 
 static const struct i2c_device_id psoc_ids[] = {
 	{ "inv_psoc", 0, },
@@ -1241,7 +1248,11 @@ static struct i2c_driver psoc_driver = {
 		.name	= "inv_psoc",
 	},
 	.probe		= psoc_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = psoc_remove_6_1,
+#else
 	.remove		= psoc_remove,
+#endif
 	.id_table	= psoc_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
index f605a93301b0..312125d93c16 100644
--- a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 #define USE_SMBUS    1
@@ -499,6 +500,12 @@ static int cpld_remove(struct i2c_client *client)
 	cpld_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld", 0, },
@@ -512,7 +519,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
index ec6ec39f0071..ff1e2afb5267 100644
--- a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
@@ -15,6 +15,7 @@
 #include <linux/err.h>
 #include <linux/mutex.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 #define IMPLEMENT_IPMI_CODE 1
 int USE_IPMI=0;
@@ -1171,6 +1172,12 @@ static int psoc_remove(struct i2c_client *client)
 	psoc_led_client_dev = NULL;
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void psoc_remove_6_1(struct i2c_client *client)
+{
+	psoc_remove(client);
+}
+#endif
 
 static const struct i2c_device_id psoc_ids[] = {
 	{ "inv_psoc", 0, },
@@ -1184,7 +1191,11 @@ static struct i2c_driver psoc_driver = {
 		.name	= "inv_psoc",
 	},
 	.probe		= psoc_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = psoc_remove_6_1,
+#else
 	.remove		= psoc_remove,
+#endif
 	.id_table	= psoc_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
index 4c97b7f136f5..72744b5d1ca1 100644
--- a/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
@@ -14,6 +14,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "inv_pthread.h"
 
 //#include "I2CHostCommunication.h"
@@ -555,6 +556,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -569,7 +576,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
index 00cf9ebdac80..277dc764e67a 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
@@ -25,6 +25,7 @@
 #include <linux/i2c-mux.h>
 
 #include <linux/platform_data/pca954x.h>
+#include <linux/version.h>
 
 /*
  * The PCA9541 is a bus master selector. It supports two I2C masters connected
@@ -555,6 +556,12 @@ static int pca9641_remove(struct i2c_client *client)
 	i2c_mux_del_adapters(muxc);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pca9641_remove_6_1(struct i2c_client *client)
+{
+	pca9641_remove(client);
+}
+#endif
 
 static struct i2c_driver pca9641_driver = {
 	.driver = {
@@ -562,7 +569,11 @@ static struct i2c_driver pca9641_driver = {
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
 	.probe = pca9641_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pca9641_remove_6_1,
+#else
 	.remove = pca9641_remove,
+#endif
 	.id_table = pca9641_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
index 8c23d2816929..e875df2eb2c0 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
@@ -25,6 +25,7 @@
 #include <linux/completion.h>
 #include <linux/ipmi.h>
 #include <linux/ipmi_smi.h>
+#include <linux/version.h>
 
 /* definition */
 #define CPLD_INFO_OFFSET		0x00
@@ -742,6 +743,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "inv_cpld" , 0, },
@@ -755,7 +762,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "inv_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
index 7bb167d2e74e..b8e6a1db259a 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
@@ -17,6 +17,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 /* Size of EEPROM in bytes */
@@ -157,6 +158,12 @@ static int inv_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_eeprom_remove_6_1(struct i2c_client *client)
+{
+	inv_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_eeprom_id[] = {
 	{ "inv_eeprom", 0 },
@@ -168,7 +175,11 @@ static struct i2c_driver inv_eeprom_driver = {
 		.name	= "inv_eeprom",
 	},
 	.probe		= inv_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_eeprom_remove_6_1,
+#else
 	.remove		= inv_eeprom_remove,
+#endif
 	.id_table	= inv_eeprom_id,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
index cd1eb1228eba..b93c1649f38a 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
@@ -12,6 +12,7 @@
 #include <linux/i2c.h>
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 #define PMBUS_VOUT_MODE		0x20
 #define PMBUS_FAN_PWM		0x3b
@@ -654,6 +655,12 @@ static int inv_psu_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_psu_remove_6_1(struct i2c_client *client)
+{
+	inv_psu_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_psu_ids[] = {
 	{ "inv_psu" , 0, },
@@ -667,7 +674,11 @@ static struct i2c_driver psu_driver = {
 		.name	= "inv_psu",
 	},
 	.probe		= inv_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_psu_remove_6_1,
+#else
 	.remove		= inv_psu_remove,
+#endif
 	.id_table	= inv_psu_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
index da976f950d5d..79fc61e60735 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
@@ -12,6 +12,7 @@
 #include <linux/i2c.h>
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 #define PMBUS_PAGE	0x0
 #define PMBUS_VOUT_MODE	0x20
@@ -221,6 +222,12 @@ static int inv_ucd90160_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_ucd90160_remove_6_1(struct i2c_client *client)
+{
+	inv_ucd90160_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_ucd90160_ids[] = {
 	{ "inv_ucd90160" , 0, },
@@ -237,7 +244,11 @@ static struct i2c_driver ucd90160_driver = {
 		.name	= "inv_ucd90160",
 	},
 	.probe		= inv_ucd90160_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_ucd90160_remove_6_1,
+#else
 	.remove		= inv_ucd90160_remove,
+#endif
 	.id_table	= inv_ucd90160_ids,
 };
 
diff --git a/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
index f03c3cb16608..76abfa8b2607 100644
--- a/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
@@ -5,6 +5,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { 0x53, I2C_CLIENT_END };
@@ -166,6 +167,12 @@ static int inv_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void inv_eeprom_remove_6_1(struct i2c_client *client)
+{
+	inv_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id inv_eeprom_id[] = {
 	{ "inv_eeprom", 0 },
@@ -177,7 +184,11 @@ static struct i2c_driver inv_eeprom_driver = {
 		.name	= "inv_eeprom",
 	},
 	.probe		= inv_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = inv_eeprom_remove_6_1,
+#else
 	.remove		= inv_eeprom_remove,
+#endif
 	.id_table	= inv_eeprom_id,
 
 	.class		= I2C_CLASS_DDC | I2C_CLASS_SPD,
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
index 276912745b9a..4e33632710ae 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
@@ -1607,6 +1607,12 @@ int pmbus_do_remove(struct i2c_client *client)
 	kfree(data->group.attrs);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pmbus_do_remove_6_1(struct i2c_client *client)
+{
+	pmbus_do_remove(client);
+}
+#endif
 
 
 /*
@@ -1776,7 +1782,11 @@ static struct i2c_driver pmbus_driver = {
 		   .name = "fse000",
 		   },
 	.probe = pmbus_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = pmbus_id,
 };
 
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
index 921a2ea424a3..db20948696f5 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
@@ -1,5 +1,6 @@
 #include <linux/module.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #include "master_cpld_reg.h"
 #include "master_cpld_sysfs.h"
@@ -472,6 +473,12 @@ static int master_cpld_remove(struct i2c_client *client)
     printk(KERN_INFO "%s: Master CPLD removed.\n", __FUNCTION__);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void master_cpld_remove_6_1(struct i2c_client *client)
+{
+    master_cpld_remove(client);
+}
+#endif
 
 static struct i2c_driver master_cpld_driver = {
     .driver = {
@@ -479,7 +486,11 @@ static struct i2c_driver master_cpld_driver = {
         .owner = THIS_MODULE,
     },
     .probe = master_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = master_cpld_remove_6_1,
+#else
     .remove = master_cpld_remove,
+#endif
     .id_table = master_cpld_ids,
 };
 
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
index 8809573fa4ad..70fb2b2294ea 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
@@ -1,5 +1,6 @@
 #include <linux/module.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #include "slave_cpld_reg.h"
 #include "slave_cpld_sysfs.h"
@@ -396,6 +397,12 @@ static int slave_cpld_remove(struct i2c_client *client)
     printk(KERN_INFO "%s: Slave CPLD removed.\n", __FUNCTION__);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void slave_cpld_remove_6_1(struct i2c_client *client)
+{
+    slave_cpld_remove(client);
+}
+#endif
 
 static struct i2c_driver slave_cpld_driver = {
     .driver = {
@@ -403,7 +410,11 @@ static struct i2c_driver slave_cpld_driver = {
         .owner = THIS_MODULE,
     },
     .probe = slave_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = slave_cpld_remove_6_1,
+#else
     .remove = slave_cpld_remove,
+#endif
     .id_table = slave_cpld_ids,
 };
 
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
index 832d970528f3..657411475faa 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
@@ -2,6 +2,7 @@
 
 #include <linux/module.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #include "system_cpld_reg.h"
 #include "system_cpld_sysfs.h"
@@ -525,6 +526,12 @@ static int system_cpld_remove(struct i2c_client *client)
     printk(KERN_INFO "%s: System CPLD removed.\n", __FUNCTION__);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void system_cpld_remove_6_1(struct i2c_client *client)
+{
+    system_cpld_remove(client);
+}
+#endif
 
 static struct i2c_driver system_cpld_driver = {
     .driver = {
@@ -532,7 +539,11 @@ static struct i2c_driver system_cpld_driver = {
         .owner = THIS_MODULE,
     },
     .probe = system_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = system_cpld_remove_6_1,
+#else
     .remove = system_cpld_remove,
+#endif
     .id_table = system_cpld_ids,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c b/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
index 636c2b17e432..34e095828fd6 100644
--- a/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
@@ -13,7 +13,8 @@
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
-#include <linux/mutex.h>
+#include <linux/mutex.h>
+#include <linux/version.h>
 
 //#include "I2CHostCommunication.h"
 
@@ -430,7 +431,13 @@ static int cpld_remove(struct i2c_client *client)
 	i2c_set_clientdata(client, NULL);
 	kfree(data);
 	return 0;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "net_cpld" , 0, },
@@ -445,7 +452,12 @@ static struct i2c_driver cpld_driver = {
 		.name	= "net_cpld",
 	},
 	.probe		= cpld_probe,
-	.remove		= cpld_remove,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
+	.remove		= cpld_remove,
+#endif
+	
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
index d3cc702cecc8..8126ecb618d5 100644
--- a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
@@ -30,6 +30,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* header file for i2c cpld driver of Netberg Aurora 750
  *
@@ -1728,6 +1729,12 @@ static int netberg_i2c_cpld_remove(struct i2c_client *client)
     netberg_i2c_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void netberg_i2c_cpld_remove_6_1(struct i2c_client *client)
+{
+    netberg_i2c_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, netberg_i2c_cpld_id);
 
@@ -1737,7 +1744,11 @@ static struct i2c_driver netberg_i2c_cpld_driver = {
         .name = "netberg_i2c_cpld",
     },
     .probe = netberg_i2c_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = netberg_i2c_cpld_remove_6_1,
+#else
     .remove = netberg_i2c_cpld_remove,
+#endif
     .id_table = netberg_i2c_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
index ae1e7389faad..d0d9c64660ac 100644
--- a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
+++ b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
@@ -33,6 +33,7 @@
 #define _AURORA_750_PLATFORM_H
 
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 // remove debug before release
 #define DEBUG
@@ -395,6 +396,12 @@ nba750_psu_remove(struct i2c_client *client)
     
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void nba750_psu_remove_6_1(struct i2c_client *client)
+{
+    nba750_psu_remove(client);
+}
+#endif
 
 
 /* 
@@ -529,7 +536,11 @@ static struct i2c_driver nba750_psu_driver = {
         .name     = DRIVER_NAME,
     },
     .probe        = nba750_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = nba750_psu_remove_6_1,
+#else
     .remove       = nba750_psu_remove,
+#endif
     .id_table     = nba750_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
index 00cf9ebdac80..277dc764e67a 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
@@ -25,6 +25,7 @@
 #include <linux/i2c-mux.h>
 
 #include <linux/platform_data/pca954x.h>
+#include <linux/version.h>
 
 /*
  * The PCA9541 is a bus master selector. It supports two I2C masters connected
@@ -555,6 +556,12 @@ static int pca9641_remove(struct i2c_client *client)
 	i2c_mux_del_adapters(muxc);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void pca9641_remove_6_1(struct i2c_client *client)
+{
+	pca9641_remove(client);
+}
+#endif
 
 static struct i2c_driver pca9641_driver = {
 	.driver = {
@@ -562,7 +569,11 @@ static struct i2c_driver pca9641_driver = {
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
 	.probe = pca9641_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pca9641_remove_6_1,
+#else
 	.remove = pca9641_remove,
+#endif
 	.id_table = pca9641_id,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
index e8d313c8016b..7e3dda5cb253 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
@@ -25,6 +25,7 @@
 #include <linux/completion.h>
 #include <linux/ipmi.h>
 #include <linux/ipmi_smi.h>
+#include <linux/version.h>
 
 /* definition */
 #define CPLD_INFO_OFFSET		0x00
@@ -742,6 +743,12 @@ static int cpld_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 static const struct i2c_device_id cpld_ids[] = {
 	{ "net_cpld" , 0, },
@@ -755,7 +762,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "net_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_ids,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
index 4a9692ec8660..01ed106b5098 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
@@ -17,6 +17,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 
 /* Size of EEPROM in bytes */
@@ -157,6 +158,12 @@ static int net_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void net_eeprom_remove_6_1(struct i2c_client *client)
+{
+	net_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id net_eeprom_id[] = {
 	{ "net_eeprom", 0 },
@@ -168,7 +175,11 @@ static struct i2c_driver net_eeprom_driver = {
 		.name	= "net_eeprom",
 	},
 	.probe		= net_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = net_eeprom_remove_6_1,
+#else
 	.remove		= net_eeprom_remove,
+#endif
 	.id_table	= net_eeprom_id,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
index ce620e6a627e..17ca809d11f0 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
@@ -12,6 +12,7 @@
 #include <linux/i2c.h>
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 #define PMBUS_VOUT_MODE		0x20
 #define PMBUS_FAN_PWM		0x3b
@@ -654,6 +655,12 @@ static int net_psu_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void net_psu_remove_6_1(struct i2c_client *client)
+{
+	net_psu_remove(client);
+}
+#endif
 
 static const struct i2c_device_id net_psu_ids[] = {
 	{ "net_psu" , 0, },
@@ -667,7 +674,11 @@ static struct i2c_driver psu_driver = {
 		.name	= "net_psu",
 	},
 	.probe		= net_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = net_psu_remove_6_1,
+#else
 	.remove		= net_psu_remove,
+#endif
 	.id_table	= net_psu_ids,
 };
 
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
index 170d5ea1bd16..c4e05ed6a6b9 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
@@ -12,6 +12,7 @@
 #include <linux/i2c.h>
 #include <linux/hwmon.h>
 #include <linux/hwmon-sysfs.h>
+#include <linux/version.h>
 
 #define PMBUS_PAGE	0x0
 #define PMBUS_VOUT_MODE	0x20
@@ -221,6 +222,12 @@ static int net_ucd90160_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void net_ucd90160_remove_6_1(struct i2c_client *client)
+{
+	net_ucd90160_remove(client);
+}
+#endif
 
 static const struct i2c_device_id net_ucd90160_ids[] = {
 	{ "net_ucd90160" , 0, },
@@ -237,7 +244,11 @@ static struct i2c_driver ucd90160_driver = {
 		.name	= "net_ucd90160",
 	},
 	.probe		= net_ucd90160_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = net_ucd90160_remove_6_1,
+#else
 	.remove		= net_ucd90160_remove,
+#endif
 	.id_table	= net_ucd90160_ids,
 };
 
diff --git a/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c b/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
index 84628b83aedd..bb8a765e1139 100755
--- a/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
+++ b/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
@@ -26,6 +26,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { /*0x50, 0x51, 0x52, 0x53, 0x54,
@@ -241,6 +242,12 @@ static int mb_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void mb_eeprom_remove_6_1(struct i2c_client *client)
+{
+	mb_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id mb_eeprom_id[] = {
 	{ "mb_eeprom", 0 },
@@ -252,7 +259,11 @@ static struct i2c_driver mb_eeprom_driver = {
 		.name	= "mb_eeprom",
 	},
 	.probe		= mb_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = mb_eeprom_remove_6_1,
+#else
 	.remove		= mb_eeprom_remove,
+#endif
 	.id_table	= mb_eeprom_id,
 
 	.class		= I2C_CLASS_DDC | I2C_CLASS_SPD,
diff --git a/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c b/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
index 2f2f09eb66c3..1bc538c10185 100755
--- a/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
+++ b/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
@@ -13,6 +13,7 @@
 #include <linux/kthread.h>
 #include <linux/slab.h>
 #include <linux/gpio.h>
+#include <linux/version.h>
 
 #if 0
 #include "hardware_monitor.h"
@@ -457,7 +458,11 @@ static struct i2c_driver w83795adg_hardware_monitor_driver = {
       .name = "w83795adg_hardware_monitor",
     },
     .probe    = w83795adg_hardware_monitor_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = w83795adg_hardware_monitor_remove_6_1,
+#else
     .remove   = w83795adg_hardware_monitor_remove,
+#endif
     .shutdown   = w83795adg_hardware_monitor_shutdown,
     .id_table = w83795adg_hardware_monitor_id,
     .detect   = w83795adg_hardware_monitor_detect,
@@ -8701,6 +8706,12 @@ static int w83795adg_hardware_monitor_remove(struct i2c_client *client)
     }
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void w83795adg_hardware_monitor_remove_6_1(struct i2c_client *client)
+{
+    w83795adg_hardware_monitor_remove(client);
+}
+#endif
 
 static void w83795adg_hardware_monitor_shutdown(struct i2c_client *client)
 {
diff --git a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
index 63466a171bdd..e7a332e234ac 100644
--- a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
+++ b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
@@ -25,6 +25,7 @@
 #include <linux/log2.h>
 #include <linux/kthread.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 static const unsigned short normal_i2c[] = { 0x2C, 0x2E, 0x2F, I2C_CLIENT_END };
 
@@ -61,7 +62,11 @@ static struct i2c_driver quanta_ly_hwmon_driver = {
 		.name	= "quanta_ly_hwmon",
 	},
 	.probe		= quanta_ly_hwmon_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = quanta_ly_hwmon_remove_6_1,
+#else
 	.remove		= quanta_ly_hwmon_remove,
+#endif
 	.id_table	= quanta_ly_hwmon_id,
 	.address_list	= normal_i2c,
 };
@@ -289,6 +294,12 @@ static int quanta_ly_hwmon_remove(struct i2c_client *client)
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void quanta_ly_hwmon_remove_6_1(struct i2c_client *client)
+{
+	quanta_ly_hwmon_remove(client);
+}
+#endif
 
 module_i2c_driver(quanta_ly_hwmon_driver);
 
diff --git a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
index f1700c9667a5..4d045e87b1f3 100644
--- a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
+++ b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
@@ -23,6 +23,7 @@
 #include <linux/i2c.h>
 #include <linux/i2c-mux.h>
 #include <linux/gpio.h>
+#include <linux/version.h>
 
 #define QUANTA_LY2_I2C_MUX_CHANNEL_FIRST 1
 
@@ -337,6 +338,12 @@ static int quanta_ly2_i2c_mux_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void quanta_ly2_i2c_mux_remove_6_1(struct i2c_client *client)
+{
+	quanta_ly2_i2c_mux_remove(client);
+}
+#endif
 
 static struct i2c_driver quanta_ly2_i2c_mux_driver = {
 	.driver = {
@@ -344,7 +351,11 @@ static struct i2c_driver quanta_ly2_i2c_mux_driver = {
 		   .owner = THIS_MODULE,
 		   },
 	.probe = quanta_ly2_i2c_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = quanta_ly2_i2c_mux_remove_6_1,
+#else
 	.remove = quanta_ly2_i2c_mux_remove,
+#endif
 	.id_table = quanta_ly2_i2c_mux_id,
 };
 
diff --git a/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c b/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
index 2ec388662da2..22b6ecff1be9 100644
--- a/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
+++ b/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
@@ -24,6 +24,7 @@
 #include <linux/i2c-mux.h>
 #include <linux/gpio.h>
 #include <linux/platform_data/pca953x.h>
+#include <linux/version.h>
 
 /*
  * Disable QSFP module reset (n=1..16)
@@ -275,6 +276,12 @@ static int quanta_ly6_i2c_mux_remove(struct i2c_client *client)
 	kfree(data);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void quanta_ly6_i2c_mux_remove_6_1(struct i2c_client *client)
+{
+	quanta_ly6_i2c_mux_remove(client);
+}
+#endif
 
 static struct i2c_driver quanta_ly6_i2c_mux_driver = {
 	.driver = {
@@ -282,7 +289,11 @@ static struct i2c_driver quanta_ly6_i2c_mux_driver = {
 		   .owner = THIS_MODULE,
 		   },
 	.probe = quanta_ly6_i2c_mux_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = quanta_ly6_i2c_mux_remove_6_1,
+#else
 	.remove = quanta_ly6_i2c_mux_remove,
+#endif
 	.id_table = quanta_ly6_i2c_mux_id,
 };
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld.c b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld.c
index 678b1dc14390..db12eed1d051 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld.c
@@ -38,6 +38,7 @@
 #include <linux/idr.h>
 #include <linux/ctype.h>
 #include <linux/string.h>
+#include <linux/version.h>
 
 static DEFINE_IDA(cpld_ida);
 
@@ -82,7 +83,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "qci_cpld",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_id,
 //	.address_list	= normal_i2c,
 };
@@ -595,6 +600,12 @@ static int cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 module_i2c_driver(cpld_driver);
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_led.c b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_led.c
index 869966b3f2f4..3474d0507fd3 100644
--- a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_led.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_led.c
@@ -36,6 +36,7 @@
 #include <linux/slab.h>
 #include <linux/kdev_t.h>
 #include <linux/idr.h>
+#include <linux/version.h>
 
 static DEFINE_IDA(cpld_led_ida);
 
@@ -76,7 +77,11 @@ static struct i2c_driver cpld_led_driver = {
 		.name	= "qci_cpld_led",
 	},
 	.probe		= cpld_led_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_led_remove_6_1,
+#else
 	.remove		= cpld_led_remove,
+#endif
 	.id_table	= cpld_led_id,
 //	.address_list	= normal_i2c,
 };
@@ -268,6 +273,12 @@ static int cpld_led_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_led_remove_6_1(struct i2c_client *client)
+{
+	cpld_led_remove(client);
+}
+#endif
 
 module_i2c_driver(cpld_led_driver);
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_sfp28.c b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_sfp28.c
index f2f2c0d8b99a..03e84a79bbb4 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_sfp28.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/qci_cpld_sfp28.c
@@ -38,6 +38,7 @@
 #include <linux/idr.h>
 #include <linux/ctype.h>
 #include <linux/string.h>
+#include <linux/version.h>
 
 static DEFINE_IDA(cpld_ida);
 
@@ -80,7 +81,11 @@ static struct i2c_driver cpld_driver = {
 		.name	= "qci_cpld_sfp28",
 	},
 	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = cpld_remove_6_1,
+#else
 	.remove		= cpld_remove,
+#endif
 	.id_table	= cpld_id,
 //	.address_list	= normal_i2c,
 };
@@ -391,6 +396,12 @@ static int cpld_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpld_remove_6_1(struct i2c_client *client)
+{
+	cpld_remove(client);
+}
+#endif
 
 module_i2c_driver(cpld_driver);
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c b/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
index 176e6caf9b68..675f579676c1 100644
--- a/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
@@ -27,6 +27,7 @@
 #include <linux/i2c.h>
 #include <../drivers/hwmon/pmbus/pmbus.h>
 #include <linux/delay.h>
+#include <linux/version.h>
 
 enum projects { ly8, ix1, ix2, ix1b };
 
@@ -471,7 +472,11 @@ static struct i2c_driver qci_pmbus_driver = {
 		   .name = "qci-pmbus",
 		   },
 	.probe = qci_pmbus_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = qci_pmbus_id,
 };
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
index fc8bb41c0a76..b2db107d222e 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
@@ -25,6 +25,7 @@
 #include <linux/log2.h>
 #include <linux/kthread.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 static const unsigned short normal_i2c[] = { 0x4E, I2C_CLIENT_END };
 
@@ -67,7 +68,11 @@ static struct i2c_driver quanta_hwmon_ix_series_driver = {
 		.name	= "quanta_hwmon_ix_series",
 	},
 	.probe		= quanta_hwmon_ix_series_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = quanta_hwmon_ix_series_remove_6_1,
+#else
 	.remove		= quanta_hwmon_ix_series_remove,
+#endif
 	.id_table	= quanta_hwmon_ix_series_id,
 	.address_list	= normal_i2c,
 };
@@ -243,6 +248,12 @@ static int quanta_hwmon_ix_series_remove(struct i2c_client *client)
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void quanta_hwmon_ix_series_remove_6_1(struct i2c_client *client)
+{
+	quanta_hwmon_ix_series_remove(client);
+}
+#endif
 
 module_i2c_driver(quanta_hwmon_ix_series_driver);
 
diff --git a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
index 1b807bcf5037..2228116a91b3 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
@@ -25,6 +25,7 @@
 #include <linux/log2.h>
 #include <linux/kthread.h>
 #include <linux/slab.h>
+#include <linux/version.h>
 
 static const unsigned short normal_i2c[] = { 0x4E, I2C_CLIENT_END };
 
@@ -71,7 +72,11 @@ static struct i2c_driver quanta_hwmon_ly_series_driver = {
 		.name	= "quanta_hwmon_ly_series",
 	},
 	.probe		= quanta_hwmon_ly_series_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = quanta_hwmon_ly_series_remove_6_1,
+#else
 	.remove		= quanta_hwmon_ly_series_remove,
+#endif
 	.id_table	= quanta_hwmon_ly_series_id,
 	.address_list	= normal_i2c,
 };
@@ -242,6 +247,12 @@ static int quanta_hwmon_ly_series_remove(struct i2c_client *client)
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void quanta_hwmon_ly_series_remove_6_1(struct i2c_client *client)
+{
+	quanta_hwmon_ly_series_remove(client);
+}
+#endif
 
 module_i2c_driver(quanta_hwmon_ly_series_driver);
 
diff --git a/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c b/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
index 492c6e025068..c4d5ef28e425 100755
--- a/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
+++ b/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
@@ -26,6 +26,7 @@
 #include <linux/jiffies.h>
 #include <linux/i2c.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { /*0x50, 0x51, 0x52, 0x53, 0x54,
@@ -241,6 +242,12 @@ static int mb_eeprom_remove(struct i2c_client *client)
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void mb_eeprom_remove_6_1(struct i2c_client *client)
+{
+	mb_eeprom_remove(client);
+}
+#endif
 
 static const struct i2c_device_id mb_eeprom_id[] = {
 	{ "mb_eeprom", 0 },
@@ -252,7 +259,11 @@ static struct i2c_driver mb_eeprom_driver = {
 		.name	= "mb_eeprom",
 	},
 	.probe		= mb_eeprom_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = mb_eeprom_remove_6_1,
+#else
 	.remove		= mb_eeprom_remove,
+#endif
 	.id_table	= mb_eeprom_id,
 
 	.class		= I2C_CLASS_DDC | I2C_CLASS_SPD,
diff --git a/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c b/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
index 1c72e68376b9..25f9475569f3 100644
--- a/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
@@ -30,6 +30,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "x86-64-ufispace-s9700-23d-cpld.h"
 
 #ifdef DEBUG
@@ -1570,6 +1571,12 @@ static int apollo_cpld_remove(struct i2c_client *client)
     apollo_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void apollo_cpld_remove_6_1(struct i2c_client *client)
+{
+    apollo_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, apollo_cpld_id);
 
@@ -1579,7 +1586,11 @@ static struct i2c_driver apollo_cpld_driver = {
         .name = "x86_64_ufispace_s9700_23d_cpld",
     },
     .probe = apollo_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = apollo_cpld_remove_6_1,
+#else
     .remove = apollo_cpld_remove,
+#endif
     .id_table = apollo_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c b/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
index c3d2db5807cd..030a257d1233 100644
--- a/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
@@ -30,6 +30,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "x86-64-ufispace-s9700-53dx-cpld.h"
 
 #ifdef DEBUG
@@ -1788,6 +1789,12 @@ static int apollo_cpld_remove(struct i2c_client *client)
     apollo_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void apollo_cpld_remove_6_1(struct i2c_client *client)
+{
+    apollo_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, apollo_cpld_id);
 
@@ -1797,7 +1804,11 @@ static struct i2c_driver apollo_cpld_driver = {
         .name = "x86_64_ufispace_s9700_53dx_cpld",
     },
     .probe = apollo_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = apollo_cpld_remove_6_1,
+#else
     .remove = apollo_cpld_remove,
+#endif
     .id_table = apollo_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c b/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
index 8b8663db6a62..ac3b28df36c4 100644
--- a/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
@@ -30,6 +30,7 @@
 #include <linux/hwmon-sysfs.h>
 #include <linux/err.h>
 #include <linux/mutex.h>
+#include <linux/version.h>
 #include "x86-64-ufispace-s9705-48d-cpld.h"
 
 #ifdef DEBUG
@@ -1518,6 +1519,12 @@ static int apollo_cpld_remove(struct i2c_client *client)
     apollo_cpld_remove_client(client);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void apollo_cpld_remove_6_1(struct i2c_client *client)
+{
+    apollo_cpld_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, apollo_cpld_id);
 
@@ -1527,7 +1534,11 @@ static struct i2c_driver apollo_cpld_driver = {
         .name = "x86_64_ufispace_s9705_48d_cpld",
     },
     .probe = apollo_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = apollo_cpld_remove_6_1,
+#else
     .remove = apollo_cpld_remove,
+#endif
     .id_table = apollo_cpld_id,
     .address_list = cpld_i2c_addr,
 };
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
index 234b4e5f1226..d31babc525fe 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
@@ -1,5 +1,6 @@
 #include <linux/module.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #include "rseb-w1-32-cpu_cpld_reg.h"
 #include "rseb-w1-32-cpu_cpld_sysfs.h"
@@ -277,6 +278,12 @@ static int cpu_cpld_remove(struct i2c_client *client)
     printk(KERN_INFO "%s: CPU CPLD removed.\n", __FUNCTION__);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void cpu_cpld_remove_6_1(struct i2c_client *client)
+{
+    cpu_cpld_remove(client);
+}
+#endif
 
 static struct i2c_driver cpu_cpld_driver = {
     .driver = {
@@ -284,7 +291,11 @@ static struct i2c_driver cpu_cpld_driver = {
         .owner = THIS_MODULE,
     },
     .probe = cpu_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = cpu_cpld_remove_6_1,
+#else
     .remove = cpu_cpld_remove,
+#endif
     .id_table = cpu_cpld_ids,
 };
 
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
index dcc9e634106d..fd4e9c812871 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
@@ -1,5 +1,6 @@
 #include <linux/module.h>
 #include <linux/i2c.h>
+#include <linux/version.h>
 
 #include "rseb-w1-32-system_cpld_reg.h"
 #include "rseb-w1-32-system_cpld_sysfs.h"
@@ -437,6 +438,12 @@ static int system_cpld_remove(struct i2c_client *client)
     printk(KERN_INFO "%s: System CPLD removed.\n", __FUNCTION__);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void system_cpld_remove_6_1(struct i2c_client *client)
+{
+    system_cpld_remove(client);
+}
+#endif
 
 static struct i2c_driver system_cpld_driver = {
     .driver = {
@@ -444,7 +451,11 @@ static struct i2c_driver system_cpld_driver = {
         .owner = THIS_MODULE,
     },
     .probe = system_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = system_cpld_remove_6_1,
+#else
     .remove = system_cpld_remove,
+#endif
     .id_table = system_cpld_ids,
 };
 
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
index 1fb975649e36..5e4e3c6a4947 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
@@ -9,6 +9,7 @@
 #include <linux/jiffies.h>
 #include <linux/pmbus.h>
 #include <../drivers/hwmon/pmbus/pmbus.h>
+#include <linux/version.h>
 
 enum chips {
     RSEB_W1_32_PSU,
@@ -2109,6 +2110,12 @@ int _pmbus_do_remove(struct i2c_client *client)
     kfree(data->group.attrs);
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+static void _pmbus_do_remove_6_1(struct i2c_client *client)
+{
+    _pmbus_do_remove(client);
+}
+#endif
 
 MODULE_DEVICE_TABLE(i2c, pmbus_id);
 
@@ -2118,7 +2125,11 @@ static struct i2c_driver pmbus_driver = {
         .name = "rseb_w1_32_psu",
     },
     .probe = pmbus_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+    .remove = _pmbus_do_remove_6_1,
+#else
     .remove = _pmbus_do_remove,
+#endif
     .id_table = pmbus_id,
 };
 
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
index 8aba7d829048..4cab782aefad 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
@@ -19,6 +19,7 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <../drivers/hwmon/pmbus/pmbus.h>
+#include <linux/version.h>
 
 #define TPS53681_PROT_VR12_5MV      0x01 /* VR12.0 mode, 5-mV DAC */
 #define TPS53681_PROT_VR12_5_10MV   0x02 /* VR12.5 mode, 10-mV DAC */
@@ -339,7 +340,11 @@ static struct i2c_driver tps53681_driver = {
 		.of_match_table = of_match_ptr(tps53681_of_match),
 	},
 	.probe = tps53681_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+	.remove = pmbus_do_remove_6_1,
+#else
 	.remove = pmbus_do_remove,
+#endif
 	.id_table = tps53681_id,
 };
 
-- 
2.42.0

