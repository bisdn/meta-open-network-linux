From 794bb8bb89a5e1fbfe7e8a9b21629ed2ca4d5dd6 Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Tue, 21 Nov 2023 14:41:16 +0100
Subject: [PATCH 17/17] modules: update i2c_drivers with 6.3 compatibility

i2c_probe() dropped its i2c_device_id* argument, so we need to provide
different versions based on kernel version.

Add variants using the following semantic patch:

// <smpl>
@r@
identifier DRIVER;
identifier remove_fn;
fresh identifier probe_fn_wrap = probe_fn ## "_6_3";
position p;
@@
struct i2c_driver DRIVER@p = {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = probe_fn_wrap,
+#else
	.probe = probe_fn,
+#endif
};

@i depends on r@
@@
#include <linux/version.h>
@depends on r && !i@
@@
#include <...>
+#include <linux/version.h>
@depends on r@
identifier r.probe_fn;
identifier r.probe_fn_wrap;
@@
int probe_fn(...) {...}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static void probe_fn_wrap(struct i2c_client *client)
+{
+	probe_fn(client, i2c_client_get_device_id(client));
+}
+#endif
// </smpl>

applied with

  spatch --smpl-spacing --sp-file 6.3-i2c_probe_sig.cocci --in-place --dir packages/

Result taken as is, without any code style fixes.

Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 .../base/any/kernels/modules/accton_i2c_psu.c     | 10 ++++++++++
 packages/base/any/kernels/modules/cpr_4011_4mxx.c | 10 ++++++++++
 packages/base/any/kernels/modules/dps850.c        | 15 +++++++++++++--
 packages/base/any/kernels/modules/emerson700.c    | 10 ++++++++++
 packages/base/any/kernels/modules/optoe.c         | 10 ++++++++++
 packages/base/any/kernels/modules/ym2651y.c       | 10 ++++++++++
 .../modules/accton_as4610_cpld.c                  | 10 ++++++++++
 .../arm-accton-as4610/modules/accton_as4610_psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as4222-28pe-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54pe-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54pe-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54te-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as4630-54te-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5512-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5512-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5712-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5712-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5812-54t-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5812-54t-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5812-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5812-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5822-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5822-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5835-54t-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5835-54t-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5835-54t-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5835-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5835-54x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5835-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5912-54x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5912-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54xk-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54xk-fan.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5912-54xk-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5915-18x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5915-18x-fan.c | 10 ++++++++++
 .../builds/x86-64-accton-as5915-18x-fpga.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5915-18x-psu.c | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-as5915-18x-sys.c | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5916-54x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as5916-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xk-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xk-fan.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xk-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xm-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xm-fan.c        | 10 ++++++++++
 .../builds/x86-64-accton-as5916-54xm-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as6712-32x-cpld.c        | 12 +++++++++++-
 .../modules/builds/x86-64-accton-as6712-32x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as6812-32x-cpld.c        | 12 +++++++++++-
 .../modules/builds/x86-64-accton-as6812-32x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as7112-54x-cpld.c        | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-as7112-54x-fan.c | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-as7112-54x-psu.c | 15 +++++++++++++--
 .../builds/x86-64-accton-as7312-54x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7312-54x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7312-54x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as7312-54xs-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7312-54xs-fan.c        | 10 ++++++++++
 .../builds/x86-64-accton-as7312-54xs-psu.c        | 10 ++++++++++
 .../modules/builds/accton_as7315_27xb_fan.c       | 10 ++++++++++
 .../as7315-27xb/modules/builds/at24_as7315_27xb.c | 10 ++++++++++
 .../builds/x86-64-accton-as7315-27xb-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7315-27xb-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as7315-30x-cpld.c        | 10 ++++++++++
 .../builds/x86-64-accton-as7315-30x-fan-eeprom.c  | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7315-30x-fan.c | 10 ++++++++++
 .../builds/x86-64-accton-as7315-30x-fpga.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7315-30x-psu.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7315-30x-sys.c | 10 ++++++++++
 .../builds/x86-64-accton-as7326-56x-cpld.c        | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-as7326-56x-fan.c | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-as7326-56x-psu.c | 15 +++++++++++++--
 .../builds/x86-64-accton-as7512-32x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7512-32x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7512-32x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as7535-28xb-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7712-32x-cpld1.c       | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7712-32x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7712-32x-psu.c | 10 ++++++++++
 .../x86-64-accton-as7716-24sc-expansion_card.c    | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24sc-fan.c        | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24sc-psu.c        | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24sc-sfp.c        | 15 +++++++++++++--
 .../x86-64-accton-as7716-24xc-expansion_card.c    | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24xc-fan.c        | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24xc-psu.c        | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-24xc-sfp.c        | 15 +++++++++++++--
 .../builds/x86-64-accton-as7716-32x-cpld1.c       | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7716-32x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7716-32x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as7726-32x-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7726-32x-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7726-32x-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as7816-64x-cpld1.c       | 10 ++++++++++
 .../modules/builds/x86-64-accton-as7816-64x-fan.c | 10 ++++++++++
 .../builds/x86-64-accton-as7926-40xfb-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-as7926-40xke-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-as7926-40xke-fan.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7926-40xke-psu.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7926-80xk-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7926-80xk-fan.c        | 10 ++++++++++
 .../builds/x86-64-accton-as7926-80xk-psu.c        | 10 ++++++++++
 .../builds/x86-64-accton-as7936-22xke-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-as7936-22xke-fan.c       | 11 +++++++++++
 .../builds/x86-64-accton-as7936-22xke-psu.c       | 11 +++++++++++
 .../builds/x86-64-accton-as7946-30xb-cpld.c       | 10 ++++++++++
 .../builds/x86-64-accton-as7946-74xkb-cpld.c      | 10 ++++++++++
 .../builds/x86-64-accton-as9716-32d-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as9716-32d-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as9716-32d-psu.c | 10 ++++++++++
 .../builds/x86-64-accton-as9926-24d-cpld.c        | 10 ++++++++++
 .../modules/builds/x86-64-accton-as9926-24d-fan.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as9926-24d-psu.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-as9926-24d-sys.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-asgvolt64-cpld.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-asxvolt16-cpld.c | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-asxvolt16-fan.c  | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-asxvolt16-psu.c  | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-asxvolt16-sfp.c  | 15 +++++++++++++--
 .../modules/builds/x86-64-accton-csp9250-cpld.c   | 10 ++++++++++
 .../modules/builds/x86-64-accton-csp9250-fan.c    | 10 ++++++++++
 .../modules/builds/x86-64-accton-csp9250-psu.c    | 10 ++++++++++
 .../modules/builds/x86-64-accton-csp9250-sfp.c    | 10 ++++++++++
 .../modules/builds/x86-64-accton-es7632bt3-cpld.c | 10 ++++++++++
 .../modules/builds/x86-64-accton-es7632bt3-fan.c  | 10 ++++++++++
 .../modules/builds/x86-64-accton-es7632bt3-psu.c  | 10 ++++++++++
 .../x86-64/modules/builds/accton_i2c_cpld.c       | 10 ++++++++++
 .../modules/builds/scg60d0-484t_onie_eeprom.c     | 10 ++++++++++
 .../modules/builds/scg60d0-484t_psu.c             | 15 +++++++++++++--
 .../modules/builds/snj60d0-320f_fpga.c            | 10 ++++++++++
 .../modules/builds/snj60d0-320f_i2c_mux_cpld.c    | 10 ++++++++++
 .../modules/builds/snj60d0-320f_onie_eeprom.c     | 10 ++++++++++
 .../modules/builds/snj61d0-320f_cpld.c            | 10 ++++++++++
 .../modules/builds/snj61d0-320f_fpga.c            | 10 ++++++++++
 .../modules/builds/snj61d0-320f_onie_eeprom.c     | 10 ++++++++++
 .../belgite/modules/builds/src/platform_fan.c     | 10 ++++++++++
 .../belgite/modules/builds/src/platform_psu.c     | 10 ++++++++++
 .../silverstone/modules/builds/src/mc24lc64t.c    | 10 ++++++++++
 .../x86-64/ag5648/modules/builds/dni_ag5648_psu.c | 10 ++++++++++
 .../x86-64/ag5648/modules/builds/dni_ag5648_sfp.c | 10 ++++++++++
 .../x86-64/ag5648/modules/builds/dni_emc2305.c    | 10 ++++++++++
 .../ag9032v1/modules/builds/dni_ag9032v1_psu.c    | 10 ++++++++++
 .../ag9032v1/modules/builds/dni_ag9032v1_sfp.c    | 10 ++++++++++
 .../x86-64/ag9032v1/modules/builds/dni_emc2305.c  | 10 ++++++++++
 .../ag9032v2a/modules/builds/dni_ag9032v2a_psu.c  | 10 ++++++++++
 .../x86-64/ag9032v2a/modules/builds/dni_emc2305.c | 10 ++++++++++
 .../modules/builds/dni_agc7646slv1b_psu.c         | 10 ++++++++++
 .../agc7646slv1b/modules/builds/dni_emc2305.c     | 10 ++++++++++
 .../agc7646v1/modules/builds/dni_agc7646v1_psu.c  | 10 ++++++++++
 .../x86-64/agc7646v1/modules/builds/dni_emc2305.c | 10 ++++++++++
 .../agc7648a/modules/builds/agc7648a_dps800ab.c   | 10 ++++++++++
 .../agc7648a/modules/builds/agc7648a_emc2305.c    | 10 ++++++++++
 .../x86-64/agc7648a/modules/builds/agc7648a_sfp.c | 10 ++++++++++
 .../x86-64/ak7448/modules/builds/dni_ak7448_psu.c | 10 ++++++++++
 .../x86-64/ak7448/modules/builds/dni_emc2305.c    | 10 ++++++++++
 .../delta/x86-64/modules/builds/i2c_cpld.c        | 10 ++++++++++
 .../ingrasys/x86-64/modules/builds/eeprom_mb.c    | 10 ++++++++++
 .../modules/builds/ingrasys_s9230_64x_i2c_cpld.c  | 10 ++++++++++
 .../modules/builds/ingrasys_s9280_64x_i2c_cpld.c  | 10 ++++++++++
 .../modules/builds/ingrasys_s9280_64x_psu.c       | 10 ++++++++++
 .../x86-64/d10056/modules/builds/src/inv_cpld.c   | 10 ++++++++++
 .../x86-64/d3352/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../x86-64/d3352/modules/builds/src/inv_psoc.c    | 10 ++++++++++
 .../x86-64/d5052/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../x86-64/d5052/modules/builds/src/inv_psoc.c    | 10 ++++++++++
 .../x86-64/d5254/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../d5264q28b/modules/builds/src/inv_cpld.c       | 10 ++++++++++
 .../d5264q28b/modules/builds/src/inv_eeprom.c     | 10 ++++++++++
 .../x86-64/d6254qs/modules/builds/src/inv_cpld.c  | 10 ++++++++++
 .../x86-64/d6254qs/modules/builds/src/inv_psoc.c  | 10 ++++++++++
 .../x86-64/d6332/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../x86-64/d6332/modules/builds/src/inv_eeprom.c  | 10 ++++++++++
 .../x86-64/d6332/modules/builds/src/ucd9000.c     | 10 ++++++++++
 .../d6356/modules/builds/src/i2c-mux-pca9541.c    | 10 ++++++++++
 .../d6356/modules/builds/src/i2c-mux-pca9641.c    | 10 ++++++++++
 .../modules/builds/src/inv-i2c-mux-pca9641.c      | 10 ++++++++++
 .../x86-64/d6356/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../x86-64/d6356/modules/builds/src/inv_eeprom.c  | 10 ++++++++++
 .../x86-64/d6356/modules/builds/src/ucd9000.c     | 10 ++++++++++
 .../x86-64/d6556/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../d7032q28b/modules/builds/src/inv_cpld.c       | 10 ++++++++++
 .../d7032q28b/modules/builds/src/inv_psoc.c       | 10 ++++++++++
 .../d7054q28b/modules/builds/src/inv_cpld.c       | 10 ++++++++++
 .../d7054q28b/modules/builds/src/inv_psoc.c       | 10 ++++++++++
 .../d7264q28b/modules/builds/src/inv_cpld.c       | 10 ++++++++++
 .../modules/builds/src/inv-i2c-mux-pca9641.c      | 10 ++++++++++
 .../x86-64/d7332/modules/builds/src/inv_cpld.c    | 10 ++++++++++
 .../x86-64/d7332/modules/builds/src/inv_eeprom.c  | 10 ++++++++++
 .../x86-64/d7332/modules/builds/src/inv_psu.c     | 10 ++++++++++
 .../d7332/modules/builds/src/inv_ucd90160.c       | 10 ++++++++++
 .../x86-64/modules/builds/src/inv_eeprom.c        | 10 ++++++++++
 .../builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c  | 10 ++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-master_cpld.c    | 10 ++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c     | 10 ++++++++++
 .../x86-64-mitac-ly1200-b32h0-c3-system_cpld.c    | 10 ++++++++++
 .../aurora-610/modules/builds/src/net_cpld.c      | 15 +++++++++++++--
 .../modules/builds/netberg_aurora_750_i2c_cpld.c  | 10 ++++++++++
 .../modules/builds/netberg_aurora_750_psu.c       | 10 ++++++++++
 .../modules/builds/src/net-i2c-mux-pca9641.c      | 10 ++++++++++
 .../aurora-820/modules/builds/src/net_cpld.c      | 10 ++++++++++
 .../aurora-820/modules/builds/src/net_eeprom.c    | 10 ++++++++++
 .../aurora-820/modules/builds/src/net_psu.c       | 10 ++++++++++
 .../aurora-820/modules/builds/src/net_ucd90160.c  | 10 ++++++++++
 .../netberg/x86-64/modules/builds/eeprom_mb.c     | 10 ++++++++++
 .../x86-64/modules/builds/hardware_monitor.c      | 10 ++++++++++
 .../powerpc/ly2/modules/builds/quanta-ly-hwmon.c  | 10 ++++++++++
 .../ly2/modules/builds/quanta-ly2-i2c-mux.c       | 10 ++++++++++
 .../modules/builds/quanta-ly6-i2c-mux.c           | 10 ++++++++++
 .../quanta/x86-64/modules/builds/qci_pmbus.c      | 10 ++++++++++
 .../modules/builds/quanta_hwmon_ix_series.c       | 10 ++++++++++
 .../modules/builds/quanta_hwmon_ly_series.c       | 10 ++++++++++
 .../builds/src/x86-64-ufispace-eeprom-mb.c        | 10 ++++++++++
 .../builds/src/x86-64-ufispace-s9700-23d-cpld.c   | 10 ++++++++++
 .../builds/src/x86-64-ufispace-s9700-53dx-cpld.c  | 10 ++++++++++
 .../builds/src/x86-64-ufispace-s9705-48d-cpld.c   | 10 ++++++++++
 .../modules/builds/rseb-w1-32-cpu_cpld.c          | 10 ++++++++++
 .../modules/builds/rseb-w1-32-system_cpld.c       | 10 ++++++++++
 .../modules/builds/rseb-w1-32_psu.c               | 10 ++++++++++
 .../modules/builds/tps53681.c                     | 10 ++++++++++
 222 files changed, 2290 insertions(+), 46 deletions(-)

diff --git a/packages/base/any/kernels/modules/accton_i2c_psu.c b/packages/base/any/kernels/modules/accton_i2c_psu.c
index 1550ac1381ee..79ba285a5502 100755
--- a/packages/base/any/kernels/modules/accton_i2c_psu.c
+++ b/packages/base/any/kernels/modules/accton_i2c_psu.c
@@ -355,6 +355,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int accton_i2c_psu_probe_6_3(struct i2c_client *client)
+{
+    return accton_i2c_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int accton_i2c_psu_remove(struct i2c_client *client)
 {
@@ -386,7 +392,11 @@ static struct i2c_driver accton_i2c_psu_driver = {
     .driver = {
         .name     = "accton_i2c_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = accton_i2c_psu_probe_6_3,
+#else
     .probe        = accton_i2c_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = accton_i2c_psu_remove_6_1,
 #else
diff --git a/packages/base/any/kernels/modules/cpr_4011_4mxx.c b/packages/base/any/kernels/modules/cpr_4011_4mxx.c
index d29e3660e6ff..afe23517f259 100644
--- a/packages/base/any/kernels/modules/cpr_4011_4mxx.c
+++ b/packages/base/any/kernels/modules/cpr_4011_4mxx.c
@@ -268,6 +268,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpr_4011_4mxx_probe_6_3(struct i2c_client *client)
+{
+    return cpr_4011_4mxx_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpr_4011_4mxx_remove(struct i2c_client *client)
 {
@@ -297,7 +303,11 @@ static struct i2c_driver cpr_4011_4mxx_driver = {
     .driver = {
         .name     = "cpr_4011_4mxx",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = cpr_4011_4mxx_probe_6_3,
+#else
     .probe        = cpr_4011_4mxx_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = cpr_4011_4mxx_remove_6_1,
 #else
diff --git a/packages/base/any/kernels/modules/dps850.c b/packages/base/any/kernels/modules/dps850.c
index c5493b5db573..96a9e29e59c6 100755
--- a/packages/base/any/kernels/modules/dps850.c
+++ b/packages/base/any/kernels/modules/dps850.c
@@ -277,7 +277,13 @@ exit_free:
 exit:
 
 	return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps850_probe_6_3(struct i2c_client *client)
+{
+	return dps850_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps850_remove(struct i2c_client *client)
 {
@@ -307,7 +313,12 @@ static struct i2c_driver dps850_driver = {
 	.driver = {
 		.name	= "dps850",
 	},
-	.probe	  = dps850_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = dps850_probe_6_3,
+#else
+	.probe	  = dps850_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = dps850_remove_6_1,
 #else
diff --git a/packages/base/any/kernels/modules/emerson700.c b/packages/base/any/kernels/modules/emerson700.c
index 2bec1abd5b08..1f1e3aaf031a 100644
--- a/packages/base/any/kernels/modules/emerson700.c
+++ b/packages/base/any/kernels/modules/emerson700.c
@@ -210,6 +210,12 @@ static int emerson700_pmbus_probe(struct i2c_client *client,
 
 	return pmbus_do_probe(client, id, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emerson700_pmbus_probe_6_3(struct i2c_client *client)
+{
+	return emerson700_pmbus_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /*
  * Use driver_data to set the number of pages supported by the chip.
@@ -226,7 +232,11 @@ static struct i2c_driver emerson700_pmbus_driver = {
 	.driver = {
 		   .name = "emerson700",
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = emerson700_pmbus_probe_6_3,
+#else
 	.probe = emerson700_pmbus_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/base/any/kernels/modules/optoe.c b/packages/base/any/kernels/modules/optoe.c
index f5bcc6a91b46..0b26c0c604c7 100644
--- a/packages/base/any/kernels/modules/optoe.c
+++ b/packages/base/any/kernels/modules/optoe.c
@@ -1192,6 +1192,12 @@ exit:
 
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int optoe_probe_6_3(struct i2c_client *client)
+{
+	return optoe_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /*-------------------------------------------------------------------------*/
 
@@ -1201,7 +1207,11 @@ static struct i2c_driver optoe_driver = {
 		.owner = THIS_MODULE,
 		.of_match_table = of_match_ptr(optoe_of_ids),
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = optoe_probe_6_3,
+#else
 	.probe = optoe_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = optoe_remove_6_1,
 #else
diff --git a/packages/base/any/kernels/modules/ym2651y.c b/packages/base/any/kernels/modules/ym2651y.c
index 180136da0f6f..b7e895560415 100755
--- a/packages/base/any/kernels/modules/ym2651y.c
+++ b/packages/base/any/kernels/modules/ym2651y.c
@@ -589,6 +589,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ym2651y_probe_6_3(struct i2c_client *client)
+{
+    return ym2651y_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int ym2651y_remove(struct i2c_client *client)
 {
@@ -635,7 +641,11 @@ static struct i2c_driver ym2651y_driver = {
         .name   = "ym2651",
         .of_match_table = of_match_ptr(ym2651y_of_id),
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = ym2651y_probe_6_3,
+#else
     .probe    = ym2651y_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = ym2651y_remove_6_1,
 #else
diff --git a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
index db5a70f234eb..441c90b7d4db 100644
--- a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
+++ b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_cpld.c
@@ -479,6 +479,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4610_54_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as4610_54_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4610_54_cpld_remove(struct i2c_client *client)
 {
@@ -608,7 +614,11 @@ static struct i2c_driver as4610_54_cpld_driver = {
 		.name	= "as4610_54_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4610_54_cpld_probe_6_3,
+#else
 	.probe		= as4610_54_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4610_54_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
index 0ad218228f7f..1b37175be4eb 100644
--- a/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
+++ b/packages/platforms/accton/armxx/arm-accton-as4610/modules/accton_as4610_psu.c
@@ -179,6 +179,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4610_psu_probe_6_3(struct i2c_client *client)
+{
+	return as4610_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4610_psu_remove(struct i2c_client *client)
 {
@@ -215,7 +221,11 @@ static struct i2c_driver as4610_psu_driver = {
 	.driver = {
 		.name	  = "as4610_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4610_psu_probe_6_3,
+#else
 	.probe		  = as4610_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4610_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c b/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
index 0e27088a9489..25eacd27c7f3 100755
--- a/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
+++ b/packages/platforms/accton/x86-64/as4222-28pe/modules/builds/x86-64-accton-as4222-28pe-cpld.c
@@ -577,6 +577,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4222_28pe_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as4222_28pe_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4222_28pe_cpld_remove(struct i2c_client *client)
 {
@@ -699,7 +705,11 @@ static struct i2c_driver as4222_28pe_cpld_driver = {
 		.name	= "as4222_28pe_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4222_28pe_cpld_probe_6_3,
+#else
 	.probe		= as4222_28pe_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4222_28pe_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
index d2b689942f57..47610fca6329 100755
--- a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
+++ b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-cpld.c
@@ -722,6 +722,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4630_54pe_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as4630_54pe_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4630_54pe_cpld_remove(struct i2c_client *client)
 {
@@ -844,7 +850,11 @@ static struct i2c_driver as4630_54pe_cpld_driver = {
 		.name	= "as4630_54pe_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4630_54pe_cpld_probe_6_3,
+#else
 	.probe		= as4630_54pe_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4630_54pe_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
index f3351b56c4a1..9e6430609602 100755
--- a/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
+++ b/packages/platforms/accton/x86-64/as4630-54pe/modules/builds/x86-64-accton-as4630-54pe-psu.c
@@ -198,6 +198,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4630_54pe_psu_probe_6_3(struct i2c_client *client)
+{
+    return as4630_54pe_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4630_54pe_psu_remove(struct i2c_client *client)
 {
@@ -234,7 +240,11 @@ static struct i2c_driver as4630_54pe_psu_driver = {
     .driver = {
         .name     = "as4630_54pe_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as4630_54pe_psu_probe_6_3,
+#else
     .probe        = as4630_54pe_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as4630_54pe_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
index a7ba133b7aaa..c5636a861aff 100644
--- a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
+++ b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-cpld.c
@@ -770,6 +770,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4630_54te_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as4630_54te_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4630_54te_cpld_remove(struct i2c_client *client)
 {
@@ -879,7 +885,11 @@ static struct i2c_driver as4630_54te_cpld_driver = {
 		.name = "as4630_54te_cpld",
 		.owner= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4630_54te_cpld_probe_6_3,
+#else
 	.probe = as4630_54te_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4630_54te_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
index d90673f6f83b..b806a9405b1d 100644
--- a/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
+++ b/packages/platforms/accton/x86-64/as4630-54te/modules/builds/x86-64-accton-as4630-54te-psu.c
@@ -203,6 +203,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as4630_54te_psu_probe_6_3(struct i2c_client *client)
+{
+	return as4630_54te_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as4630_54te_psu_remove(struct i2c_client *client)
 {
@@ -238,7 +244,11 @@ static struct i2c_driver as4630_54te_psu_driver = {
 	.driver = {
 		.name = "as4630_54te_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as4630_54te_psu_probe_6_3,
+#else
 	.probe = as4630_54te_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as4630_54te_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
index 2c7a4498f18a..3b830453b7d7 100644
--- a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-cpld.c
@@ -971,6 +971,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5512_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5512_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5512_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1098,7 +1104,11 @@ static struct i2c_driver as5512_54x_cpld_driver = {
 		.name	= "as5512_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5512_54x_cpld_probe_6_3,
+#else
 	.probe		= as5512_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5512_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
index 734f4f365dfb..8e6117ef7dd7 100644
--- a/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5512-54x/modules/builds/x86-64-accton-as5512-54x-psu.c
@@ -198,6 +198,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5512_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5512_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5512_54x_psu_remove(struct i2c_client *client)
 {
@@ -227,7 +233,11 @@ static struct i2c_driver as5512_54x_psu_driver = {
     .driver = {
         .name     = "as5512_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5512_54x_psu_probe_6_3,
+#else
     .probe        = as5512_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5512_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
index 12c5f12c01c0..2346a0b3457f 100644
--- a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-cpld.c
@@ -1125,6 +1125,12 @@ add_mux_failed:
 	i2c_mux_del_adapters(muxc);
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5712_54x_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+	return as5712_54x_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5712_54x_cpld_mux_remove(struct i2c_client *client)
 {
@@ -1251,7 +1257,11 @@ static struct i2c_driver as5712_54x_cpld_mux_driver = {
 		.name	= "as5712_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5712_54x_cpld_mux_probe_6_3,
+#else
 	.probe		= as5712_54x_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5712_54x_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
index 1740969e899a..e08bea4905fb 100644
--- a/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5712-54x/modules/builds/x86-64-accton-as5712-54x-psu.c
@@ -209,6 +209,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5712_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5712_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5712_54x_psu_remove(struct i2c_client *client)
 {
@@ -245,7 +251,11 @@ static struct i2c_driver as5712_54x_psu_driver = {
     .driver = {
         .name     = "as5712_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5712_54x_psu_probe_6_3,
+#else
     .probe        = as5712_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5712_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
index f56c14289075..daa391597454 100644
--- a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
+++ b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-cpld.c
@@ -367,6 +367,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5812_54t_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as5812_54t_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5812_54t_cpld_remove(struct i2c_client *client)
 {
@@ -445,7 +451,11 @@ static struct i2c_driver as5812_54t_cpld_driver = {
     .driver = {
         .name     = "as5812_54t_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5812_54t_cpld_probe_6_3,
+#else
     .probe        = as5812_54t_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5812_54t_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
index d8aa0f133ae9..f9d3e819cb29 100644
--- a/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
+++ b/packages/platforms/accton/x86-64/as5812-54t/modules/builds/x86-64-accton-as5812-54t-psu.c
@@ -209,6 +209,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5812_54t_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5812_54t_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5812_54t_psu_remove(struct i2c_client *client)
 {
@@ -245,7 +251,11 @@ static struct i2c_driver as5812_54t_psu_driver = {
     .driver = {
         .name     = "as5812_54t_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5812_54t_psu_probe_6_3,
+#else
     .probe        = as5812_54t_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5812_54t_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
index 34a547c18359..bbe02a6be72e 100644
--- a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-cpld.c
@@ -1126,6 +1126,12 @@ add_mux_failed:
 	i2c_mux_del_adapters(muxc);
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5812_54x_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+	return as5812_54x_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5812_54x_cpld_mux_remove(struct i2c_client *client)
 {
@@ -1252,7 +1258,11 @@ static struct i2c_driver as5812_54x_cpld_mux_driver = {
 		.name	= "as5812_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5812_54x_cpld_mux_probe_6_3,
+#else
 	.probe		= as5812_54x_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5812_54x_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
index 977f68529893..32deb91a1e28 100755
--- a/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5812-54x/modules/builds/x86-64-accton-as5812-54x-psu.c
@@ -247,6 +247,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5812_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5812_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5812_54x_psu_remove(struct i2c_client *client)
 {
@@ -283,7 +289,11 @@ static struct i2c_driver as5812_54x_psu_driver = {
     .driver = {
         .name     = "as5812_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5812_54x_psu_probe_6_3,
+#else
     .probe        = as5812_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5812_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
index 0ee359bae6fe..d3f13ccf5b19 100644
--- a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-cpld.c
@@ -1002,6 +1002,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5822_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5822_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5822_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1129,7 +1135,11 @@ static struct i2c_driver as5822_54x_cpld_driver = {
 		.name	= "as5822_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5822_54x_cpld_probe_6_3,
+#else
 	.probe		= as5822_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5822_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
index e5efafdc124e..e50c9c799fff 100644
--- a/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5822-54x/modules/builds/x86-64-accton-as5822-54x-psu.c
@@ -201,6 +201,12 @@ exit:
 	
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5822_54x_psu_probe_6_3(struct i2c_client *client)
+{
+	return as5822_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5822_54x_psu_remove(struct i2c_client *client)
 {
@@ -237,7 +243,11 @@ static struct i2c_driver as5822_54x_psu_driver = {
 	.driver = {
 		.name	 = "as5822_54x_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5822_54x_psu_probe_6_3,
+#else
 	.probe		= as5822_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5822_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
index 71fa6f679eb7..9da8a06d80b7 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-cpld.c
@@ -462,6 +462,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54t_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5835_54t_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54t_cpld_remove(struct i2c_client *client)
 {
@@ -589,7 +595,11 @@ static struct i2c_driver as5835_54t_cpld_driver = {
 		.name	= "as5835_54t_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5835_54t_cpld_probe_6_3,
+#else
 	.probe		= as5835_54t_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5835_54t_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
index 93f9d6f4da32..2254c1f54ace 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54t_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5835_54t_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54t_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5835_54t_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5835_54t_fan_probe_6_3,
+#else
     .probe        = as5835_54t_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5835_54t_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
index f4554720b417..6cef6fec9209 100644
--- a/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
+++ b/packages/platforms/accton/x86-64/as5835-54t/modules/builds/x86-64-accton-as5835-54t-psu.c
@@ -200,6 +200,12 @@ exit:
 	
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54t_psu_probe_6_3(struct i2c_client *client)
+{
+	return as5835_54t_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54t_psu_remove(struct i2c_client *client)
 {
@@ -236,7 +242,11 @@ static struct i2c_driver as5835_54t_psu_driver = {
 	.driver = {
 		.name	 = "as5835_54t_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5835_54t_psu_probe_6_3,
+#else
 	.probe		= as5835_54t_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5835_54t_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
index 330fafa905e0..b7b7a035094c 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-cpld.c
@@ -1055,6 +1055,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5835_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1182,7 +1188,11 @@ static struct i2c_driver as5835_54x_cpld_driver = {
 		.name	= "as5835_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5835_54x_cpld_probe_6_3,
+#else
 	.probe		= as5835_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5835_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
index 9f5cbb8e45d1..fcf793982ac2 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5835_54x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54x_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5835_54x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5835_54x_fan_probe_6_3,
+#else
     .probe        = as5835_54x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5835_54x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
index a344153407d8..6858fbf2afb6 100644
--- a/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5835-54x/modules/builds/x86-64-accton-as5835-54x-psu.c
@@ -200,6 +200,12 @@ exit:
 	
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5835_54x_psu_probe_6_3(struct i2c_client *client)
+{
+	return as5835_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5835_54x_psu_remove(struct i2c_client *client)
 {
@@ -236,7 +242,11 @@ static struct i2c_driver as5835_54x_psu_driver = {
 	.driver = {
 		.name	 = "as5835_54x_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5835_54x_psu_probe_6_3,
+#else
 	.probe		= as5835_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5835_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
index febb79ba90ba..001abce1bd54 100644
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-cpld.c
@@ -955,6 +955,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5912_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1079,7 +1085,11 @@ static struct i2c_driver as5912_54x_cpld_driver = {
 		.name	= "as5912_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5912_54x_cpld_probe_6_3,
+#else
 	.probe		= as5912_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5912_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
index ff8905b4669a..47b61c47d236 100755
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-fan.c
@@ -463,6 +463,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5912_54x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54x_fan_remove(struct i2c_client *client)
 {
@@ -493,7 +499,11 @@ static struct i2c_driver as5912_54x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5912_54x_fan_probe_6_3,
+#else
     .probe        = as5912_54x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5912_54x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
index cf34dd8a4c23..9d194c57ab50 100644
--- a/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5912-54x/modules/builds/x86-64-accton-as5912-54x-psu.c
@@ -198,6 +198,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5912_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54x_psu_remove(struct i2c_client *client)
 {
@@ -234,7 +240,11 @@ static struct i2c_driver as5912_54x_psu_driver = {
     .driver = {
         .name     = "as5912_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5912_54x_psu_probe_6_3,
+#else
     .probe        = as5912_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5912_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
index c76bb2e6ba19..bc2e1b3d3950 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-cpld.c
@@ -955,6 +955,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54xk_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5912_54xk_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54xk_cpld_remove(struct i2c_client *client)
 {
@@ -1079,7 +1085,11 @@ static struct i2c_driver as5912_54xk_cpld_driver = {
 		.name	= "as5912_54xk_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5912_54xk_cpld_probe_6_3,
+#else
 	.probe		= as5912_54xk_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5912_54xk_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
index ed54f40d7b41..135ceb25b60e 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54xk_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5912_54xk_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54xk_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5912_54xk_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5912_54xk_fan_probe_6_3,
+#else
     .probe        = as5912_54xk_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5912_54xk_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
index 4038119ac779..790fca227862 100644
--- a/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
+++ b/packages/platforms/accton/x86-64/as5912-54xk/modules/builds/x86-64-accton-as5912-54xk-psu.c
@@ -174,6 +174,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5912_54xk_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5912_54xk_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5912_54xk_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as5912_54xk_psu_driver = {
     .driver = {
         .name     = "as5912_54xk_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5912_54xk_psu_probe_6_3,
+#else
     .probe        = as5912_54xk_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5912_54xk_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
index 3b20ebbbca84..f20753d0350d 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-cpld.c
@@ -520,6 +520,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5915_18x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5915_18x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5915_18x_cpld_remove(struct i2c_client *client)
 {
@@ -630,7 +636,11 @@ static struct i2c_driver as5915_18x_cpld_driver = {
 		.name	= "as5915_18x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5915_18x_cpld_probe_6_3,
+#else
 	.probe		= as5915_18x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5915_18x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
index 321a47684d64..d702b7064783 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fan.c
@@ -459,6 +459,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5915_18x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5915_18x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5915_18x_fan_remove(struct i2c_client *client)
 {
@@ -489,7 +495,11 @@ static struct i2c_driver as5915_18x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5915_18x_fan_probe_6_3,
+#else
     .probe        = as5915_18x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5915_18x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
index 8af16954229a..3a1bcc499822 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-fpga.c
@@ -336,6 +336,12 @@ add_mux_failed:
     i2c_mux_del_adapters(muxc);
     return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5915_18x_fpga_mux_probe_6_3(struct i2c_client *client)
+{
+    return as5915_18x_fpga_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5915_18x_fpga_mux_remove(struct i2c_client *client)
 {
@@ -447,7 +453,11 @@ static struct i2c_driver as5915_18x_fpga_mux_driver = {
         .name    = "as5915_18x_fpga",
         .owner    = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5915_18x_fpga_mux_probe_6_3,
+#else
     .probe        = as5915_18x_fpga_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5915_18x_fpga_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
index dca475ed5841..b488fa7e7f0b 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-psu.c
@@ -257,7 +257,13 @@ exit_free:
 exit:
 
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5915_18x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5915_18x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5915_18x_psu_remove(struct i2c_client *client)
 {
@@ -292,7 +298,12 @@ static struct i2c_driver as5915_18x_psu_driver = {
     .driver = {
         .name     = DRV_NAME,
     },
-    .probe        = as5915_18x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5915_18x_psu_probe_6_3,
+#else
+    .probe        = as5915_18x_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5915_18x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
index 78194f942fb5..36c07cceab55 100644
--- a/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
+++ b/packages/platforms/accton/x86-64/as5915-18x/modules/builds/x86-64-accton-as5915-18x-sys.c
@@ -143,6 +143,12 @@ exit_free:
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5915_18x_sys_probe_6_3(struct i2c_client *client)
+{
+    return as5915_18x_sys_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5915_18x_sys_remove(struct i2c_client *client)
 {
@@ -171,7 +177,11 @@ static struct i2c_driver as5915_18x_sys_driver = {
     .driver = {
         .name     = "as5915_18x_sys",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5915_18x_sys_probe_6_3,
+#else
     .probe        = as5915_18x_sys_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5915_18x_sys_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
index d38bee1f2393..9063b57714e8 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-cpld.c
@@ -955,6 +955,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5916_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1079,7 +1085,11 @@ static struct i2c_driver as5916_54x_cpld_driver = {
 		.name	= "as5916_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5916_54x_cpld_probe_6_3,
+#else
 	.probe		= as5916_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5916_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
index 86478b0cb6d7..7e06537b796b 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54x_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5916_54x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54x_fan_probe_6_3,
+#else
     .probe        = as5916_54x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
index 1c172862187d..79ef822202a7 100644
--- a/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54x/modules/builds/x86-64-accton-as5916-54x-psu.c
@@ -174,6 +174,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54x_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as5916_54x_psu_driver = {
     .driver = {
         .name     = "as5916_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54x_psu_probe_6_3,
+#else
     .probe        = as5916_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
index d34ae408d40a..06d260c8ec57 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-cpld.c
@@ -955,6 +955,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xk_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5916_54xk_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xk_cpld_remove(struct i2c_client *client)
 {
@@ -1079,7 +1085,11 @@ static struct i2c_driver as5916_54xk_cpld_driver = {
 		.name	= "as5916_54xk_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5916_54xk_cpld_probe_6_3,
+#else
 	.probe		= as5916_54xk_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5916_54xk_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
index b0f606fdd52a..8f15ca47ae04 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xk_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54xk_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xk_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5916_54xk_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54xk_fan_probe_6_3,
+#else
     .probe        = as5916_54xk_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54xk_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
index 4d91c8d096aa..8066638a7293 100644
--- a/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54xk/modules/builds/x86-64-accton-as5916-54xk-psu.c
@@ -174,6 +174,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xk_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54xk_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xk_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as5916_54xk_psu_driver = {
     .driver = {
         .name     = "as5916_54xk_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54xk_psu_probe_6_3,
+#else
     .probe        = as5916_54xk_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54xk_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
index 903fe1fadeb1..7664aeb24a6e 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-cpld.c
@@ -955,6 +955,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xm_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as5916_54xm_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xm_cpld_remove(struct i2c_client *client)
 {
@@ -1079,7 +1085,11 @@ static struct i2c_driver as5916_54xm_cpld_driver = {
 		.name	= "as5916_54xm_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as5916_54xm_cpld_probe_6_3,
+#else
 	.probe		= as5916_54xm_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as5916_54xm_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
index df2321a5fbc7..9aaf7703a741 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xm_fan_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54xm_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xm_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as5916_54xm_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54xm_fan_probe_6_3,
+#else
     .probe        = as5916_54xm_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54xm_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
index 1b4db94e9a43..f82334dae61a 100644
--- a/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
+++ b/packages/platforms/accton/x86-64/as5916-54xm/modules/builds/x86-64-accton-as5916-54xm-psu.c
@@ -174,6 +174,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as5916_54xm_psu_probe_6_3(struct i2c_client *client)
+{
+    return as5916_54xm_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as5916_54xm_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as5916_54xm_psu_driver = {
     .driver = {
         .name     = "as5916_54xm_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as5916_54xm_psu_probe_6_3,
+#else
     .probe        = as5916_54xm_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as5916_54xm_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
index 1edf0311efe1..cfabe9668ad0 100644
--- a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-cpld.c
@@ -572,7 +572,13 @@ static int as6712_32x_cpld_mux_probe(struct i2c_client *client,
 add_mux_failed:
 	i2c_mux_del_adapters(muxc);
 	return ret;
-} 
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as6712_32x_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+	return as6712_32x_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif 
 
 static int as6712_32x_cpld_mux_remove(struct i2c_client *client)
 {
@@ -699,7 +705,11 @@ static struct i2c_driver as6712_32x_cpld_mux_driver = {
 		.name	= "as6712_32x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as6712_32x_cpld_mux_probe_6_3,
+#else
 	.probe		= as6712_32x_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as6712_32x_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
index bf7b42b7b2ed..6c47cd9b7ae2 100644
--- a/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as6712-32x/modules/builds/x86-64-accton-as6712-32x-psu.c
@@ -208,6 +208,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as6712_32x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as6712_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as6712_32x_psu_remove(struct i2c_client *client)
 {
@@ -244,7 +250,11 @@ static struct i2c_driver as6712_32x_psu_driver = {
     .driver = {
         .name     = "as6712_32x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as6712_32x_psu_probe_6_3,
+#else
     .probe        = as6712_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as6712_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
index 7a0fa3a8031a..8a228f8a88cd 100644
--- a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-cpld.c
@@ -574,7 +574,13 @@ static int as6812_32x_cpld_mux_probe(struct i2c_client *client,
 add_mux_failed:
 	i2c_mux_del_adapters(muxc);
 	return ret;
-} 
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as6812_32x_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+	return as6812_32x_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif 
 
 static int as6812_32x_cpld_mux_remove(struct i2c_client *client)
 {
@@ -702,7 +708,11 @@ static struct i2c_driver as6812_32x_cpld_mux_driver = {
 		.name	= "as6812_32x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as6812_32x_cpld_mux_probe_6_3,
+#else
 	.probe		= as6812_32x_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as6812_32x_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
index 1d6d77720d9e..e7c7d1f29501 100755
--- a/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as6812-32x/modules/builds/x86-64-accton-as6812-32x-psu.c
@@ -233,6 +233,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as6812_32x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as6812_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as6812_32x_psu_remove(struct i2c_client *client)
 {
@@ -269,7 +275,11 @@ static struct i2c_driver as6812_32x_psu_driver = {
     .driver = {
         .name     = "as6812_32x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as6812_32x_psu_probe_6_3,
+#else
     .probe        = as6812_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as6812_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
index de23fcc8c445..5b27881d4c3d 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-cpld.c
@@ -1008,7 +1008,13 @@ exit_free:
     kfree(data);
 exit:
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7112_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7112_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7112_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1136,7 +1142,12 @@ static struct i2c_driver as7112_54x_cpld_driver = {
 		.name	= "as7112_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
-	.probe		= as7112_54x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7112_54x_cpld_probe_6_3,
+#else
+	.probe		= as7112_54x_cpld_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7112_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
index 29c13db53320..be85ce2f18bc 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-fan.c
@@ -447,7 +447,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7112_54x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7112_54x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7112_54x_fan_remove(struct i2c_client *client)
 {
@@ -478,7 +484,12 @@ static struct i2c_driver as7112_54x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
-    .probe        = as7112_54x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7112_54x_fan_probe_6_3,
+#else
+    .probe        = as7112_54x_fan_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7112_54x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
index 61ef5bb06841..fe9f6438f7f3 100755
--- a/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as7112-54x/modules/builds/x86-64-accton-as7112-54x-psu.c
@@ -213,7 +213,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7112_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7112_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7112_54x_psu_remove(struct i2c_client *client)
 {
@@ -250,7 +256,12 @@ static struct i2c_driver as7112_54x_psu_driver = {
     .driver = {
         .name     = "as7112_54x_psu",
     },
-    .probe        = as7112_54x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7112_54x_psu_probe_6_3,
+#else
+    .probe        = as7112_54x_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7112_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
index c2467ab242c4..409d4396481f 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-cpld.c
@@ -987,6 +987,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7312_54x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54x_cpld_remove(struct i2c_client *client)
 {
@@ -1114,7 +1120,11 @@ static struct i2c_driver as7312_54x_cpld_driver = {
 		.name	= "as7312_54x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7312_54x_cpld_probe_6_3,
+#else
 	.probe		= as7312_54x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7312_54x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
index 6c61f57b4fc6..01be5f882078 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-fan.c
@@ -454,6 +454,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7312_54x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54x_fan_remove(struct i2c_client *client)
 {
@@ -484,7 +490,11 @@ static struct i2c_driver as7312_54x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7312_54x_fan_probe_6_3,
+#else
     .probe        = as7312_54x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7312_54x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
index 62b8e7c5035e..85405b4765ce 100644
--- a/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
+++ b/packages/platforms/accton/x86-64/as7312-54x/modules/builds/x86-64-accton-as7312-54x-psu.c
@@ -174,6 +174,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7312_54x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54x_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as7312_54x_psu_driver = {
     .driver = {
         .name     = "as7312_54x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7312_54x_psu_probe_6_3,
+#else
     .probe        = as7312_54x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7312_54x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
index 33b1e0336c3c..9dd5b55b55a3 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-cpld.c
@@ -987,6 +987,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54xs_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7312_54xs_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54xs_cpld_remove(struct i2c_client *client)
 {
@@ -1114,7 +1120,11 @@ static struct i2c_driver as7312_54xs_cpld_driver = {
 		.name	= "as7312_54xs_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7312_54xs_cpld_probe_6_3,
+#else
 	.probe		= as7312_54xs_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7312_54xs_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
index b65cf608a9c4..aebb760c2a10 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-fan.c
@@ -453,6 +453,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54xs_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7312_54xs_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54xs_fan_remove(struct i2c_client *client)
 {
@@ -483,7 +489,11 @@ static struct i2c_driver as7312_54xs_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7312_54xs_fan_probe_6_3,
+#else
     .probe        = as7312_54xs_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7312_54xs_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
index eb66e8df94b3..6f5d0859f6e3 100644
--- a/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
+++ b/packages/platforms/accton/x86-64/as7312-54xs/modules/builds/x86-64-accton-as7312-54xs-psu.c
@@ -174,6 +174,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7312_54xs_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7312_54xs_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7312_54xs_psu_remove(struct i2c_client *client)
 {
@@ -210,7 +216,11 @@ static struct i2c_driver as7312_54xs_psu_driver = {
     .driver = {
         .name     = "as7312_54xs_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7312_54xs_psu_probe_6_3,
+#else
     .probe        = as7312_54xs_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7312_54xs_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
index 2228621a1a8e..080e35b4dc7e 100644
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/accton_as7315_27xb_fan.c
@@ -634,6 +634,12 @@ out_kfree:
     kfree(data->group.attrs);
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int fan_probe_6_3(struct i2c_client *client)
+{
+    return fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 
 static int fan_remove(struct i2c_client *client)
@@ -660,7 +666,11 @@ static struct i2c_driver as7315_i2c_fan_driver = {
     .driver = {
         .name = DRV_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = fan_probe_6_3,
+#else
     .probe		= fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
index c2e28f42c178..8c2bdb9caaab 100755
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/at24_as7315_27xb.c
@@ -645,6 +645,12 @@ err_clients:
 
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int at24_probe_6_3(struct i2c_client *client)
+{
+	return at24_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int at24_remove(struct i2c_client *client)
 {
@@ -674,7 +680,11 @@ static struct i2c_driver at24_as7315_27xb_driver = {
 		.name = "at24_as7315_27xb",
 		.acpi_match_table = ACPI_PTR(at24_acpi_ids),
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = at24_probe_6_3,
+#else
 	.probe = at24_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = at24_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
index 00dba8fd0dfe..66178761752b 100755
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-cpld.c
@@ -934,6 +934,12 @@ out_kfree:
     kfree(data->group.attrs);
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7315_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 
 static int as7315_i2c_cpld_remove(struct i2c_client *client)
@@ -1010,7 +1016,11 @@ static struct i2c_driver as7315_i2c_cpld_driver = {
     .driver = {
         .name = DRV_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7315_i2c_cpld_probe_6_3,
+#else
     .probe		= as7315_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7315_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
index 58d2d3cccd31..c720b2eff4f2 100644
--- a/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
+++ b/packages/platforms/accton/x86-64/as7315-27xb/modules/builds/x86-64-accton-as7315-27xb-psu.c
@@ -265,6 +265,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_27xb_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7315_27xb_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_27xb_psu_remove(struct i2c_client *client)
 {
@@ -301,7 +307,11 @@ static struct i2c_driver as7315_27xb_psu_driver = {
     .driver = {
         .name     = DRV_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7315_27xb_psu_probe_6_3,
+#else
     .probe        = as7315_27xb_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7315_27xb_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
index bd7ebbd5e6d8..ada7e7a0055a 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-cpld.c
@@ -602,6 +602,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_cpld_remove(struct i2c_client *client)
 {
@@ -713,7 +719,11 @@ static struct i2c_driver as7315_30x_cpld_driver = {
 		.name = "as7315_30x_cpld",
 		.owner = THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_cpld_probe_6_3,
+#else
 	.probe = as7315_30x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
index 06e266bd67be..4bad1418e3e4 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan-eeprom.c
@@ -226,6 +226,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_fan_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_fan_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_fan_eeprom_remove(struct i2c_client *client)
 {
@@ -260,7 +266,11 @@ static struct i2c_driver as7315_30x_fan_eeprom_driver = {
 	.driver = {
 		.name = "as7315_fan_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_fan_eeprom_probe_6_3,
+#else
 	.probe = as7315_30x_fan_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_fan_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
index 188de7f698d1..77614e6c92d2 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fan.c
@@ -502,6 +502,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_fan_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_fan_remove(struct i2c_client *client)
 {
@@ -532,7 +538,11 @@ static struct i2c_driver as7315_30x_fan_driver = {
 	.driver = {
 		.name	 = DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_fan_probe_6_3,
+#else
 	.probe		= as7315_30x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
index b808e6d10817..36ccc25fa173 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-fpga.c
@@ -518,6 +518,12 @@ add_mux_failed:
 	i2c_mux_del_adapters(muxc);
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_fpga_mux_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_fpga_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_fpga_mux_remove(struct i2c_client *client)
 {
@@ -628,7 +634,11 @@ static struct i2c_driver as7315_30x_fpga_mux_driver = {
 		.name	= "as7315_30x_fpga",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_fpga_mux_probe_6_3,
+#else
 	.probe		= as7315_30x_fpga_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_fpga_mux_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
index e18e802bc0c3..38d2043513b1 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-psu.c
@@ -202,6 +202,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_psu_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_psu_remove(struct i2c_client *client)
 {
@@ -238,7 +244,11 @@ static struct i2c_driver as7315_30x_psu_driver = {
 	.driver = {
 		.name = "as7315_30x_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_psu_probe_6_3,
+#else
 	.probe = as7315_30x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
index 08cb13171410..b99e88c36a2b 100644
--- a/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
+++ b/packages/platforms/accton/x86-64/as7315-30x/modules/builds/x86-64-accton-as7315-30x-sys.c
@@ -140,6 +140,12 @@ exit_free:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7315_30x_sys_probe_6_3(struct i2c_client *client)
+{
+	return as7315_30x_sys_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7315_30x_sys_remove(struct i2c_client *client)
 {
@@ -168,7 +174,11 @@ static struct i2c_driver as7315_30x_sys_driver = {
 	.driver = {
 		.name = "as7315_30x_sys",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7315_30x_sys_probe_6_3,
+#else
 	.probe = as7315_30x_sys_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7315_30x_sys_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
index 9e75838555ed..17d2d6102f1c 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-cpld.c
@@ -997,7 +997,13 @@ exit_free:
     kfree(data);
 exit:
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7326_56x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7326_56x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7326_56x_cpld_remove(struct i2c_client *client)
 {
@@ -1125,7 +1131,12 @@ static struct i2c_driver as7326_56x_cpld_driver = {
 		.name	= "as7326_56x_cpld",
 		.owner	= THIS_MODULE,
 	},
-	.probe		= as7326_56x_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7326_56x_cpld_probe_6_3,
+#else
+	.probe		= as7326_56x_cpld_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7326_56x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
index 5ff45ce70a48..a42dbfa9f042 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-fan.c
@@ -920,7 +920,13 @@ exit_free:
 exit:
 
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7326_56x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7326_56x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7326_56x_fan_remove(struct i2c_client *client)
 {
@@ -951,7 +957,12 @@ static struct i2c_driver as7326_56x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
-    .probe        = as7326_56x_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7326_56x_fan_probe_6_3,
+#else
+    .probe        = as7326_56x_fan_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7326_56x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
index f0f0b113499d..1432b0c1e31d 100644
--- a/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
+++ b/packages/platforms/accton/x86-64/as7326-56x/modules/builds/x86-64-accton-as7326-56x-psu.c
@@ -204,7 +204,13 @@ exit_free:
 exit:
 
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7326_56x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7326_56x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7326_56x_psu_remove(struct i2c_client *client)
 {
@@ -241,7 +247,12 @@ static struct i2c_driver as7326_56x_psu_driver = {
     .driver = {
         .name     = "as7326_56x_psu",
     },
-    .probe        = as7326_56x_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7326_56x_psu_probe_6_3,
+#else
+    .probe        = as7326_56x_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7326_56x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
index 7b3ee1294076..799a2a227c34 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-cpld.c
@@ -447,6 +447,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7512_32x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7512_32x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7512_32x_cpld_remove(struct i2c_client *client)
 {
@@ -574,7 +580,11 @@ static struct i2c_driver as7512_32x_cpld_driver = {
 		.name	= "as7512_32x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7512_32x_cpld_probe_6_3,
+#else
 	.probe		= as7512_32x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7512_32x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
index f2c069adbe4a..6b142605c8bb 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-fan.c
@@ -462,6 +462,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7512_32x_fan_probe_6_3(struct i2c_client *client)
+{
+	return as7512_32x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7512_32x_fan_remove(struct i2c_client *client)
 {
@@ -492,7 +498,11 @@ static struct i2c_driver as7512_32x_fan_driver = {
 	.driver = {
 		.name	= DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7512_32x_fan_probe_6_3,
+#else
 	.probe		= as7512_32x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7512_32x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
index be0fb6735d7e..5e7a4d972b27 100644
--- a/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7512-32x/modules/builds/x86-64-accton-as7512-32x-psu.c
@@ -180,6 +180,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7512_32x_psu_probe_6_3(struct i2c_client *client)
+{
+	return as7512_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7512_32x_psu_remove(struct i2c_client *client)
 {
@@ -209,7 +215,11 @@ static struct i2c_driver as7512_32x_psu_driver = {
 	.driver = {
 		.name	  = "as7512_32x_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7512_32x_psu_probe_6_3,
+#else
 	.probe		  = as7512_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7512_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c b/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
index fe837053000c..b8b596addf27 100644
--- a/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7535-28xb/modules/builds/x86-64-accton-as7535-28xb-cpld.c
@@ -770,6 +770,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7535_28xb_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7535_28xb_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7535_28xb_cpld_remove(struct i2c_client *client)
 {
@@ -799,7 +805,11 @@ static struct i2c_driver as7535_28xb_cpld_driver = {
 	.driver = {
 		.name = DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7535_28xb_cpld_probe_6_3,
+#else
 	.probe = as7535_28xb_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7535_28xb_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
index 2548904bf7e1..b7fa90fbbaef 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-cpld1.c
@@ -461,6 +461,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7712_32x_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7712_32x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7712_32x_cpld_remove(struct i2c_client *client)
 {
@@ -539,7 +545,11 @@ static struct i2c_driver as7712_32x_cpld_driver = {
     .driver = {
         .name     = "as7712_32x_cpld1",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7712_32x_cpld_probe_6_3,
+#else
     .probe        = as7712_32x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7712_32x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
index 5f4b343fa82b..fdaf1d1945ba 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-fan.c
@@ -457,6 +457,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7712_32x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7712_32x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7712_32x_fan_remove(struct i2c_client *client)
 {
@@ -487,7 +493,11 @@ static struct i2c_driver as7712_32x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7712_32x_fan_probe_6_3,
+#else
     .probe        = as7712_32x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7712_32x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
index f4ad8d4aa28a..15cffc7f3413 100644
--- a/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7712-32x/modules/builds/x86-64-accton-as7712-32x-psu.c
@@ -214,6 +214,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7712_32x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7712_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7712_32x_psu_remove(struct i2c_client *client)
 {
@@ -250,7 +256,11 @@ static struct i2c_driver as7712_32x_psu_driver = {
     .driver = {
         .name     = "as7712_32x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7712_32x_psu_probe_6_3,
+#else
     .probe        = as7712_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7712_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
index 308965bbcb26..40e3a2472b58 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-expansion_card.c
@@ -221,7 +221,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24sc_expansion_card_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24sc_expansion_card_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24sc_expansion_card_remove(struct i2c_client *client)
 {
@@ -272,7 +278,12 @@ static struct i2c_driver as7716_24sc_expansion_card_driver = {
     .driver = {
         .name     = "as7716_24sc_expansion_card",
     },
-    .probe        = as7716_24sc_expansion_card_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24sc_expansion_card_probe_6_3,
+#else
+    .probe        = as7716_24sc_expansion_card_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24sc_expansion_card_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
index 2981601596a1..042aeb72c016 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-fan.c
@@ -417,7 +417,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24sc_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24sc_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24sc_fan_remove(struct i2c_client *client)
 {
@@ -448,7 +454,12 @@ static struct i2c_driver as7716_24sc_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
-    .probe        = as7716_24sc_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24sc_fan_probe_6_3,
+#else
+    .probe        = as7716_24sc_fan_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24sc_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
index 3d54f24ec17e..ded2b23c2bdf 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-psu.c
@@ -156,7 +156,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24sc_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24sc_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24sc_psu_remove(struct i2c_client *client)
 {
@@ -193,7 +199,12 @@ static struct i2c_driver as7716_24sc_psu_driver = {
     .driver = {
         .name     = "as7716_24sc_psu",
     },
-    .probe        = as7716_24sc_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24sc_psu_probe_6_3,
+#else
+    .probe        = as7716_24sc_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24sc_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
index 34fefc4f4954..b5e4e9a68527 100644
--- a/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
+++ b/packages/platforms/accton/x86-64/as7716-24sc/modules/builds/x86-64-accton-as7716-24sc-sfp.c
@@ -949,7 +949,13 @@ static int sfp_device_probe(struct i2c_client *client,
 exit_kfree:
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int sfp_device_probe_6_3(struct i2c_client *client)
+{
+	return sfp_device_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 /* Platform dependent --- */
 
 static int cfp_remove(struct i2c_client *client, struct cfp_data *data)
@@ -1002,7 +1008,12 @@ static struct i2c_driver sfp_driver = {
 	.driver = {
 		.name	  = DRIVER_NAME,
 	},
-	.probe		  = sfp_device_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = sfp_device_probe_6_3,
+#else
+	.probe		  = sfp_device_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = sfp_device_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
index 85c42ecd9604..81e0d72f7007 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-expansion_card.c
@@ -221,7 +221,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24xc_expansion_card_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24xc_expansion_card_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24xc_expansion_card_remove(struct i2c_client *client)
 {
@@ -272,7 +278,12 @@ static struct i2c_driver as7716_24xc_expansion_card_driver = {
     .driver = {
         .name     = "as7716_24xc_expansion_card",
     },
-    .probe        = as7716_24xc_expansion_card_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24xc_expansion_card_probe_6_3,
+#else
+    .probe        = as7716_24xc_expansion_card_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24xc_expansion_card_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
index 752d35aef754..10bee45b39f4 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-fan.c
@@ -417,7 +417,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24xc_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24xc_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24xc_fan_remove(struct i2c_client *client)
 {
@@ -448,7 +454,12 @@ static struct i2c_driver as7716_24xc_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
-    .probe        = as7716_24xc_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24xc_fan_probe_6_3,
+#else
+    .probe        = as7716_24xc_fan_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24xc_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
index 209c3a5978e0..db4ea17c4bcc 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-psu.c
@@ -156,7 +156,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_24xc_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7716_24xc_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_24xc_psu_remove(struct i2c_client *client)
 {
@@ -193,7 +199,12 @@ static struct i2c_driver as7716_24xc_psu_driver = {
     .driver = {
         .name     = "as7716_24xc_psu",
     },
-    .probe        = as7716_24xc_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_24xc_psu_probe_6_3,
+#else
+    .probe        = as7716_24xc_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_24xc_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
index 45e4f8f51870..941575625c6d 100644
--- a/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
+++ b/packages/platforms/accton/x86-64/as7716-24xc/modules/builds/x86-64-accton-as7716-24xc-sfp.c
@@ -949,7 +949,13 @@ static int sfp_device_probe(struct i2c_client *client,
 exit_kfree:
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int sfp_device_probe_6_3(struct i2c_client *client)
+{
+	return sfp_device_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 /* Platform dependent --- */
 
 static int cfp_remove(struct i2c_client *client, struct cfp_data *data)
@@ -1002,7 +1008,12 @@ static struct i2c_driver sfp_driver = {
 	.driver = {
 		.name	  = DRIVER_NAME,
 	},
-	.probe		  = sfp_device_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = sfp_device_probe_6_3,
+#else
+	.probe		  = sfp_device_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = sfp_device_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
index bef73447fdb1..2e52e5a17897 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-cpld1.c
@@ -461,6 +461,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_32x_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7716_32x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_32x_cpld_remove(struct i2c_client *client)
 {
@@ -539,7 +545,11 @@ static struct i2c_driver as7716_32x_cpld_driver = {
     .driver = {
         .name     = "as7716_32x_cpld1",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_32x_cpld_probe_6_3,
+#else
     .probe        = as7716_32x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_32x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
index 29d809b122c5..f2952a82cbda 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-fan.c
@@ -455,6 +455,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_32x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7716_32x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_32x_fan_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver as7716_32x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_32x_fan_probe_6_3,
+#else
     .probe        = as7716_32x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_32x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
index 42608f880ee5..988feaba79a2 100644
--- a/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7716-32x/modules/builds/x86-64-accton-as7716-32x-psu.c
@@ -214,6 +214,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7716_32x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7716_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7716_32x_psu_remove(struct i2c_client *client)
 {
@@ -250,7 +256,11 @@ static struct i2c_driver as7716_32x_psu_driver = {
     .driver = {
         .name     = "as7716_32x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7716_32x_psu_probe_6_3,
+#else
     .probe        = as7716_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7716_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
index fbabae198ea6..0ffd5b1b38ad 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-cpld.c
@@ -594,6 +594,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7726_32x_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7726_32x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7726_32x_cpld_remove(struct i2c_client *client)
 {
@@ -721,7 +727,11 @@ static struct i2c_driver as7726_32x_cpld_driver = {
 		.name	= "as7726_32x_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7726_32x_cpld_probe_6_3,
+#else
 	.probe		= as7726_32x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7726_32x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
index 212545d27ec9..b1d9b02f3408 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-fan.c
@@ -589,6 +589,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7726_32x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7726_32x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7726_32x_fan_remove(struct i2c_client *client)
 {
@@ -619,7 +625,11 @@ static struct i2c_driver as7726_32x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7726_32x_fan_probe_6_3,
+#else
     .probe        = as7726_32x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7726_32x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
index 15a09d3345e4..15220c212290 100755
--- a/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
+++ b/packages/platforms/accton/x86-64/as7726-32x/modules/builds/x86-64-accton-as7726-32x-psu.c
@@ -205,6 +205,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7726_32x_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7726_32x_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7726_32x_psu_remove(struct i2c_client *client)
 {
@@ -241,7 +247,11 @@ static struct i2c_driver as7726_32x_psu_driver = {
     .driver = {
         .name     = "as7726_32x_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7726_32x_psu_probe_6_3,
+#else
     .probe        = as7726_32x_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7726_32x_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
index 171d44d5fffe..547984856fa4 100644
--- a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
+++ b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-cpld1.c
@@ -670,6 +670,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7816_64x_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7816_64x_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7816_64x_cpld_remove(struct i2c_client *client)
 {
@@ -748,7 +754,11 @@ static struct i2c_driver as7816_64x_cpld_driver = {
     .driver = {
         .name     = "as7816_64x_cpld1",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7816_64x_cpld_probe_6_3,
+#else
     .probe        = as7816_64x_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7816_64x_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
index 21d1f1e093b7..168025b52f38 100644
--- a/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
+++ b/packages/platforms/accton/x86-64/as7816-64x/modules/builds/x86-64-accton-as7816-64x-fan.c
@@ -429,6 +429,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7816_64x_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7816_64x_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7816_64x_fan_remove(struct i2c_client *client)
 {
@@ -459,7 +465,11 @@ static struct i2c_driver as7816_64x_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7816_64x_fan_probe_6_3,
+#else
     .probe        = as7816_64x_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7816_64x_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c b/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
index 117e184e8272..7cd2307e72c6 100644
--- a/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-40xfb/modules/builds/x86-64-accton-as7926-40xfb-cpld.c
@@ -985,6 +985,12 @@ static int as7926_40xfb_cpld_probe(struct i2c_client *client,
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_40xfb_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7926_40xfb_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_40xfb_cpld_remove(struct i2c_client *client)
 {
@@ -1018,7 +1024,11 @@ static struct i2c_driver as7926_40xfb_cpld_driver = {
 	.driver = {
 		   .name = DRVNAME,
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7926_40xfb_cpld_probe_6_3,
+#else
 	.probe = as7926_40xfb_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7926_40xfb_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
index ab538c129f48..cae2fad7c584 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-cpld.c
@@ -956,6 +956,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_40xke_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7926_40xke_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_40xke_cpld_remove(struct i2c_client *client)
 {
@@ -992,7 +998,11 @@ static struct i2c_driver as7926_40xke_cpld_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_40xke_cpld_probe_6_3,
+#else
     .probe        = as7926_40xke_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_40xke_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
index 18792f09b367..a7684a7226aa 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-fan.c
@@ -677,6 +677,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_40xke_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7926_40xke_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_40xke_fan_remove(struct i2c_client *client)
 {
@@ -707,7 +713,11 @@ static struct i2c_driver as7926_40xke_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_40xke_fan_probe_6_3,
+#else
     .probe        = as7926_40xke_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_40xke_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
index 6bb99787399a..7520bd5d97e7 100755
--- a/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
+++ b/packages/platforms/accton/x86-64/as7926-40xke/modules/builds/x86-64-accton-as7926-40xke-psu.c
@@ -156,6 +156,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_40xke_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7926_40xke_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_40xke_psu_remove(struct i2c_client *client)
 {
@@ -194,7 +200,11 @@ static struct i2c_driver as7926_40xke_psu_driver = {
     .driver = {
         .name     = "as7926_40xke_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_40xke_psu_probe_6_3,
+#else
     .probe        = as7926_40xke_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_40xke_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
index 6bfcad828ae5..a4e90332016e 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-cpld.c
@@ -612,6 +612,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_80xk_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7926_80xk_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_80xk_cpld_remove(struct i2c_client *client)
 {
@@ -649,7 +655,11 @@ static struct i2c_driver as7926_80xk_cpld_driver = {
     .driver = {
         .name     = "as7926_80xk_cpld1",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_80xk_cpld_probe_6_3,
+#else
     .probe        = as7926_80xk_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_80xk_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
index 33def1c49310..e78834eef966 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-fan.c
@@ -539,6 +539,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_80xk_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7926_80xk_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_80xk_fan_remove(struct i2c_client *client)
 {
@@ -569,7 +575,11 @@ static struct i2c_driver as7926_80xk_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_80xk_fan_probe_6_3,
+#else
     .probe        = as7926_80xk_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_80xk_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
index c2f519b59aff..3147be2430d3 100644
--- a/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
+++ b/packages/platforms/accton/x86-64/as7926-80xk/modules/builds/x86-64-accton-as7926-80xk-psu.c
@@ -146,6 +146,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7926_80xk_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7926_80xk_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7926_80xk_psu_remove(struct i2c_client *client)
 {
@@ -186,7 +192,11 @@ static struct i2c_driver as7926_80xk_psu_driver = {
     .driver = {
         .name     = "as7926_80xk_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7926_80xk_psu_probe_6_3,
+#else
     .probe        = as7926_80xk_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7926_80xk_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
index 90641cc5b306..7ce1e411d894 100644
--- a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
+++ b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-cpld.c
@@ -708,6 +708,12 @@ static int as7936_22xke_cpld_probe(struct i2c_client *client,
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7936_22xke_cpld_probe_6_3(struct i2c_client *client)
+{
+    return as7936_22xke_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7936_22xke_cpld_remove(struct i2c_client *client)
 {
@@ -735,7 +741,11 @@ static struct i2c_driver as7936_22xke_cpld_driver = {
     .driver = {
         .name     = DRV_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7936_22xke_cpld_probe_6_3,
+#else
     .probe        = as7936_22xke_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as7936_22xke_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-fan.c b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-fan.c
index f4b2a6d16448..e50422738f3c 100644
--- a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-fan.c
+++ b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-fan.c
@@ -30,6 +30,7 @@
 #include <linux/slab.h>
 #include <linux/dmi.h>
 #include <linux/kernel.h>
+#include <linux/version.h>
 
 #define DRVNAME "as7936_22xke_fan"
 
@@ -438,6 +439,12 @@ static int as7936_22xke_fan_probe(struct i2c_client *client,
     return 0;
 
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7936_22xke_fan_probe_6_3(struct i2c_client *client)
+{
+    return as7936_22xke_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* Addresses to scan */
 static const unsigned short normal_i2c[] = { I2C_CLIENT_END };
@@ -451,7 +458,11 @@ MODULE_DEVICE_TABLE(i2c, as7936_22xke_fan_id);
 static struct i2c_driver as7936_22xke_fan_driver = {
     .class        = I2C_CLASS_HWMON,
     .driver = {   .name     = DRVNAME,},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7936_22xke_fan_probe_6_3,
+#else
     .probe        = as7936_22xke_fan_probe,
+#endif
     .id_table     = as7936_22xke_fan_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-psu.c b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-psu.c
index 35f9f49ec88e..bf3b24dda169 100644
--- a/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-psu.c
+++ b/packages/platforms/accton/x86-64/as7936-22xke/modules/builds/x86-64-accton-as7936-22xke-psu.c
@@ -33,6 +33,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <linux/dmi.h>
+#include <linux/version.h>
 
 
 #define DEV_NAME            "as7936_22xke_psu"
@@ -135,6 +136,12 @@ static int as7936_22xke_psu_probe(struct i2c_client *client,
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7936_22xke_psu_probe_6_3(struct i2c_client *client)
+{
+    return as7936_22xke_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 enum psu_index
 {
@@ -154,7 +161,11 @@ static struct i2c_driver as7936_22xke_psu_driver = {
     .driver = {
         .name     = DEV_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as7936_22xke_psu_probe_6_3,
+#else
     .probe        = as7936_22xke_psu_probe,
+#endif
     .id_table     = as7936_22xke_psu_id,
     .address_list = normal_i2c,
 };
diff --git a/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c b/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
index 56721e2b60bb..67260a5888ea 100644
--- a/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7946-30xb/modules/builds/x86-64-accton-as7946-30xb-cpld.c
@@ -763,6 +763,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7946_30xb_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7946_30xb_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7946_30xb_cpld_remove(struct i2c_client *client)
 {
@@ -795,7 +801,11 @@ static struct i2c_driver as7946_30xb_cpld_driver = {
 	.driver = {
 		.name = DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7946_30xb_cpld_probe_6_3,
+#else
 	.probe = as7946_30xb_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7946_30xb_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c b/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
index 0476d3a49ca9..0da4fa80252d 100644
--- a/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
+++ b/packages/platforms/accton/x86-64/as7946-74xkb/modules/builds/x86-64-accton-as7946-74xkb-cpld.c
@@ -1156,6 +1156,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as7946_74xkb_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as7946_74xkb_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as7946_74xkb_cpld_remove(struct i2c_client *client)
 {
@@ -1189,7 +1195,11 @@ static struct i2c_driver as7946_74xkb_cpld_driver = {
 	.driver = {
 		.name = DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as7946_74xkb_cpld_probe_6_3,
+#else
 	.probe = as7946_74xkb_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as7946_74xkb_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
index a3055f5a56a2..c53a025d88c4 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-cpld.c
@@ -654,6 +654,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9716_32d_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as9716_32d_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9716_32d_cpld_remove(struct i2c_client *client)
 {
@@ -781,7 +787,11 @@ static struct i2c_driver as9716_32d_cpld_driver = {
 		.name	= "as9716_32d_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as9716_32d_cpld_probe_6_3,
+#else
 	.probe		= as9716_32d_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as9716_32d_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
index 6383cc517e6c..00b29b353aba 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-fan.c
@@ -451,6 +451,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9716_32d_fan_probe_6_3(struct i2c_client *client)
+{
+    return as9716_32d_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9716_32d_fan_remove(struct i2c_client *client)
 {
@@ -481,7 +487,11 @@ static struct i2c_driver as9716_32d_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as9716_32d_fan_probe_6_3,
+#else
     .probe        = as9716_32d_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as9716_32d_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
index ef57a6fed0b4..d24ef10864dc 100755
--- a/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
+++ b/packages/platforms/accton/x86-64/as9716_32d/modules/builds/x86-64-accton-as9716-32d-psu.c
@@ -197,6 +197,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9716_32d_psu_probe_6_3(struct i2c_client *client)
+{
+    return as9716_32d_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9716_32d_psu_remove(struct i2c_client *client)
 {
@@ -233,7 +239,11 @@ static struct i2c_driver as9716_32d_psu_driver = {
     .driver = {
         .name     = "as9716_32d_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as9716_32d_psu_probe_6_3,
+#else
     .probe        = as9716_32d_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as9716_32d_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
index 1d1b49ce3547..6d725a0f96e5 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-cpld.c
@@ -727,6 +727,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9926_24d_cpld_probe_6_3(struct i2c_client *client)
+{
+	return as9926_24d_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9926_24d_cpld_remove(struct i2c_client *client)
 {
@@ -854,7 +860,11 @@ static struct i2c_driver as9926_24d_cpld_driver = {
 		.name	= "as9926_24d_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as9926_24d_cpld_probe_6_3,
+#else
 	.probe		= as9926_24d_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as9926_24d_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
index 26ae4f1a6c7e..8ac1e7e5a562 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-fan.c
@@ -497,6 +497,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9926_24d_fan_probe_6_3(struct i2c_client *client)
+{
+    return as9926_24d_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9926_24d_fan_remove(struct i2c_client *client)
 {
@@ -527,7 +533,11 @@ static struct i2c_driver as9926_24d_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as9926_24d_fan_probe_6_3,
+#else
     .probe        = as9926_24d_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as9926_24d_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
index d6cc7d565c72..626cf6d46ac2 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-psu.c
@@ -200,6 +200,12 @@ exit:
 	
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9926_24d_psu_probe_6_3(struct i2c_client *client)
+{
+	return as9926_24d_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9926_24d_psu_remove(struct i2c_client *client)
 {
@@ -236,7 +242,11 @@ static struct i2c_driver as9926_24d_psu_driver = {
 	.driver = {
 		.name	 = "as9926_24d_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = as9926_24d_psu_probe_6_3,
+#else
 	.probe		= as9926_24d_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = as9926_24d_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
index 50176d2d9cdc..8417a2542b14 100644
--- a/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
+++ b/packages/platforms/accton/x86-64/as9926-24d/modules/builds/x86-64-accton-as9926-24d-sys.c
@@ -143,6 +143,12 @@ exit_free:
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int as9926_24d_sys_probe_6_3(struct i2c_client *client)
+{
+    return as9926_24d_sys_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int as9926_24d_sys_remove(struct i2c_client *client)
 {
@@ -171,7 +177,11 @@ static struct i2c_driver as9926_24d_sys_driver = {
     .driver = {
         .name     = "as9926_24d_sys",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = as9926_24d_sys_probe_6_3,
+#else
     .probe        = as9926_24d_sys_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = as9926_24d_sys_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c b/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
index cf371649bfe7..1a57592c1d78 100755
--- a/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
+++ b/packages/platforms/accton/x86-64/asgvolt64/modules/builds/x86-64-accton-asgvolt64-cpld.c
@@ -2091,6 +2091,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int asgvolt64_cpld_probe_6_3(struct i2c_client *client)
+{
+	return asgvolt64_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int asgvolt64_cpld_remove(struct i2c_client *client)
 {
@@ -2219,7 +2225,11 @@ static struct i2c_driver asgvolt64_cpld_driver = {
 		.name	= "asgvolt64_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = asgvolt64_cpld_probe_6_3,
+#else
 	.probe		= asgvolt64_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = asgvolt64_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
index 2bd855d038c7..2fc22e29962f 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-cpld.c
@@ -527,7 +527,13 @@ exit_free:
     kfree(data);
 exit:
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int asxvolt16_cpld_probe_6_3(struct i2c_client *client)
+{
+	return asxvolt16_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int asxvolt16_cpld_remove(struct i2c_client *client)
 {
@@ -577,7 +583,12 @@ static struct i2c_driver asxvolt16_cpld_driver = {
 	.driver = {
 		.name = "asxvolt16_cpld",
 	},
-	.probe		= asxvolt16_cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = asxvolt16_cpld_probe_6_3,
+#else
+	.probe		= asxvolt16_cpld_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = asxvolt16_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
index b27042a55365..cfecb97a03fa 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-fan.c
@@ -464,7 +464,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int asxvolt16_fan_probe_6_3(struct i2c_client *client)
+{
+    return asxvolt16_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int asxvolt16_fan_remove(struct i2c_client *client)
 {
@@ -495,7 +501,12 @@ static struct i2c_driver asxvolt16_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
-    .probe        = asxvolt16_fan_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = asxvolt16_fan_probe_6_3,
+#else
+    .probe        = asxvolt16_fan_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = asxvolt16_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
index b07c6702c0c0..9456ccd5c911 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-psu.c
@@ -161,7 +161,13 @@ exit_free:
 exit:
     
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int asxvolt16_psu_probe_6_3(struct i2c_client *client)
+{
+    return asxvolt16_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int asxvolt16_psu_remove(struct i2c_client *client)
 {
@@ -198,7 +204,12 @@ static struct i2c_driver asxvolt16_psu_driver = {
     .driver = {
         .name     = "asxvolt16_psu",
     },
-    .probe        = asxvolt16_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = asxvolt16_psu_probe_6_3,
+#else
+    .probe        = asxvolt16_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = asxvolt16_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
index c075633b4909..88255e4299c1 100755
--- a/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
+++ b/packages/platforms/accton/x86-64/asxvolt16/modules/builds/x86-64-accton-asxvolt16-sfp.c
@@ -1886,7 +1886,13 @@ exit_kfree_buf:
 exit_kfree:
 	kfree(data);
 	return ret;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int sfp_device_probe_6_3(struct i2c_client *client)
+{
+	return sfp_device_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 /* Platform dependent --- */
 
 static int xfp_remove(struct i2c_client *client, struct xfp_data *data)
@@ -1941,7 +1947,12 @@ static struct i2c_driver sfp_driver = {
 	.driver = {
 		.name	  = DRIVER_NAME,
 	},
-	.probe		  = sfp_device_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = sfp_device_probe_6_3,
+#else
+	.probe		  = sfp_device_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = sfp_device_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
index 825274abb715..0d9ddc8ff711 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-cpld.c
@@ -159,6 +159,12 @@ static int accton_i2c_cpld_probe(struct i2c_client *client,
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int accton_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+	return accton_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int accton_i2c_cpld_remove(struct i2c_client *client)
 {
@@ -184,7 +190,11 @@ static struct i2c_driver accton_i2c_cpld_driver = {
 	.driver = {
 		.name = "accton_i2c_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = accton_i2c_cpld_probe_6_3,
+#else
 	.probe		= accton_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = accton_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
index 4fdd84e1258b..17af6313bf59 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-fan.c
@@ -438,6 +438,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int csp9250_fan_probe_6_3(struct i2c_client *client)
+{
+    return csp9250_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int csp9250_fan_remove(struct i2c_client *client)
 {
@@ -468,7 +474,11 @@ static struct i2c_driver csp9250_fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = csp9250_fan_probe_6_3,
+#else
     .probe        = csp9250_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = csp9250_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
index 877e6f26ef69..cfe0f5fa7884 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-psu.c
@@ -155,6 +155,12 @@ exit:
 
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int csp9250_psu_probe_6_3(struct i2c_client *client)
+{
+    return csp9250_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int csp9250_psu_remove(struct i2c_client *client)
 {
@@ -191,7 +197,11 @@ static struct i2c_driver csp9250_psu_driver = {
     .driver = {
         .name     = "csp9250_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = csp9250_psu_probe_6_3,
+#else
     .probe        = csp9250_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = csp9250_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
index d343f753cbcd..275cd0406922 100755
--- a/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
+++ b/packages/platforms/accton/x86-64/csp9250/modules/builds/x86-64-accton-csp9250-sfp.c
@@ -1269,6 +1269,12 @@ static int csp9250_sfp_probe(struct i2c_client *client,
 
     return -ENODEV;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int csp9250_sfp_probe_6_3(struct i2c_client *client)
+{
+    return csp9250_sfp_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int sfp_msa_remove(struct i2c_client *client, struct sfp_msa_data *data)
 {
@@ -1324,7 +1330,11 @@ static struct i2c_driver sfp_driver = {
     .driver = {
         .name	  = DRIVER_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = csp9250_sfp_probe_6_3,
+#else
     .probe		  = csp9250_sfp_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = csp9250_sfp_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
index a25b06f4bc15..7b53800482b6 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-cpld.c
@@ -788,6 +788,12 @@ exit_free:
 exit:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int es7632bt3_cpld_probe_6_3(struct i2c_client *client)
+{
+	return es7632bt3_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int es7632bt3_cpld_remove(struct i2c_client *client)
 {
@@ -918,7 +924,11 @@ static struct i2c_driver es7632bt3_cpld_driver = {
 		.name	= "es7632bt3_cpld",
 		.owner	= THIS_MODULE,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = es7632bt3_cpld_probe_6_3,
+#else
 	.probe		= es7632bt3_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = es7632bt3_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
index 8033e5ab2274..d142ae062345 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-fan.c
@@ -569,6 +569,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int es7632bt3_fan_probe_6_3(struct i2c_client *client)
+{
+	return es7632bt3_fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int es7632bt3_fan_remove(struct i2c_client *client)
 {
@@ -599,7 +605,11 @@ static struct i2c_driver es7632bt3_fan_driver = {
 	.driver = {
 		.name = DRVNAME,
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = es7632bt3_fan_probe_6_3,
+#else
 	.probe        = es7632bt3_fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = es7632bt3_fan_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
index 20a8a0e8bb4e..6174ca543dc1 100644
--- a/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
+++ b/packages/platforms/accton/x86-64/es7632bt3/modules/builds/x86-64-accton-es7632bt3-psu.c
@@ -182,6 +182,12 @@ exit:
 
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int es7632bt3_psu_probe_6_3(struct i2c_client *client)
+{
+	return es7632bt3_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int es7632bt3_psu_remove(struct i2c_client *client)
 {
@@ -218,7 +224,11 @@ static struct i2c_driver es7632bt3_psu_driver = {
 	.driver = {
 		.name = "es7632bt3_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = es7632bt3_psu_probe_6_3,
+#else
 	.probe = es7632bt3_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = es7632bt3_psu_remove_6_1,
 #else
diff --git a/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c b/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
index 061a23162e21..20c8bc7badba 100644
--- a/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
+++ b/packages/platforms/accton/x86-64/modules/builds/accton_i2c_cpld.c
@@ -123,6 +123,12 @@ static int accton_i2c_cpld_probe(struct i2c_client *client,
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int accton_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+	return accton_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int accton_i2c_cpld_remove(struct i2c_client *client)
 {
@@ -149,7 +155,11 @@ static struct i2c_driver accton_i2c_cpld_driver = {
 	.driver = {
 		.name = "accton_i2c_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = accton_i2c_cpld_probe_6_3,
+#else
 	.probe		= accton_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = accton_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
index 8a422ec08dc6..1748183fcf92 100644
--- a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_onie_eeprom.c
@@ -163,6 +163,12 @@ exit_free:
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int onie_eeprom_probe_6_3(struct i2c_client *client)
+{
+    return onie_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int onie_eeprom_remove(struct i2c_client *client)
 {
@@ -189,7 +195,11 @@ static struct i2c_driver onie_eeprom_driver = {
     .driver = {
         .name = "scg60d0_onie_eeprom",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = onie_eeprom_probe_6_3,
+#else
     .probe		= onie_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = onie_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
index 4b36e8f2fcf0..fcce653660de 100644
--- a/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
+++ b/packages/platforms/alphanetworks/x86-64/scg60d0-484t/modules/builds/scg60d0-484t_psu.c
@@ -325,7 +325,13 @@ exit_free:
 exit:
 
     return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int scg60d0_484t_psu_probe_6_3(struct i2c_client *client)
+{
+    return scg60d0_484t_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int scg60d0_484t_psu_remove(struct i2c_client *client)
 {
@@ -355,7 +361,12 @@ static struct i2c_driver scg60d0_484t_psu_driver = {
     .driver = {
         .name = "scg60d0_psu",
     },
-    .probe = scg60d0_484t_psu_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = scg60d0_484t_psu_probe_6_3,
+#else
+    .probe = scg60d0_484t_psu_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = scg60d0_484t_psu_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
index d619ab75f095..e0ef38f6495e 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_fpga.c
@@ -849,6 +849,12 @@ static int alpha_i2c_fpga_probe(struct i2c_client *client,
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int alpha_i2c_fpga_probe_6_3(struct i2c_client *client)
+{
+    return alpha_i2c_fpga_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int alpha_i2c_fpga_remove(struct i2c_client *client)
 {
@@ -877,7 +883,11 @@ static struct i2c_driver alpha_i2c_fpga_driver = {
     .driver = {
         .name = DRIVER_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = alpha_i2c_fpga_probe_6_3,
+#else
     .probe		= alpha_i2c_fpga_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = alpha_i2c_fpga_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
index f070404f46b0..9a3840cb6853 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_i2c_mux_cpld.c
@@ -1158,6 +1158,12 @@ add_mux_failed:
     i2c_mux_del_adapters(muxc);
     return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int snj60d0_320f_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+    return snj60d0_320f_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int snj60d0_320f_cpld_mux_remove(struct i2c_client *client)
 {
@@ -1287,7 +1293,11 @@ static struct i2c_driver snj60d0_320f_cpld_mux_driver = {
         .name     = DRIVER_NAME,
         .owner    = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = snj60d0_320f_cpld_mux_probe_6_3,
+#else
     .probe         = snj60d0_320f_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = snj60d0_320f_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
index c24bd80e302b..5454c8d30710 100644
--- a/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/snj60d0-320f/modules/builds/snj60d0-320f_onie_eeprom.c
@@ -221,6 +221,12 @@ static int onie_eeprom_probe(struct i2c_client *client,
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int onie_eeprom_probe_6_3(struct i2c_client *client)
+{
+    return onie_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int onie_eeprom_remove(struct i2c_client *client)
 {
@@ -247,7 +253,11 @@ static struct i2c_driver onie_eeprom_driver = {
     .driver = {
         .name = "snj60d0_onie_eeprom",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = onie_eeprom_probe_6_3,
+#else
     .probe		= onie_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = onie_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
index c08944abe0d6..1a395b0de95e 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_cpld.c
@@ -1035,6 +1035,12 @@ add_failed:
     kfree(data);
     return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int snj61d0_320f_cpld_probe_6_3(struct i2c_client *client)
+{
+    return snj61d0_320f_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int snj61d0_320f_cpld_remove(struct i2c_client *client)
 {
@@ -1163,7 +1169,11 @@ static struct i2c_driver snj61d0_320f_cpld_driver = {
         .name     = DRIVER_NAME,
         .owner    = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = snj61d0_320f_cpld_probe_6_3,
+#else
     .probe         = snj61d0_320f_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = snj61d0_320f_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
index 1ed471ba740e..4965f3d0b96a 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_fpga.c
@@ -868,6 +868,12 @@ static int alpha_i2c_fpga_probe(struct i2c_client *client,
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int alpha_i2c_fpga_probe_6_3(struct i2c_client *client)
+{
+    return alpha_i2c_fpga_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int alpha_i2c_fpga_remove(struct i2c_client *client)
 {
@@ -896,7 +902,11 @@ static struct i2c_driver alpha_i2c_fpga_driver = {
     .driver = {
         .name = DRIVER_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = alpha_i2c_fpga_probe_6_3,
+#else
     .probe		= alpha_i2c_fpga_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = alpha_i2c_fpga_remove_6_1,
 #else
diff --git a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
index d060a9e27e0b..e68892f6b0fb 100644
--- a/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
+++ b/packages/platforms/alphanetworks/x86-64/snj61d0-320f/modules/builds/snj61d0-320f_onie_eeprom.c
@@ -163,6 +163,12 @@ exit_free:
 exit:
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int onie_eeprom_probe_6_3(struct i2c_client *client)
+{
+    return onie_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int onie_eeprom_remove(struct i2c_client *client)
 {
@@ -189,7 +195,11 @@ static struct i2c_driver onie_eeprom_driver = {
     .driver = {
         .name = "snj61d0_onie_eeprom",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = onie_eeprom_probe_6_3,
+#else
     .probe		= onie_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = onie_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
index 33422ce1327b..987123b82416 100644
--- a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
+++ b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_fan.c
@@ -504,6 +504,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int fan_probe_6_3(struct i2c_client *client)
+{
+    return fan_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int fan_remove(struct i2c_client *client)
 {
@@ -534,7 +540,11 @@ static struct i2c_driver fan_driver = {
     .driver = {
         .name     = DRVNAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = fan_probe_6_3,
+#else
     .probe        = fan_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = fan_remove_6_1,
 #else
diff --git a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
index 7349a53ac17e..441d7e04b399 100644
--- a/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
+++ b/packages/platforms/celestica/x86-64/belgite/modules/builds/src/platform_psu.c
@@ -106,6 +106,12 @@ static int pmbus_probe(struct i2c_client *client,
 	ret = pmbus_do_probe(client, id, &fsp550_info);
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pmbus_probe_6_3(struct i2c_client *client)
+{
+	return pmbus_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 /* user driver datat to pass the grpup */
 static const struct i2c_device_id fsp550_id[] = {
     {"fsp550", 0},
@@ -119,7 +125,11 @@ static struct i2c_driver fsp550_driver = {
     .driver = {
            .name = "FSP550-20FM",
            },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = pmbus_probe_6_3,
+#else
     .probe = pmbus_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
index 9fcfcb531cb7..32f05ba7a51b 100644
--- a/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
+++ b/packages/platforms/celestica/x86-64/silverstone/modules/builds/src/mc24lc64t.c
@@ -143,6 +143,12 @@ static int mc24lc64t_probe(struct i2c_client *client,
         err = sysfs_create_bin_file(&client->dev.kobj, &mc24lc64t_bit_attr);
         return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int mc24lc64t_probe_6_3(struct i2c_client *client)
+{
+        return mc24lc64t_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int mc24lc64t_remove(struct i2c_client *client)
 {
@@ -169,7 +175,11 @@ static struct i2c_driver mc24lc64t_driver = {
                 .name   = "mc24lc64t",
                 .owner = THIS_MODULE,
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = mc24lc64t_probe_6_3,
+#else
         .probe          = mc24lc64t_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = mc24lc64t_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
index 9c4287e94a90..5be3f38171a7 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_psu.c
@@ -447,6 +447,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -482,7 +488,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
index 6dc38ec6d1d5..849f4b7044c0 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_ag5648_sfp.c
@@ -648,6 +648,12 @@ static int ag5648_sfp_probe(struct i2c_client *client, const struct i2c_device_i
   exit:
 	  return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ag5648_sfp_probe_6_3(struct i2c_client *client)
+{
+	  return ag5648_sfp_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int ag5648_sfp_remove(struct i2c_client *client)
 {
@@ -681,7 +687,11 @@ static struct i2c_driver ag5648_sfp_driver = {
 	.driver = {
 		.name	= "dni_ag5648_sfp",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = ag5648_sfp_probe_6_3,
+#else
 	.probe		= ag5648_sfp_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = ag5648_sfp_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
index edd46a60421f..b4dfd38cb36d 100755
--- a/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag5648/modules/builds/dni_emc2305.c
@@ -91,7 +91,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -375,6 +379,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
index 9a0075384d1c..455ac4b0698b 100755
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_psu.c
@@ -507,6 +507,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -542,7 +548,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
index 0a6748c81c27..dab7f674eb98 100644
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_ag9032v1_sfp.c
@@ -606,6 +606,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ag9032v1_sfp_probe_6_3(struct i2c_client *client)
+{
+	return ag9032v1_sfp_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int ag9032v1_sfp_remove(struct i2c_client *client)
 {
@@ -638,7 +644,11 @@ static struct i2c_driver ag9032v1_sfp_driver = {
 	.driver = {
 		.name	= "dni_ag9032v1_sfp",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = ag9032v1_sfp_probe_6_3,
+#else
 	.probe		= ag9032v1_sfp_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = ag9032v1_sfp_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
index 3e96b86dd2d8..544d67306e26 100755
--- a/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag9032v1/modules/builds/dni_emc2305.c
@@ -89,7 +89,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -383,6 +387,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
index e7606428aeb2..fd2a98c7563a 100644
--- a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
+++ b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_ag9032v2a_psu.c
@@ -442,6 +442,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -477,7 +483,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
index 319fda4a9daf..35a2ebb49642 100644
--- a/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ag9032v2a/modules/builds/dni_emc2305.c
@@ -86,7 +86,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -369,6 +373,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
index 890de6a54ffa..bd8a9fc0e62b 100644
--- a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
+++ b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_agc7646slv1b_psu.c
@@ -442,6 +442,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -477,7 +483,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
index 319fda4a9daf..35a2ebb49642 100644
--- a/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7646slv1b/modules/builds/dni_emc2305.c
@@ -86,7 +86,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -369,6 +373,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
index 081b55d59bf7..524b5f0dc538 100644
--- a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
+++ b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_agc7646v1_psu.c
@@ -442,6 +442,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -477,7 +483,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
index 319fda4a9daf..35a2ebb49642 100644
--- a/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7646v1/modules/builds/dni_emc2305.c
@@ -86,7 +86,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -369,6 +373,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
index e1d01e8a2a99..60e3903262fa 100644
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_dps800ab.c
@@ -514,6 +514,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -547,7 +553,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
index 859f6fa3eed2..631a9a8c4a3e 100755
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_emc2305.c
@@ -95,7 +95,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "agc7648a_emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -313,6 +317,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
index 04a354c59743..bf30f6fc96d8 100644
--- a/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
+++ b/packages/platforms/delta/x86-64/agc7648a/modules/builds/agc7648a_sfp.c
@@ -627,6 +627,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int agc7648a_sfp_probe_6_3(struct i2c_client *client)
+{
+	return agc7648a_sfp_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int agc7648a_sfp_remove(struct i2c_client *client)
 {
@@ -659,7 +665,11 @@ static struct i2c_driver agc7648a_sfp_driver = {
 	.driver = {
 		.name	= "agc7648a_sfp",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = agc7648a_sfp_probe_6_3,
+#else
 	.probe		= agc7648a_sfp_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = agc7648a_sfp_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
index dfd838fa0474..1b363101f70a 100755
--- a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
+++ b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_ak7448_psu.c
@@ -459,6 +459,12 @@ exit_sysfs_create_group:
 exit:
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int dps_800ab_16_d_probe_6_3(struct i2c_client *client)
+{
+	return dps_800ab_16_d_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int dps_800ab_16_d_remove(struct i2c_client *client)
 {
@@ -494,7 +500,11 @@ static struct i2c_driver dps_800ab_16_d_driver = {
         .driver = {
                 .name   = "dps_800ab_16_d",
         },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+        .probe = dps_800ab_16_d_probe_6_3,
+#else
         .probe          = dps_800ab_16_d_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
         .remove = dps_800ab_16_d_remove_6_1,
 #else
diff --git a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
index 92c0c1a9c44d..24fa3b5df095 100755
--- a/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
+++ b/packages/platforms/delta/x86-64/ak7448/modules/builds/dni_emc2305.c
@@ -88,7 +88,11 @@ static struct i2c_driver emc2305_driver =
   .driver = {
     .name = "emc2305",
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = emc2305_probe_6_3,
+#else
   .probe    = emc2305_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = emc2305_remove_6_1,
 #else
@@ -360,6 +364,12 @@ exit_remove:
   sysfs_remove_group(&client->dev.kobj, &data->attrs);
   return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int emc2305_probe_6_3(struct i2c_client *client)
+{
+  return emc2305_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int emc2305_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c b/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
index f68ff5d76758..2930faa55618 100755
--- a/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
+++ b/packages/platforms/delta/x86-64/modules/builds/i2c_cpld.c
@@ -409,6 +409,12 @@ virt_reg_failed:
 err:
   return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int i2c_cpld_mux_probe_6_3(struct i2c_client *client)
+{
+  return i2c_cpld_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int i2c_cpld_mux_remove(struct i2c_client *client)
 {
@@ -497,7 +503,11 @@ static struct i2c_driver i2c_cpld_mux_driver =
     .name = "cpld",
     .owner  = THIS_MODULE,
   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+  .probe = i2c_cpld_mux_probe_6_3,
+#else
   .probe    = i2c_cpld_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
   .remove = i2c_cpld_mux_remove_6_1,
 #else
diff --git a/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c b/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
index c5eb536c83dd..ca7fed5e04db 100755
--- a/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
+++ b/packages/platforms/ingrasys/x86-64/modules/builds/eeprom_mb.c
@@ -234,6 +234,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int mb_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return mb_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int mb_eeprom_remove(struct i2c_client *client)
 {
@@ -258,7 +264,11 @@ static struct i2c_driver mb_eeprom_driver = {
 	.driver = {
 		.name	= "mb_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = mb_eeprom_probe_6_3,
+#else
 	.probe		= mb_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = mb_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
index a5c0a2362434..4ca29cdbbc0b 100644
--- a/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
+++ b/packages/platforms/ingrasys/x86-64/s9230-64x/modules/builds/ingrasys_s9230_64x_i2c_cpld.c
@@ -1225,6 +1225,12 @@ exit:
     sysfs_remove_group(&client->dev.kobj, &s9230_64x_cpld345_group);
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ingrasys_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+    return ingrasys_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int ingrasys_i2c_cpld_remove(struct i2c_client *client)
@@ -1263,7 +1269,11 @@ static struct i2c_driver ingrasys_i2c_cpld_driver = {
     .driver = {
         .name = "ingrasys_i2c_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = ingrasys_i2c_cpld_probe_6_3,
+#else
     .probe = ingrasys_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = ingrasys_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
index a6ca5403b600..6010bc7e03a4 100644
--- a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
+++ b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_i2c_cpld.c
@@ -1735,6 +1735,12 @@ exit:
     sysfs_remove_group(&client->dev.kobj, &s9280_64x_cpld2345_group);
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ingrasys_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+    return ingrasys_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int ingrasys_i2c_cpld_remove(struct i2c_client *client)
@@ -1771,7 +1777,11 @@ static struct i2c_driver ingrasys_i2c_cpld_driver = {
     .driver = {
         .name = "ingrasys_i2c_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = ingrasys_i2c_cpld_probe_6_3,
+#else
     .probe = ingrasys_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = ingrasys_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
index b2246cf86903..23d55101ae18 100644
--- a/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
+++ b/packages/platforms/ingrasys/x86-64/s9280-64x/modules/builds/ingrasys_s9280_64x_psu.c
@@ -382,6 +382,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int s9280_psu_probe_6_3(struct i2c_client *client)
+{
+    return s9280_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int 
 s9280_psu_remove(struct i2c_client *client)
@@ -535,7 +541,11 @@ static struct i2c_driver s9280_psu_driver = {
     .driver = {
         .name     = DRIVER_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = s9280_psu_probe_6_3,
+#else
     .probe        = s9280_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = s9280_psu_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
index ddc59e3aec11..1ea7933465e1 100644
--- a/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d10056/modules/builds/src/inv_cpld.c
@@ -421,6 +421,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -451,7 +457,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
index 3b81ebb320c0..ee1e131d9508 100644
--- a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_cpld.c
@@ -849,6 +849,12 @@ exit_free:
 	cpld_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -879,7 +885,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
index 9c8f5891e684..2f1922b1871e 100644
--- a/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d3352/modules/builds/src/inv_psoc.c
@@ -1437,6 +1437,12 @@ exit_free:
 	psoc_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int psoc_probe_6_3(struct i2c_client *client)
+{
+	return psoc_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int psoc_remove(struct i2c_client *client)
 {
@@ -1467,7 +1473,11 @@ static struct i2c_driver psoc_driver = {
 	.driver = {
 		.name	= "inv_psoc",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = psoc_probe_6_3,
+#else
 	.probe		= psoc_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = psoc_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
index 2b4ef86d8279..3b0dff6e5682 100644
--- a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_cpld.c
@@ -540,6 +540,12 @@ exit_free:
 	cpld_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -571,7 +577,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
index d797ee670a21..3e491cea7b53 100644
--- a/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d5052/modules/builds/src/inv_psoc.c
@@ -1436,6 +1436,12 @@ exit_free:
 	psoc_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int psoc_probe_6_3(struct i2c_client *client)
+{
+	return psoc_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int psoc_remove(struct i2c_client *client)
 {
@@ -1466,7 +1472,11 @@ static struct i2c_driver psoc_driver = {
 	.driver = {
 		.name	= "inv_psoc",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = psoc_probe_6_3,
+#else
 	.probe		= psoc_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = psoc_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
index 45c6683dcac4..24889215bc27 100644
--- a/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5254/modules/builds/src/inv_cpld.c
@@ -414,6 +414,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -443,7 +449,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
index 45c6683dcac4..24889215bc27 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_cpld.c
@@ -414,6 +414,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -443,7 +449,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
index b8e6a1db259a..bd75badd7f45 100644
--- a/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d5264q28b/modules/builds/src/inv_eeprom.c
@@ -150,6 +150,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return inv_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_eeprom_remove(struct i2c_client *client)
 {
@@ -174,7 +180,11 @@ static struct i2c_driver inv_eeprom_driver = {
 	.driver = {
 		.name	= "inv_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_eeprom_probe_6_3,
+#else
 	.probe		= inv_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
index 139321f5d209..7ae73bf56bad 100644
--- a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_cpld.c
@@ -366,6 +366,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -395,7 +401,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
index b6848c3b1928..451202fd7aa6 100644
--- a/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d6254qs/modules/builds/src/inv_psoc.c
@@ -1437,6 +1437,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int psoc_probe_6_3(struct i2c_client *client)
+{
+	return psoc_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int psoc_remove(struct i2c_client *client)
 {
@@ -1466,7 +1472,11 @@ static struct i2c_driver psoc_driver = {
 	.driver = {
 		.name	= "inv_psoc",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = psoc_probe_6_3,
+#else
 	.probe		= psoc_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = psoc_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
index c5ad818773f7..f3756582ad0a 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_cpld.c
@@ -1504,6 +1504,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -1551,7 +1557,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
index b8e6a1db259a..bd75badd7f45 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/inv_eeprom.c
@@ -150,6 +150,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return inv_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_eeprom_remove(struct i2c_client *client)
 {
@@ -174,7 +180,11 @@ static struct i2c_driver inv_eeprom_driver = {
 	.driver = {
 		.name	= "inv_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_eeprom_probe_6_3,
+#else
 	.probe		= inv_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
index 8a66b906bf54..880d1b6b456b 100644
--- a/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
+++ b/packages/platforms/inventec/x86-64/d6332/modules/builds/src/ucd9000.c
@@ -229,13 +229,23 @@ static int ucd9000_probe(struct i2c_client *client,
 
 	return pmbus_do_probe(client, mid, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ucd9000_probe_6_3(struct i2c_client *client)
+{
+	return ucd9000_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* This is the driver that will be inserted */
 static struct i2c_driver ucd9000_driver = {
 	.driver = {
 		.name = "ucd9000",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = ucd9000_probe_6_3,
+#else
 	.probe = ucd9000_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
index bb71fd8e62bf..773f9bce185c 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9541.c
@@ -579,6 +579,12 @@ exit_free:
 err:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pca9541_probe_6_3(struct i2c_client *client)
+{
+	return pca9541_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int pca9541_remove(struct i2c_client *client)
 {
@@ -601,7 +607,11 @@ static struct i2c_driver pca9541_driver = {
 		   .name = "pca9541",
 		   .owner = THIS_MODULE,
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pca9541_probe_6_3,
+#else
 	.probe = pca9541_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pca9541_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
index 55e1dd3f48c5..7cbbfd81ece2 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/i2c-mux-pca9641.c
@@ -422,6 +422,12 @@ exit_free:
 err:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pca9641_probe_6_3(struct i2c_client *client)
+{
+	return pca9641_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int pca9641_remove(struct i2c_client *client)
 {
@@ -444,7 +450,11 @@ static struct i2c_driver pca9641_driver = {
 		   .name = "pca9641",
 		   .owner = THIS_MODULE,
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pca9641_probe_6_3,
+#else
 	.probe = pca9641_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pca9641_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
index 277dc764e67a..0a86a5d05002 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv-i2c-mux-pca9641.c
@@ -548,6 +548,12 @@ static int pca9641_probe(struct i2c_client *client,
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pca9641_probe_6_3(struct i2c_client *client)
+{
+	return pca9641_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int pca9641_remove(struct i2c_client *client)
 {
@@ -568,7 +574,11 @@ static struct i2c_driver pca9641_driver = {
 		   .name = "pca9641",
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pca9641_probe_6_3,
+#else
 	.probe = pca9641_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pca9641_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
index 01b727ec0e3f..38fc1020d778 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_cpld.c
@@ -944,6 +944,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {	
@@ -978,7 +984,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
index b8e6a1db259a..bd75badd7f45 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/inv_eeprom.c
@@ -150,6 +150,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return inv_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_eeprom_remove(struct i2c_client *client)
 {
@@ -174,7 +180,11 @@ static struct i2c_driver inv_eeprom_driver = {
 	.driver = {
 		.name	= "inv_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_eeprom_probe_6_3,
+#else
 	.probe		= inv_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
index b44675e5891d..8b6697d2e9e2 100644
--- a/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
+++ b/packages/platforms/inventec/x86-64/d6356/modules/builds/src/ucd9000.c
@@ -229,13 +229,23 @@ static int ucd9000_probe(struct i2c_client *client,
 
 	return pmbus_do_probe(client, mid, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int ucd9000_probe_6_3(struct i2c_client *client)
+{
+	return ucd9000_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* This is the driver that will be inserted */
 static struct i2c_driver ucd9000_driver = {
 	.driver = {
 		.name = "ucd9000",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = ucd9000_probe_6_3,
+#else
 	.probe = ucd9000_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
index 0f5d3e14b87a..44ad35ec886e 100644
--- a/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d6556/modules/builds/src/inv_cpld.c
@@ -586,6 +586,12 @@ exit_free:
 	cpld_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -617,7 +623,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
index 545bcd03eb57..4c2356dc2272 100644
--- a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_cpld.c
@@ -519,6 +519,12 @@ exit_free:
 	cpld_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -549,7 +555,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
index 9afbe8a62e77..ba96bdb6b4b6 100644
--- a/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d7032q28b/modules/builds/src/inv_psoc.c
@@ -1217,6 +1217,12 @@ exit_free:
 	psoc_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int psoc_probe_6_3(struct i2c_client *client)
+{
+	return psoc_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int psoc_remove(struct i2c_client *client)
 {
@@ -1247,7 +1253,11 @@ static struct i2c_driver psoc_driver = {
 	.driver = {
 		.name	= "inv_psoc",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = psoc_probe_6_3,
+#else
 	.probe		= psoc_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = psoc_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
index 312125d93c16..28c8a0d917fe 100644
--- a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_cpld.c
@@ -488,6 +488,12 @@ exit_free:
 	cpld_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -518,7 +524,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
index ff1e2afb5267..1ac6368ffe6f 100644
--- a/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
+++ b/packages/platforms/inventec/x86-64/d7054q28b/modules/builds/src/inv_psoc.c
@@ -1160,6 +1160,12 @@ exit_free:
 	psoc_led_client_dev = NULL;
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int psoc_probe_6_3(struct i2c_client *client)
+{
+	return psoc_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int psoc_remove(struct i2c_client *client)
 {
@@ -1190,7 +1196,11 @@ static struct i2c_driver psoc_driver = {
 	.driver = {
 		.name	= "inv_psoc",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = psoc_probe_6_3,
+#else
 	.probe		= psoc_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = psoc_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
index 72744b5d1ca1..2c66696697e4 100644
--- a/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7264q28b/modules/builds/src/inv_cpld.c
@@ -545,6 +545,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -575,7 +581,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
index 277dc764e67a..0a86a5d05002 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv-i2c-mux-pca9641.c
@@ -548,6 +548,12 @@ static int pca9641_probe(struct i2c_client *client,
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pca9641_probe_6_3(struct i2c_client *client)
+{
+	return pca9641_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int pca9641_remove(struct i2c_client *client)
 {
@@ -568,7 +574,11 @@ static struct i2c_driver pca9641_driver = {
 		   .name = "pca9641",
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pca9641_probe_6_3,
+#else
 	.probe = pca9641_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pca9641_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
index e875df2eb2c0..13531e41b171 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_cpld.c
@@ -728,6 +728,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {	
@@ -761,7 +767,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "inv_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
index b8e6a1db259a..bd75badd7f45 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_eeprom.c
@@ -150,6 +150,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return inv_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_eeprom_remove(struct i2c_client *client)
 {
@@ -174,7 +180,11 @@ static struct i2c_driver inv_eeprom_driver = {
 	.driver = {
 		.name	= "inv_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_eeprom_probe_6_3,
+#else
 	.probe		= inv_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
index b93c1649f38a..782127286e81 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_psu.c
@@ -644,6 +644,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_psu_probe_6_3(struct i2c_client *client)
+{
+	return inv_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_psu_remove(struct i2c_client *client)
 {
@@ -673,7 +679,11 @@ static struct i2c_driver psu_driver = {
 	.driver = {
 		.name	= "inv_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_psu_probe_6_3,
+#else
 	.probe		= inv_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_psu_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
index 79fc61e60735..76bb1ac9d9f2 100644
--- a/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
+++ b/packages/platforms/inventec/x86-64/d7332/modules/builds/src/inv_ucd90160.c
@@ -211,6 +211,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_ucd90160_probe_6_3(struct i2c_client *client)
+{
+	return inv_ucd90160_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_ucd90160_remove(struct i2c_client *client)
 {
@@ -243,7 +249,11 @@ static struct i2c_driver ucd90160_driver = {
 	.driver = {
 		.name	= "inv_ucd90160",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_ucd90160_probe_6_3,
+#else
 	.probe		= inv_ucd90160_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_ucd90160_remove_6_1,
 #else
diff --git a/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c b/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
index 76abfa8b2607..f44792a9ae72 100644
--- a/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
+++ b/packages/platforms/inventec/x86-64/modules/builds/src/inv_eeprom.c
@@ -159,6 +159,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int inv_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return inv_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int inv_eeprom_remove(struct i2c_client *client)
 {
@@ -183,7 +189,11 @@ static struct i2c_driver inv_eeprom_driver = {
 	.driver = {
 		.name	= "inv_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = inv_eeprom_probe_6_3,
+#else
 	.probe		= inv_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = inv_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
index 4e33632710ae..c0305f0080b1 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-fse000.c
@@ -1765,6 +1765,12 @@ static int pmbus_probe(struct i2c_client *client,
 
 	return pmbus_do_probe(client, id, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pmbus_probe_6_3(struct i2c_client *client)
+{
+	return pmbus_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /*
  * Use driver_data to set the number of pages supported by the chip.
@@ -1781,7 +1787,11 @@ static struct i2c_driver pmbus_driver = {
 	.driver = {
 		   .name = "fse000",
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pmbus_probe_6_3,
+#else
 	.probe = pmbus_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
index db20948696f5..f459c65b9485 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-master_cpld.c
@@ -459,6 +459,12 @@ static int master_cpld_probe(struct i2c_client *client, const struct i2c_device_
     return 0;
 
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int master_cpld_probe_6_3(struct i2c_client *client)
+{
+    return master_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int master_cpld_remove(struct i2c_client *client)
 {
@@ -485,7 +491,11 @@ static struct i2c_driver master_cpld_driver = {
         .name = "master_cpld",
         .owner = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = master_cpld_probe_6_3,
+#else
     .probe = master_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = master_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
index 70fb2b2294ea..e69348534638 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-slave_cpld.c
@@ -383,6 +383,12 @@ static int slave_cpld_probe(struct i2c_client *client, const struct i2c_device_i
     return 0;
 
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int slave_cpld_probe_6_3(struct i2c_client *client)
+{
+    return slave_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int slave_cpld_remove(struct i2c_client *client)
 {
@@ -409,7 +415,11 @@ static struct i2c_driver slave_cpld_driver = {
         .name = "slave_cpld",
         .owner = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = slave_cpld_probe_6_3,
+#else
     .probe = slave_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = slave_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
index 657411475faa..a333d22733ae 100644
--- a/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
+++ b/packages/platforms/mitac/x86-64/ly1200-b32h0-c3/modules/builds/x86-64-mitac-ly1200-b32h0-c3-system_cpld.c
@@ -514,6 +514,12 @@ static int system_cpld_probe(struct i2c_client *client, const struct i2c_device_
     return 0;
 
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int system_cpld_probe_6_3(struct i2c_client *client)
+{
+    return system_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int system_cpld_remove(struct i2c_client *client)
 {
@@ -538,7 +544,11 @@ static struct i2c_driver system_cpld_driver = {
         .name = "system_cpld",
         .owner = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = system_cpld_probe_6_3,
+#else
     .probe = system_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = system_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c b/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
index 34e095828fd6..b0e1c7db3213 100644
--- a/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-610/modules/builds/src/net_cpld.c
@@ -420,7 +420,13 @@ exit_free:
 	i2c_set_clientdata(client, NULL);
 	kfree(data);
 	return status;
-}
+}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {
@@ -451,7 +457,12 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "net_cpld",
 	},
-	.probe		= cpld_probe,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
+	.probe		= cpld_probe,
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
index 8126ecb618d5..c65e7662f15f 100644
--- a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_i2c_cpld.c
@@ -1707,6 +1707,12 @@ exit:
     sysfs_remove_group(&client->dev.kobj, &aurora_750_cpld2345_group);
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int netberg_i2c_cpld_probe_6_3(struct i2c_client *client)
+{
+    return netberg_i2c_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int netberg_i2c_cpld_remove(struct i2c_client *client)
@@ -1743,7 +1749,11 @@ static struct i2c_driver netberg_i2c_cpld_driver = {
     .driver = {
         .name = "netberg_i2c_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = netberg_i2c_cpld_probe_6_3,
+#else
     .probe = netberg_i2c_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = netberg_i2c_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
index d0d9c64660ac..baea9ae432e3 100644
--- a/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
+++ b/packages/platforms/netberg/x86-64/aurora-750/modules/builds/netberg_aurora_750_psu.c
@@ -382,6 +382,12 @@ exit:
     
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int nba750_psu_probe_6_3(struct i2c_client *client)
+{
+    return nba750_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int 
 nba750_psu_remove(struct i2c_client *client)
@@ -535,7 +541,11 @@ static struct i2c_driver nba750_psu_driver = {
     .driver = {
         .name     = DRIVER_NAME,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = nba750_psu_probe_6_3,
+#else
     .probe        = nba750_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = nba750_psu_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
index 277dc764e67a..0a86a5d05002 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net-i2c-mux-pca9641.c
@@ -548,6 +548,12 @@ static int pca9641_probe(struct i2c_client *client,
 
 	return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pca9641_probe_6_3(struct i2c_client *client)
+{
+	return pca9641_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int pca9641_remove(struct i2c_client *client)
 {
@@ -568,7 +574,11 @@ static struct i2c_driver pca9641_driver = {
 		   .name = "pca9641",
 		   .of_match_table = of_match_ptr(pca9641_of_match),
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = pca9641_probe_6_3,
+#else
 	.probe = pca9641_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pca9641_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
index 7e3dda5cb253..2f46b142fab9 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_cpld.c
@@ -728,6 +728,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpld_probe_6_3(struct i2c_client *client)
+{
+	return cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpld_remove(struct i2c_client *client)
 {	
@@ -761,7 +767,11 @@ static struct i2c_driver cpld_driver = {
 	.driver = {
 		.name	= "net_cpld",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = cpld_probe_6_3,
+#else
 	.probe		= cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = cpld_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
index 01ed106b5098..544580460dc4 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_eeprom.c
@@ -150,6 +150,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int net_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return net_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int net_eeprom_remove(struct i2c_client *client)
 {
@@ -174,7 +180,11 @@ static struct i2c_driver net_eeprom_driver = {
 	.driver = {
 		.name	= "net_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = net_eeprom_probe_6_3,
+#else
 	.probe		= net_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = net_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
index 17ca809d11f0..b60982bb1665 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_psu.c
@@ -644,6 +644,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int net_psu_probe_6_3(struct i2c_client *client)
+{
+	return net_psu_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int net_psu_remove(struct i2c_client *client)
 {
@@ -673,7 +679,11 @@ static struct i2c_driver psu_driver = {
 	.driver = {
 		.name	= "net_psu",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = net_psu_probe_6_3,
+#else
 	.probe		= net_psu_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = net_psu_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
index c4e05ed6a6b9..9ad917073a1d 100644
--- a/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
+++ b/packages/platforms/netberg/x86-64/aurora-820/modules/builds/src/net_ucd90160.c
@@ -211,6 +211,12 @@ exit_free:
 	kfree(data);
 	return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int net_ucd90160_probe_6_3(struct i2c_client *client)
+{
+	return net_ucd90160_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int net_ucd90160_remove(struct i2c_client *client)
 {
@@ -243,7 +249,11 @@ static struct i2c_driver ucd90160_driver = {
 	.driver = {
 		.name	= "net_ucd90160",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = net_ucd90160_probe_6_3,
+#else
 	.probe		= net_ucd90160_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = net_ucd90160_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c b/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
index bb8a765e1139..66000a964bb2 100755
--- a/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
+++ b/packages/platforms/netberg/x86-64/modules/builds/eeprom_mb.c
@@ -234,6 +234,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int mb_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return mb_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int mb_eeprom_remove(struct i2c_client *client)
 {
@@ -258,7 +264,11 @@ static struct i2c_driver mb_eeprom_driver = {
 	.driver = {
 		.name	= "mb_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = mb_eeprom_probe_6_3,
+#else
 	.probe		= mb_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = mb_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c b/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
index 1bc538c10185..0f18f1ef54f6 100755
--- a/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
+++ b/packages/platforms/netberg/x86-64/modules/builds/hardware_monitor.c
@@ -457,7 +457,11 @@ static struct i2c_driver w83795adg_hardware_monitor_driver = {
     .driver = {
       .name = "w83795adg_hardware_monitor",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = w83795adg_hardware_monitor_probe_6_3,
+#else
     .probe    = w83795adg_hardware_monitor_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = w83795adg_hardware_monitor_remove_6_1,
 #else
@@ -8652,6 +8656,12 @@ static int w83795adg_hardware_monitor_probe(struct i2c_client *client,
 
     return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int w83795adg_hardware_monitor_probe_6_3(struct i2c_client *client)
+{
+    return w83795adg_hardware_monitor_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int w83795adg_hardware_monitor_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
index e7a332e234ac..a981ddd5c63b 100644
--- a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
+++ b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly-hwmon.c
@@ -61,7 +61,11 @@ static struct i2c_driver quanta_ly_hwmon_driver = {
 	.driver = {
 		.name	= "quanta_ly_hwmon",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = quanta_ly_hwmon_probe_6_3,
+#else
 	.probe		= quanta_ly_hwmon_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = quanta_ly_hwmon_remove_6_1,
 #else
@@ -285,6 +289,12 @@ exit_remove:
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int quanta_ly_hwmon_probe_6_3(struct i2c_client *client)
+{
+	return quanta_ly_hwmon_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int quanta_ly_hwmon_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
index 4d045e87b1f3..21114496d67b 100644
--- a/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
+++ b/packages/platforms/quanta/powerpc/ly2/modules/builds/quanta-ly2-i2c-mux.c
@@ -319,6 +319,12 @@ exit_free:
 err:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int quanta_ly2_i2c_mux_probe_6_3(struct i2c_client *client)
+{
+	return quanta_ly2_i2c_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int quanta_ly2_i2c_mux_remove(struct i2c_client *client)
 {
@@ -350,7 +356,11 @@ static struct i2c_driver quanta_ly2_i2c_mux_driver = {
 		   .name = "quanta_ly2_i2c_mux",
 		   .owner = THIS_MODULE,
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = quanta_ly2_i2c_mux_probe_6_3,
+#else
 	.probe = quanta_ly2_i2c_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = quanta_ly2_i2c_mux_remove_6_1,
 #else
diff --git a/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c b/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
index 22b6ecff1be9..2c0324741660 100644
--- a/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
+++ b/packages/platforms/quanta/x86-64/ly6-rangeley/modules/builds/quanta-ly6-i2c-mux.c
@@ -263,6 +263,12 @@ exit_free:
 err:
 	return ret;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int quanta_ly6_i2c_mux_probe_6_3(struct i2c_client *client)
+{
+	return quanta_ly6_i2c_mux_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int quanta_ly6_i2c_mux_remove(struct i2c_client *client)
 {
@@ -288,7 +294,11 @@ static struct i2c_driver quanta_ly6_i2c_mux_driver = {
 		   .name = "quanta_ly6_i2c_mux",
 		   .owner = THIS_MODULE,
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = quanta_ly6_i2c_mux_probe_6_3,
+#else
 	.probe = quanta_ly6_i2c_mux_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = quanta_ly6_i2c_mux_remove_6_1,
 #else
diff --git a/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c b/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
index 675f579676c1..6f4aca8ee089 100644
--- a/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/qci_pmbus.c
@@ -465,13 +465,23 @@ static int qci_pmbus_probe(struct i2c_client *client,
 
 	return pmbus_do_probe(client, id, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int qci_pmbus_probe_6_3(struct i2c_client *client)
+{
+	return qci_pmbus_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* This is the driver that will be inserted */
 static struct i2c_driver qci_pmbus_driver = {
 	.driver = {
 		   .name = "qci-pmbus",
 		   },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = qci_pmbus_probe_6_3,
+#else
 	.probe = qci_pmbus_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
index b2db107d222e..73ca03c2a534 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ix_series.c
@@ -67,7 +67,11 @@ static struct i2c_driver quanta_hwmon_ix_series_driver = {
 	.driver = {
 		.name	= "quanta_hwmon_ix_series",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = quanta_hwmon_ix_series_probe_6_3,
+#else
 	.probe		= quanta_hwmon_ix_series_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = quanta_hwmon_ix_series_remove_6_1,
 #else
@@ -239,6 +243,12 @@ exit_remove:
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int quanta_hwmon_ix_series_probe_6_3(struct i2c_client *client)
+{
+	return quanta_hwmon_ix_series_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int quanta_hwmon_ix_series_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
index 2228116a91b3..9c1ce8a2b520 100755
--- a/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
+++ b/packages/platforms/quanta/x86-64/modules/builds/quanta_hwmon_ly_series.c
@@ -71,7 +71,11 @@ static struct i2c_driver quanta_hwmon_ly_series_driver = {
 	.driver = {
 		.name	= "quanta_hwmon_ly_series",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = quanta_hwmon_ly_series_probe_6_3,
+#else
 	.probe		= quanta_hwmon_ly_series_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = quanta_hwmon_ly_series_remove_6_1,
 #else
@@ -238,6 +242,12 @@ exit_remove:
 	sysfs_remove_group(&client->dev.kobj, &data->attrs);
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int quanta_hwmon_ly_series_probe_6_3(struct i2c_client *client)
+{
+	return quanta_hwmon_ly_series_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int quanta_hwmon_ly_series_remove(struct i2c_client *client)
 {
diff --git a/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c b/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
index c4d5ef28e425..b343f91bc746 100755
--- a/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
+++ b/packages/platforms/ufispace/x86-64/modules/builds/src/x86-64-ufispace-eeprom-mb.c
@@ -234,6 +234,12 @@ exit_kfree:
 exit:
 	return err;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int mb_eeprom_probe_6_3(struct i2c_client *client)
+{
+	return mb_eeprom_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int mb_eeprom_remove(struct i2c_client *client)
 {
@@ -258,7 +264,11 @@ static struct i2c_driver mb_eeprom_driver = {
 	.driver = {
 		.name	= "mb_eeprom",
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = mb_eeprom_probe_6_3,
+#else
 	.probe		= mb_eeprom_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = mb_eeprom_remove_6_1,
 #else
diff --git a/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c b/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
index 25f9475569f3..033b2bc32cbb 100644
--- a/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9700-23d/modules/builds/src/x86-64-ufispace-s9700-23d-cpld.c
@@ -1550,6 +1550,12 @@ exit:
     }
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int apollo_cpld_probe_6_3(struct i2c_client *client)
+{
+    return apollo_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int apollo_cpld_remove(struct i2c_client *client)
@@ -1585,7 +1591,11 @@ static struct i2c_driver apollo_cpld_driver = {
     .driver = {
         .name = "x86_64_ufispace_s9700_23d_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = apollo_cpld_probe_6_3,
+#else
     .probe = apollo_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = apollo_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c b/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
index 030a257d1233..048fe49ccde4 100644
--- a/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9700-53dx/modules/builds/src/x86-64-ufispace-s9700-53dx-cpld.c
@@ -1764,6 +1764,12 @@ exit:
     }
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int apollo_cpld_probe_6_3(struct i2c_client *client)
+{
+    return apollo_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int apollo_cpld_remove(struct i2c_client *client)
@@ -1803,7 +1809,11 @@ static struct i2c_driver apollo_cpld_driver = {
     .driver = {
         .name = "x86_64_ufispace_s9700_53dx_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = apollo_cpld_probe_6_3,
+#else
     .probe = apollo_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = apollo_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c b/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
index ac3b28df36c4..9646f58788dc 100644
--- a/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
+++ b/packages/platforms/ufispace/x86-64/s9705-48d/modules/builds/src/x86-64-ufispace-s9705-48d-cpld.c
@@ -1495,6 +1495,12 @@ exit:
     }
     return status;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int apollo_cpld_probe_6_3(struct i2c_client *client)
+{
+    return apollo_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 /* cpld drvier remove */
 static int apollo_cpld_remove(struct i2c_client *client)
@@ -1533,7 +1539,11 @@ static struct i2c_driver apollo_cpld_driver = {
     .driver = {
         .name = "x86_64_ufispace_s9705_48d_cpld",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = apollo_cpld_probe_6_3,
+#else
     .probe = apollo_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = apollo_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
index d31babc525fe..c1a0332b7f1a 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-cpu_cpld.c
@@ -270,6 +270,12 @@ static int cpu_cpld_probe(struct i2c_client *client, const struct i2c_device_id
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int cpu_cpld_probe_6_3(struct i2c_client *client)
+{
+    return cpu_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int cpu_cpld_remove(struct i2c_client *client)
 {
@@ -290,7 +296,11 @@ static struct i2c_driver cpu_cpld_driver = {
         .name = "rseb_w1_32_cpu_cpld",
         .owner = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = cpu_cpld_probe_6_3,
+#else
     .probe = cpu_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = cpu_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
index fd4e9c812871..c20a11dd33ca 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32-system_cpld.c
@@ -430,6 +430,12 @@ static int system_cpld_probe(struct i2c_client *client, const struct i2c_device_
 
     return 0;
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int system_cpld_probe_6_3(struct i2c_client *client)
+{
+    return system_cpld_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static int system_cpld_remove(struct i2c_client *client)
 {
@@ -450,7 +456,11 @@ static struct i2c_driver system_cpld_driver = {
         .name = "rseb_w1_32_sys_cpld",
         .owner = THIS_MODULE,
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = system_cpld_probe_6_3,
+#else
     .probe = system_cpld_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = system_cpld_remove_6_1,
 #else
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
index 5e4e3c6a4947..0be04e707c59 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/rseb-w1-32_psu.c
@@ -2102,6 +2102,12 @@ static int pmbus_probe(struct i2c_client *client,
 
     return _pmbus_do_probe(client, id, info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int pmbus_probe_6_3(struct i2c_client *client)
+{
+    return pmbus_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 int _pmbus_do_remove(struct i2c_client *client)
 {
@@ -2124,7 +2130,11 @@ static struct i2c_driver pmbus_driver = {
     .driver = {
         .name = "rseb_w1_32_psu",
     },
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+    .probe = pmbus_probe_6_3,
+#else
     .probe = pmbus_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
     .remove = _pmbus_do_remove_6_1,
 #else
diff --git a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
index 4cab782aefad..45de9dc3a5da 100644
--- a/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
+++ b/packages/platforms/wnc/x86-64/x86-64-wnc-rseb-w1-32/modules/builds/tps53681.c
@@ -318,6 +318,12 @@ static int tps53681_probe(struct i2c_client *client,
 {
 	return pmbus_do_probe(client, id, &tps53681_info);
 }
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static int tps53681_probe_6_3(struct i2c_client *client)
+{
+	return tps53681_probe(client, i2c_client_get_device_id(client));
+}
+#endif
 
 static const struct i2c_device_id tps53681_id[] = {
 	{"tps53681", 0},
@@ -339,7 +345,11 @@ static struct i2c_driver tps53681_driver = {
 		.name = "tps53681",
 		.of_match_table = of_match_ptr(tps53681_of_match),
 	},
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+	.probe = tps53681_probe_6_3,
+#else
 	.probe = tps53681_probe,
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
 	.remove = pmbus_do_remove_6_1,
 #else
-- 
2.43.0

